    local ScreenGui = Instance.new("ScreenGui")
    local Frame = Instance.new("ImageLabel")
    local TextLabel = Instance.new("TextLabel")
    ScreenGui.Parent = game:WaitForChild("CoreGui")

    Frame.Name = "Frame"
    Frame.Parent = ScreenGui
    Frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Frame.BackgroundTransparency = 1.000
    Frame.Position = UDim2.new(0.415104181, 0, 0.461263418, 0)
    Frame.Size = UDim2.new(0, 325, 0, 5)
    Frame.Image = "rbxassetid://3570695787"
    Frame.ImageColor3 = Color3.fromRGB(36, 36, 36)
    Frame.ScaleType = Enum.ScaleType.Slice
    Frame.SliceCenter = Rect.new(100, 100, 100, 100)
    Frame.SliceScale = 0.040
    Frame.ImageTransparency = 1

    TextLabel.Parent = Frame
    TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TextLabel.BackgroundTransparency = 1.000
    TextLabel.Position = UDim2.new(0, 0, 0.162162155, 0)
    TextLabel.Size = UDim2.new(0, 325, 0, 50)
    TextLabel.Text = "Welcome, "..game.Players.LocalPlayer.Name.."."
    TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    TextLabel.TextSize = 15
    TextLabel.TextTransparency = 1
    -- Blur
    blur = Instance.new("BlurEffect", game.Lighting)
    blur.Size = 0
    -- Checks
    LoadedVers1 = false
    DoneClear = false
    -- Loop 
    spawn(function()
        local Chars = {
            {48, 57}, -- 0-9
            {65, 90}, -- A-Z
            {97, 122}, -- a-z
        }
        function Gen(Length)
            local String = ""
            if Length and type(Length) == "number" then
                for I = 1, Length do
                    local Select = Chars[math.random(1,#Chars)]
                    String = String..string.char(math.random(Select[1], Select[2]))
                end
            end
            return String
        end
        repeat wait(.1)
            ScreenGui.Name = Gen(50)
            Frame.Name = Gen(50)
            TextLabel.Name = Gen(50)
        until DoneClear == true
    end)

    -- Script
    for i=1,40 do -- Tweens and makes it visible
        wait()
        blur.Size = 1*i
        Frame:TweenSize(UDim2.new(0, 325, 0, 74),1,5)
        Frame.ImageTransparency = 1 - 0.05*i
        TextLabel.TextTransparency = 1 - 0.04*i
    end
    if Frame.Size == UDim2.new(0, 1, 0, 74) then -- Checks if it Tweened
        repeat wait(.001)
            Frame:TweenSize(UDim2.new(0, 325, 0, 74),1)
        until Frame.Size == UDim2.new(0, 1, 0, 74)
        LoadedVers1 = true
    else 
        LoadedVers1 = true
    end
    print ("SharpLogs | Check:1 Done!")
    wait(1)

    if LoadedVers1 then
        for i=1,40 do
            wait()
            Frame:TweenSize(UDim2.new(0, 325, 0, 1),2,2)
            Frame.ImageTransparency = 0 + 0.09*i
            TextLabel.TextTransparency = 0 + 0.09*i
            blur.Size = 40 - 1*i
        end
    end
    print ("SharpLogs | Check:2 Done!")
    pcall(function()
        if game:GetService("Lighting").Blur then
            game:GetService("Lighting").Blur:Remove()
        end
    end)
    print ("SharpLogs | Check:3 Done!")
    wait(.3)
    print("SharpLogs | Loading")
    ScreenGui:Remove()
    -- Sharphub
    gamedetected = false
    GameScript = true
    function arsenal()
    local UserInputService = game:GetService("UserInputService")
    local TweenService = game:GetService("TweenService")
    local RunService = game:GetService("RunService")

    local Mouse = game:GetService("Players").LocalPlayer:GetMouse()

    local RainbowModeColorValue = 0
    local ColorPickerZIndex = 1

    local RainbowModeColorValue = 0
    local ColorPickerZIndex = 1

    local WindowPosition = 0

    local CoastifiedLibrary = Instance.new("ScreenGui")
    local Container = Instance.new("Frame")

    CoastifiedLibrary.Name = "CoastifiedLibrary"
    CoastifiedLibrary.Parent = game:GetService("CoreGui")

    Container.Name = "Container"
    Container.Parent = CoastifiedLibrary
    Container.BackgroundColor3 = Color3.new(1, 1, 1)
    Container.BackgroundTransparency = 1
    Container.Size = UDim2.new(0, 100, 0, 100)

    UserInputService.InputBegan:Connect(function(input)
        if input.KeyCode == Enum.KeyCode.RightControl then
            CoastifiedLibrary.Enabled = not CoastifiedLibrary.Enabled
        end
    end)

    function Dragging(instancename)
        local dragging = nil
        local dragInput = nil
        local dragStart = nil
        local startPos = nil

        local function update(input)
            local delta = input.Position - dragStart
            instancename.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end

        instancename.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                dragging = true
                dragStart = input.Position
                startPos = instancename.Position
                
                input.Changed:Connect(function()
                    if input.UserInputState == Enum.UserInputState.End then
                        dragging = false
                    end
                end)
            end
        end)

        instancename.InputChanged:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
                dragInput = input
            end
        end)

        UserInputService.InputChanged:Connect(function(input)
            if input == dragInput and dragging then
                update(input)
            end
        end)
    end

    local function RemoveSpaces(str)
        return str:gsub(" ", "")
    end

    coroutine.wrap(function()
        while wait() do
            RainbowModeColorValue = RainbowModeColorValue + 1/255
            if RainbowModeColorValue >= 1 then
                RainbowModeColorValue = 0
            end
        end
    end)()


    local Library = {}

    function Library:NewWindow(name)
        local Window = Instance.new("ImageLabel")
        local Topbar = Instance.new("Frame")
        local WindowToggle = Instance.new("TextButton")
        local WindowTitle = Instance.new("TextLabel")
        local BottomRoundCover = Instance.new("Frame")
        local Body = Instance.new("ImageLabel")
        local Sorter = Instance.new("UIListLayout")
        local TopbarBodyCover = Instance.new("Frame")

        local WindowName = RemoveSpaces(name)

        WindowPosition = WindowPosition + 2

        local BodyYSize = 35
        local IsTabOpen = true

        local function ExtendBodySize(value)
            BodyYSize = BodyYSize + value

            TweenService:Create(Body, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 170, 0, BodyYSize)}):Play()
        end

        local function UnExtendBodySize(value)
            BodyYSize = BodyYSize - value

            TweenService:Create(Body, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 170, 0, BodyYSize)}):Play()
        end

        
        Window.Name = (WindowName .. "Window")
        Window.Parent = Container
        Window.BackgroundColor3 = Color3.new(0.0980392, 0.0980392, 0.0980392)
        Window.BackgroundTransparency = 1
        Window.Position = UDim2.new(WindowPosition, -100, 3, -265)
        Window.Size = UDim2.new(0, 170, 0, 30)
        Window.ZIndex = 2
        Window.Image = "rbxassetid://3570695787"
        Window.ImageColor3 = Color3.new(0.0980392, 0.0980392, 0.0980392)
        Window.ScaleType = Enum.ScaleType.Slice
        Window.SliceCenter = Rect.new(100, 100, 100, 100)
        Window.SliceScale =  0.05

        Topbar.Name = "Topbar"
        Topbar.Parent = Window
        Topbar.BackgroundColor3 = Color3.new(1, 1, 1)
        Topbar.BackgroundTransparency = 1
        Topbar.BorderSizePixel = 0
        Topbar.Size = UDim2.new(0, 170, 0, 30)
        Topbar.ZIndex = 2

        WindowToggle.Name = "WindowToggle"
        WindowToggle.Parent = Topbar
        WindowToggle.BackgroundColor3 = Color3.new(1, 1, 1)
        WindowToggle.BackgroundTransparency = 1
        WindowToggle.Position = UDim2.new(0.822450161, 0, 0, 0)
        WindowToggle.Size = UDim2.new(0, 30, 0, 30)
        WindowToggle.ZIndex = 2
        WindowToggle.Font = Enum.Font.SourceSansSemibold
        WindowToggle.Text = "-"
        WindowToggle.TextColor3 = Color3.new(1, 1, 1)
        WindowToggle.TextSize = 20
        WindowToggle.TextWrapped = true

        WindowToggle.MouseButton1Down:Connect(function()
            if not IsTabOpen then
                IsTabOpen = true
                TweenService:Create(WindowToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 1}):Play()

                WindowToggle.Text = "-"
                WindowToggle.TextSize = 20
                WindowToggle.Visible = false
    
                repeat wait() until WindowToggle.TextTransparency == 1
                WindowToggle.Visible = true
                TweenService:Create(WindowToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
            elseif IsTabOpen then
                IsTabOpen = false
                TweenService:Create(WindowToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 1}):Play()
            
                WindowToggle.Text = "v"
                WindowToggle.TextSize = 14
                WindowToggle.Visible = false       

                repeat wait() until WindowToggle.TextTransparency == 1
                WindowToggle.Visible = true
                TweenService:Create(WindowToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
            end
        end)

        WindowTitle.Name = "WindowTitle"
        WindowTitle.Parent = Topbar
        WindowTitle.BackgroundColor3 = Color3.new(1, 1, 1)
        WindowTitle.BackgroundTransparency = 1
        WindowTitle.Size = UDim2.new(0, 170, 0, 30)
        WindowTitle.ZIndex = 2
        WindowTitle.Font = Enum.Font.SourceSansBold
        WindowTitle.Text = name
        WindowTitle.TextColor3 = Color3.new(1, 1, 1)
        WindowTitle.TextSize = 17

        BottomRoundCover.Name = "BottomRoundCover"
        BottomRoundCover.Parent = Topbar
        BottomRoundCover.BackgroundColor3 = Color3.new(0.0980392, 0.0980392, 0.0980392)
        BottomRoundCover.BorderSizePixel = 0
        BottomRoundCover.Position = UDim2.new(0, 0, 0.833333313, 0)
        BottomRoundCover.Size = UDim2.new(0, 170, 0, 5)
        BottomRoundCover.ZIndex = 2

        Body.Name = "Body"
        Body.Parent = Window
        Body.BackgroundColor3 = Color3.new(0.137255, 0.137255, 0.137255)
        Body.BackgroundTransparency = 1
        Body.ClipsDescendants = true
        Body.Size = UDim2.new(0, 170, 0, BodyYSize)
        Body.Image = "rbxassetid://3570695787"
        Body.ImageColor3 = Color3.new(0.137255, 0.137255, 0.137255)
        Body.ScaleType = Enum.ScaleType.Slice
        Body.SliceCenter = Rect.new(100, 100, 100, 100)
        Body.SliceScale =  0.05

        Sorter.Name = "Sorter"
        Sorter.Parent = Body
        Sorter.SortOrder = Enum.SortOrder.LayoutOrder

        TopbarBodyCover.Name = "TopbarBodyCover"
        TopbarBodyCover.Parent = Body
        TopbarBodyCover.BackgroundColor3 = Color3.new(1, 1, 1)
        TopbarBodyCover.BackgroundTransparency = 1
        TopbarBodyCover.BorderSizePixel = 0
        TopbarBodyCover.Size = UDim2.new(0, 170, 0, 30)

        Dragging(Window)

        local Sections = {}

        function Sections:NewSection(name)
            local Section1Holder = Instance.new("Frame")
            local SectionInfo = Instance.new("Frame")
            local SectionToggle = Instance.new("TextButton")
            local SectionTitle = Instance.new("TextLabel")
            local Layout = Instance.new("UIListLayout")

            local SectionName = RemoveSpaces(name)
            local SectionToggleText = "v"
            local SectionYSize = 30
            local IsSectionOpen = false

            local function ExtendSectionSize(value)
                SectionYSize = SectionYSize + value
        
                TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 170, 0, SectionYSize)}):Play()
            end
        
            local function UnExtendSectionSize(value)
                SectionYSize = SectionYSize - value
        
                TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 170, 0, SectionYSize)}):Play()
            end

            Section1Holder.Name = (SectionName .. "Section")
            Section1Holder.Parent = Body
            Section1Holder.BackgroundColor3 = Color3.new(0.176471, 0.176471, 0.176471)
            Section1Holder.BorderSizePixel = 0
            Section1Holder.ClipsDescendants = true
            Section1Holder.Size = UDim2.new(0, 170, 0, SectionYSize)
            
            ExtendBodySize(30)

            SectionInfo.Name = "SectionInfo"
            SectionInfo.Parent = Section1Holder
            SectionInfo.BackgroundColor3 = Color3.new(1, 1, 1)
            SectionInfo.BackgroundTransparency = 1
            SectionInfo.Size = UDim2.new(0, 170, 0, 30)
            
            SectionToggle.Name = "SectionToggle"
            SectionToggle.Parent = SectionInfo
            SectionToggle.BackgroundColor3 = Color3.new(1, 1, 1)
            SectionToggle.BackgroundTransparency = 1
            SectionToggle.Position = UDim2.new(0.822450161, 0, 0, 0)
            SectionToggle.Size = UDim2.new(0, 30, 0, 30)
            SectionToggle.ZIndex = 2
            SectionToggle.Font = Enum.Font.SourceSansSemibold
            SectionToggle.Text = SectionToggleText
            SectionToggle.TextColor3 = Color3.new(1, 1, 1)
            SectionToggle.TextSize = 14
            SectionToggle.TextWrapped = true
            
            SectionTitle.Name = "SectionTitle"
            SectionTitle.Parent = SectionInfo
            SectionTitle.BackgroundColor3 = Color3.new(1, 1, 1)
            SectionTitle.BackgroundTransparency = 1
            SectionTitle.BorderSizePixel = 0
            SectionTitle.Position = UDim2.new(0.052941177, 0, 0, 0)
            SectionTitle.Size = UDim2.new(0, 125, 0, 30)
            SectionTitle.Font = Enum.Font.SourceSansBold
            SectionTitle.Text = name
            SectionTitle.TextColor3 = Color3.new(1, 1, 1)
            SectionTitle.TextSize = 17
            SectionTitle.TextXAlignment = Enum.TextXAlignment.Left
            
            Layout.Name = "Layout"
            Layout.Parent = Section1Holder
            Layout.SortOrder = Enum.SortOrder.LayoutOrder

            WindowToggle.MouseButton1Down:Connect(function()
                if not IsTabOpen then
                    ExtendBodySize(30)
                    SectionToggle.Text = SectionToggleText
                    TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
                elseif IsTabOpen then
                    UnExtendBodySize(30)
                    SectionToggle.Text = ""
                    TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                end
            end)

            SectionToggle.MouseButton1Down:Connect(function()
                if not IsSectionOpen then
                    IsSectionOpen = true
                    SectionToggleText = "-"

                    TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 1}):Play()
                    TweenService:Create(WindowToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 1}):Play()

                    SectionToggle.Text = SectionToggleText
                    SectionToggle.TextSize = 20
                    SectionToggle.Visible = false
                    WindowToggle.Visible = false

                    repeat wait() until SectionToggle.TextTransparency == 1 and WindowToggle.TextTransparency == 1
                    SectionToggle.Visible = true
                    WindowToggle.Visible = true
                    TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
                    TweenService:Create(WindowToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
                elseif IsSectionOpen then
                    IsSectionOpen = false
                    SectionToggleText = "v"

                    TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 1}):Play()
                    TweenService:Create(WindowToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 1}):Play()

                    SectionToggle.Text = SectionToggleText
                    SectionToggle.TextSize = 14
                    SectionToggle.Visible = false
                    WindowToggle.Visible = false

                    repeat wait() until SectionToggle.TextTransparency == 1 and WindowToggle.TextTransparency == 1
                    SectionToggle.Visible = true
                    WindowToggle.Visible = true
                    TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
                    TweenService:Create(WindowToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
                end
            end)

            local LibraryElements = {}

            function LibraryElements:CreateToggle(name, action)
                local ToggleHolder = Instance.new("Frame")
                local ToggleTitle = Instance.new("TextLabel")
                local ToggleBackground = Instance.new("ImageLabel")
                local ToggleButton = Instance.new("ImageButton")
            
                local ToggleName = RemoveSpaces(name)
                local Toggled = false

                ToggleHolder.Name = (ToggleName .. "ToggleHolder")
                ToggleHolder.Parent = Section1Holder
                ToggleHolder.BackgroundColor3 = Color3.new(0.137255, 0.137255, 0.137255)
                ToggleHolder.BorderSizePixel = 0
                ToggleHolder.Size = UDim2.new(0, 170, 0, 30)
            
                ToggleTitle.Name = "ToggleTitle"
                ToggleTitle.Parent = ToggleHolder
                ToggleTitle.BackgroundColor3 = Color3.new(1, 1, 1)
                ToggleTitle.BackgroundTransparency = 1
                ToggleTitle.BorderSizePixel = 0
                ToggleTitle.Position = UDim2.new(0.052941177, 0, 0, 0)
                ToggleTitle.Size = UDim2.new(0, 125, 0, 30)
                ToggleTitle.Font = Enum.Font.SourceSansBold
                ToggleTitle.Text = name
                ToggleTitle.TextColor3 = Color3.new(1, 1, 1)
                ToggleTitle.TextSize = 17
                ToggleTitle.TextXAlignment = Enum.TextXAlignment.Left
            
                ToggleBackground.Name = "ToggleBackground"
                ToggleBackground.Parent = ToggleHolder
                ToggleBackground.BackgroundColor3 = Color3.new(1, 1, 1)
                ToggleBackground.BackgroundTransparency = 1
                ToggleBackground.BorderSizePixel = 0
                ToggleBackground.Position = UDim2.new(0.847058833, 0, 0.166666672, 0)
                ToggleBackground.Size = UDim2.new(0, 20, 0, 20)
                ToggleBackground.Image = "rbxassetid://3570695787"
                ToggleBackground.ImageColor3 = Color3.new(0.254902, 0.254902, 0.254902)
            
                ToggleButton.Name = "ToggleButton"
                ToggleButton.Parent = ToggleBackground
                ToggleButton.BackgroundColor3 = Color3.new(1, 1, 1)
                ToggleButton.BackgroundTransparency = 1
                ToggleButton.Position = UDim2.new(0, 2, 0, 2)
                ToggleButton.Size = UDim2.new(0, 16, 0, 16)
                ToggleButton.Image = "rbxassetid://3570695787"
                ToggleButton.ImageColor3 = Color3.new(1, 0.341176, 0.341176)
                ToggleButton.ImageTransparency = 1

                ToggleButton.MouseButton1Down:Connect(function()	
                    Toggled = not Toggled
                
                    if Toggled then
                        TweenService:Create(ToggleButton, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {ImageTransparency = 0}):Play()
                    elseif not Toggled then
                        TweenService:Create(ToggleButton, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {ImageTransparency = 1}):Play()
                    end

                    action(Toggled)
                end)

                SectionToggle.MouseButton1Down:Connect(function()
                    if not IsSectionOpen then
                        ExtendSectionSize(30)
                        ExtendBodySize(30)
                    elseif IsSectionOpen then
                        UnExtendSectionSize(30)
                        UnExtendBodySize(30)
                    end
                end)

                WindowToggle.MouseButton1Down:Connect(function()
                    if not IsTabOpen then
                        if IsSectionOpen then
                            ExtendBodySize(30)
                            TweenService:Create(SectionToggle, TweenInfo.new(0, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = 360}):Play()
                            TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
                        elseif not IsSectionOpen then
                            TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
                        end

                        
                    elseif IsTabOpen then
                        if IsSectionOpen then
                            UnExtendBodySize(30)
                            TweenService:Create(SectionToggle, TweenInfo.new(0, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = 0}):Play()
                            TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                        elseif not IsSectionOpen then
                            TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                        end
                    end

                    TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 1}):Play()
            
                    SectionToggle.Visible = false
            
                    repeat wait() until SectionToggle.TextTransparency == 1
                    SectionToggle.Visible = true
                    TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
                end)
            end

            function LibraryElements:CreateSlider(name, minimumvalue, maximumvalue, startvalue, precisevalue, action)
                local SliderHolder = Instance.new("Frame")
                local SliderTitle = Instance.new("TextLabel")
                local SliderValueHolder = Instance.new("ImageLabel")
                local SliderValue = Instance.new("TextLabel")
                local SliderBackground = Instance.new("ImageLabel")
                local Slider = Instance.new("ImageLabel")

                local SliderName = RemoveSpaces(name)
                local Dragging = false
                local PreciseSliderValue = precisevalue

                SliderHolder.Name = (SliderName .. "SliderHolder")
                SliderHolder.Parent = Section1Holder
                SliderHolder.BackgroundColor3 = Color3.new(0.137255, 0.137255, 0.137255)
                SliderHolder.BorderSizePixel = 0
                SliderHolder.Size = UDim2.new(0, 170, 0, 30)

                SliderTitle.Name = "SliderTitle"
                SliderTitle.Parent = SliderHolder
                SliderTitle.BackgroundColor3 = Color3.new(1, 1, 1)
                SliderTitle.BackgroundTransparency = 1
                SliderTitle.BorderSizePixel = 0
                SliderTitle.Position = UDim2.new(0.052941177, 0, 0, 0)
                SliderTitle.Size = UDim2.new(0, 125, 0, 15)
                SliderTitle.Font = Enum.Font.SourceSansSemibold
                SliderTitle.Text = name
                SliderTitle.TextColor3 = Color3.new(1, 1, 1)
                SliderTitle.TextSize = 17
                SliderTitle.TextXAlignment = Enum.TextXAlignment.Left

                SliderValueHolder.Name = "SliderValueHolder"
                SliderValueHolder.Parent = SliderHolder
                SliderValueHolder.BackgroundColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                SliderValueHolder.BackgroundTransparency = 1
                SliderValueHolder.Position = UDim2.new(0.747058809, 0, 0, 0)
                SliderValueHolder.Size = UDim2.new(0, 35, 0, 15)
                SliderValueHolder.Image = "rbxassetid://3570695787"
                SliderValueHolder.ImageColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                SliderValueHolder.ImageTransparency = 0.5
                SliderValueHolder.ScaleType = Enum.ScaleType.Slice
                SliderValueHolder.SliceCenter = Rect.new(100, 100, 100, 100)
                SliderValueHolder.SliceScale = 0.02

                SliderValue.Name = "SliderValue"
                SliderValue.Parent = SliderValueHolder
                SliderValue.BackgroundColor3 = Color3.new(1, 1, 1)
                SliderValue.BackgroundTransparency = 1
                SliderValue.Size = UDim2.new(0, 35, 0, 15)
                SliderValue.Font = Enum.Font.SourceSansSemibold
                SliderValue.Text = tostring(startvalue or PreciseSliderValue and tonumber(string.format("%.2f", startvalue)))
                SliderValue.TextColor3 = Color3.new(1, 1, 1)
                SliderValue.TextSize = 14

                SliderBackground.Name = "SliderBackground"
                SliderBackground.Parent = SliderHolder
                SliderBackground.BackgroundColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                SliderBackground.BackgroundTransparency = 1
                SliderBackground.Position = UDim2.new(0.0529999994, 0, 0.649999976, 0)
                SliderBackground.Selectable = true
                SliderBackground.Size = UDim2.new(0, 153, 0, 5)
                SliderBackground.Image = "rbxassetid://3570695787"
                SliderBackground.ImageColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                SliderBackground.ImageTransparency = 0.5
                SliderBackground.ScaleType = Enum.ScaleType.Slice
                SliderBackground.SliceCenter = Rect.new(100, 100, 100, 100)
                SliderBackground.ClipsDescendants = true
                SliderBackground.SliceScale = 0.02

                Slider.Name = "Slider"
                Slider.Parent = SliderBackground
                Slider.BackgroundColor3 = Color3.new(1, 1, 1)
                Slider.BackgroundTransparency = 1
                Slider.Size = UDim2.new(((startvalue or minimumvalue) - minimumvalue) / (maximumvalue - minimumvalue), 0, 0, 5)
                Slider.Image = "rbxassetid://3570695787"
                Slider.ScaleType = Enum.ScaleType.Slice
                Slider.SliceCenter = Rect.new(100, 100, 100, 100)
                Slider.SliceScale = 0.02

                local function Sliding(input)
                    local Pos = UDim2.new(math.clamp((input.Position.X - SliderBackground.AbsolutePosition.X) / SliderBackground.AbsoluteSize.X, 0, 1), 0, 1.15, 0)
                    TweenService:Create(Slider, TweenInfo.new(0.25, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = Pos}):Play()

                    local NonSliderPreciseValue = math.floor(((Pos.X.Scale * maximumvalue) / maximumvalue) * (maximumvalue - minimumvalue) + minimumvalue)
                    local SliderPreciseValue = ((Pos.X.Scale * maximumvalue) / maximumvalue) * (maximumvalue - minimumvalue) + minimumvalue
        
                    local Value = (PreciseSliderValue and SliderPreciseValue or NonSliderPreciseValue)
                    Value = tonumber(string.format("%.2f", Value))
        
                    SliderValue.Text = tostring(Value)
                    action(Value)
                end
            
                SliderBackground.InputBegan:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        Dragging = true
                    end
                end)
                
                SliderBackground.InputEnded:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        Dragging = false
                    end
                end)
                
                SliderBackground.InputBegan:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        Sliding(input)
                    end
                end)
            
                UserInputService.InputChanged:Connect(function(input)
                    if Dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                        Sliding(input)
                    end
                end)

                SectionToggle.MouseButton1Down:Connect(function()
                    if not IsSectionOpen then
                        ExtendSectionSize(30)
                        ExtendBodySize(30)
                    elseif IsSectionOpen then
                        UnExtendSectionSize(30)
                        UnExtendBodySize(30)
                    end
                end)

                WindowToggle.MouseButton1Down:Connect(function()
                    if not IsTabOpen then
                        if IsSectionOpen then
                            ExtendBodySize(30)
                            TweenService:Create(SectionToggle, TweenInfo.new(0, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = 360}):Play()
                            TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
                        elseif not IsSectionOpen then
                            TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
                        end

                        
                    elseif IsTabOpen then
                        if IsSectionOpen then
                            UnExtendBodySize(30)
                            TweenService:Create(SectionToggle, TweenInfo.new(0, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = 0}):Play()
                            TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                        elseif not IsSectionOpen then
                            TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                        end
                    end

                    TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 1}):Play()
            
                    SectionToggle.Visible = false
            
                    repeat wait() until SectionToggle.TextTransparency == 1
                    SectionToggle.Visible = true
                    TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
                end)
            end

            function LibraryElements:CreateColorPicker(name, presetcolor, action)
                local ColorPickerHolder = Instance.new("Frame")
                local RainbowToggleHolder = Instance.new("Frame")
                local RainbowTitle = Instance.new("TextLabel")
                local RainbowBackground = Instance.new("ImageLabel")
                local RainbowToggleButton = Instance.new("ImageButton")
                local ColorPickerTitle = Instance.new("TextLabel")
                local ColorPickerToggle = Instance.new("ImageButton")
                local ColorPickerMain = Instance.new("ImageLabel")
                local ColorValueR = Instance.new("TextLabel")
                local ColorValueRRound = Instance.new("ImageLabel")
                local ColorValueB = Instance.new("TextLabel")
                local ColorValueBRound = Instance.new("ImageLabel")
                local ColorValueG = Instance.new("TextLabel")
                local ColorValueGRound = Instance.new("ImageLabel")
                local RoundHueHolder = Instance.new("ImageLabel")
                local ColorHue = Instance.new("ImageLabel")
                local HueMarker = Instance.new("Frame")
                local RoundSaturationHolder = Instance.new("ImageLabel")
                local ColorSelector = Instance.new("ImageLabel")
                local SaturationMarker = Instance.new("ImageLabel")

                local ColorPickerName = RemoveSpaces(name)

                ColorPickerZIndex = ColorPickerZIndex + 1

                local ColorPickerOpen = false
                local RainbowColorMode = false
                
                local Color = nil
                local ColorValue = 0
                local RainbowColor = nil

                ColorPickerHolder.Name = (ColorPickerName .. "ColorPickerHolder")
                ColorPickerHolder.Parent = Section1Holder
                ColorPickerHolder.BackgroundColor3 = Color3.new(0.137255, 0.137255, 0.137255)
                ColorPickerHolder.BorderSizePixel = 0
                ColorPickerHolder.Size = UDim2.new(0, 170, 0, 30)

                ColorPickerTitle.Name = "ColorPickerTitle"
                ColorPickerTitle.Parent = ColorPickerHolder
                ColorPickerTitle.BackgroundColor3 = Color3.new(1, 1, 1)
                ColorPickerTitle.BackgroundTransparency = 1
                ColorPickerTitle.BorderSizePixel = 0
                ColorPickerTitle.Position = UDim2.new(0.052941177, 0, 0, 0)
                ColorPickerTitle.Size = UDim2.new(0, 125, 0, 30)
                ColorPickerTitle.Font = Enum.Font.SourceSansBold
                ColorPickerTitle.Text = name
                ColorPickerTitle.TextColor3 = Color3.new(1, 1, 1)
                ColorPickerTitle.TextSize = 17
                ColorPickerTitle.TextXAlignment = Enum.TextXAlignment.Left
                
                ColorPickerToggle.Name = "ColorPickerToggle"
                ColorPickerToggle.Parent = ColorPickerHolder
                ColorPickerToggle.BackgroundColor3 = Color3.new(1, 1, 1)
                ColorPickerToggle.BackgroundTransparency = 1
                ColorPickerToggle.Position = UDim2.new(0.822000027, 0, 0.166999996, 0)
                ColorPickerToggle.Size = UDim2.new(0, 22, 0, 20)
                ColorPickerToggle.Image = "rbxassetid://3570695787"
                ColorPickerToggle.ImageColor3 = presetcolor
                ColorPickerToggle.ScaleType = Enum.ScaleType.Slice
                ColorPickerToggle.SliceCenter = Rect.new(100, 100, 100, 100)
                ColorPickerToggle.SliceScale = 0.04
                
                ColorPickerMain.Name = "ColorPickerMain"
                ColorPickerMain.Parent = ColorPickerHolder
                ColorPickerMain.BackgroundColor3 = Color3.new(0.137255, 0.137255, 0.137255)
                ColorPickerMain.BackgroundTransparency = 1
                ColorPickerMain.ClipsDescendants = true
                ColorPickerMain.BorderSizePixel = 0
                ColorPickerMain.Position = UDim2.new(1.04705882, 0, -1.36666667, 0)
                ColorPickerMain.Size = UDim2.new(0, 0, 0, 175)
                ColorPickerMain.Image = "rbxassetid://3570695787"
                ColorPickerMain.ImageColor3 = Color3.new(0.137255, 0.137255, 0.137255)
                ColorPickerMain.ScaleType = Enum.ScaleType.Slice
                ColorPickerMain.SliceCenter = Rect.new(100, 100, 100, 100)
                ColorPickerMain.SliceScale = 0.05
                ColorPickerMain.ZIndex = 1 + ColorPickerZIndex
                
                RainbowToggleHolder.Name = "RainbowToggleHolder"
                RainbowToggleHolder.Parent = ColorPickerMain
                RainbowToggleHolder.BackgroundColor3 = Color3.new(0.137255, 0.137255, 0.137255)
                RainbowToggleHolder.BackgroundTransparency = 1
                RainbowToggleHolder.BorderSizePixel = 0
                RainbowToggleHolder.Position = UDim2.new(0, 0, 0.819999993, 0)
                RainbowToggleHolder.Size = UDim2.new(0, 170, 0, 30)
                RainbowToggleHolder.ZIndex = 1 + ColorPickerZIndex

                RainbowTitle.Name = "RainbowTitle"
                RainbowTitle.Parent = RainbowToggleHolder
                RainbowTitle.BackgroundColor3 = Color3.new(1, 1, 1)
                RainbowTitle.BackgroundTransparency = 1
                RainbowTitle.BorderSizePixel = 0
                RainbowTitle.Position = UDim2.new(0.052941177, 0, 0, 0)
                RainbowTitle.Size = UDim2.new(0, 125, 0, 30)
                RainbowTitle.Font = Enum.Font.SourceSansBold
                RainbowTitle.Text = "Rainbow"
                RainbowTitle.TextColor3 = Color3.new(1, 1, 1)
                RainbowTitle.TextSize = 17
                RainbowTitle.TextXAlignment = Enum.TextXAlignment.Left
                RainbowTitle.ZIndex = 1 + ColorPickerZIndex

                RainbowBackground.Name = "RainbowBackground"
                RainbowBackground.Parent = RainbowToggleHolder
                RainbowBackground.BackgroundColor3 = Color3.new(1, 1, 1)
                RainbowBackground.BackgroundTransparency = 1
                RainbowBackground.BorderSizePixel = 0
                RainbowBackground.Position = UDim2.new(0.847058833, 0, 0.166666672, 0)
                RainbowBackground.Size = UDim2.new(0, 20, 0, 20)
                RainbowBackground.Image = "rbxassetid://3570695787"
                RainbowBackground.ImageColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                RainbowBackground.ZIndex = 1 + ColorPickerZIndex

                RainbowToggleButton.Name = "RainbowToggleButton"
                RainbowToggleButton.Parent = RainbowBackground
                RainbowToggleButton.BackgroundColor3 = Color3.new(1, 1, 1)
                RainbowToggleButton.BackgroundTransparency = 1
                RainbowToggleButton.Position = UDim2.new(0, 2, 0, 2)
                RainbowToggleButton.Size = UDim2.new(0, 16, 0, 16)
                RainbowToggleButton.Image = "rbxassetid://3570695787"
                RainbowToggleButton.ImageColor3 = Color3.new(1, 0.341176, 0.341176)
                RainbowToggleButton.ImageTransparency = 1
                RainbowToggleButton.ZIndex = 1 + ColorPickerZIndex

                ColorValueR.Name = "ColorValueR"
                ColorValueR.Parent = ColorPickerMain
                ColorValueR.BackgroundColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                ColorValueR.BackgroundTransparency = 1
                ColorValueR.BorderSizePixel = 0
                ColorValueR.ClipsDescendants = true
                ColorValueR.Position = UDim2.new(0, 7, 0, 127)
                ColorValueR.Size = UDim2.new(0, 50, 0, 16)
                ColorValueR.ZIndex = 2 + ColorPickerZIndex
                ColorValueR.Font = Enum.Font.SourceSansBold
                ColorValueR.Text = "R: 000"
                ColorValueR.TextColor3 = Color3.new(1, 1, 1)
                ColorValueR.TextSize = 14

                ColorValueRRound.Name = "ColorValueRRound"
                ColorValueRRound.Parent = ColorValueR
                ColorValueRRound.Active = true
                ColorValueRRound.AnchorPoint = Vector2.new(0.5, 0.5)
                ColorValueRRound.BackgroundColor3 = Color3.new(1, 1, 1)
                ColorValueRRound.BackgroundTransparency = 1
                ColorValueRRound.Position = UDim2.new(0.5, 0, 0.5, 0)
                ColorValueRRound.Selectable = true
                ColorValueRRound.Size = UDim2.new(1, 0, 1, 0)
                ColorValueRRound.Image = "rbxassetid://3570695787"
                ColorValueRRound.ImageColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                ColorValueRRound.ScaleType = Enum.ScaleType.Slice
                ColorValueRRound.SliceCenter = Rect.new(100, 100, 100, 100)
                ColorValueRRound.SliceScale = 0.04
                ColorValueRRound.ZIndex = 1 + ColorPickerZIndex

                ColorValueG.Name = "ColorValueG"
                ColorValueG.Parent = ColorPickerMain
                ColorValueG.BackgroundColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                ColorValueG.BackgroundTransparency = 1
                ColorValueG.BorderSizePixel = 0
                ColorValueG.ClipsDescendants = true
                ColorValueG.Position = UDim2.new(0, 60, 0, 127)
                ColorValueG.Size = UDim2.new(0, 51, 0, 16)
                ColorValueG.ZIndex = 2 + ColorPickerZIndex
                ColorValueG.Font = Enum.Font.SourceSansBold
                ColorValueG.Text = "G: 000"
                ColorValueG.TextColor3 = Color3.new(1, 1, 1)
                ColorValueG.TextSize = 14

                ColorValueGRound.Name = "ColorValueGRound"
                ColorValueGRound.Parent = ColorValueG
                ColorValueGRound.Active = true
                ColorValueGRound.AnchorPoint = Vector2.new(0.5, 0.5)
                ColorValueGRound.BackgroundColor3 = Color3.new(1, 1, 1)
                ColorValueGRound.BackgroundTransparency = 1
                ColorValueGRound.Position = UDim2.new(0.5, 0, 0.5, 0)
                ColorValueGRound.Selectable = true
                ColorValueGRound.Size = UDim2.new(1, 0, 1, 0)
                ColorValueGRound.Image = "rbxassetid://3570695787"
                ColorValueGRound.ImageColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                ColorValueGRound.ScaleType = Enum.ScaleType.Slice
                ColorValueGRound.SliceCenter = Rect.new(100, 100, 100, 100)
                ColorValueGRound.SliceScale = 0.04
                ColorValueGRound.ZIndex = 1 + ColorPickerZIndex

                ColorValueB.Name = "ColorValueB"
                ColorValueB.Parent = ColorPickerMain
                ColorValueB.BackgroundColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                ColorValueB.BackgroundTransparency = 1
                ColorValueB.BorderSizePixel = 0
                ColorValueB.ClipsDescendants = true
                ColorValueB.Position = UDim2.new(0, 114, 0, 127)
                ColorValueB.Size = UDim2.new(0, 50, 0, 16)
                ColorValueB.ZIndex = 2 + ColorPickerZIndex
                ColorValueB.Font = Enum.Font.SourceSansBold
                ColorValueB.Text = "B: 000"
                ColorValueB.TextColor3 = Color3.new(1, 1, 1)
                ColorValueB.TextSize = 14

                ColorValueBRound.Name = "ColorValueBRound"
                ColorValueBRound.Parent = ColorValueB
                ColorValueBRound.Active = true
                ColorValueBRound.AnchorPoint = Vector2.new(0.5, 0.5)
                ColorValueBRound.BackgroundColor3 = Color3.new(1, 1, 1)
                ColorValueBRound.BackgroundTransparency = 1
                ColorValueBRound.Position = UDim2.new(0.5, 0, 0.5, 0)
                ColorValueBRound.Selectable = true
                ColorValueBRound.Size = UDim2.new(1, 0, 1, 0)
                ColorValueBRound.Image = "rbxassetid://3570695787"
                ColorValueBRound.ImageColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                ColorValueBRound.ScaleType = Enum.ScaleType.Slice
                ColorValueBRound.SliceCenter = Rect.new(100, 100, 100, 100)
                ColorValueBRound.SliceScale = 0.04
                ColorValueBRound.ZIndex = 1 + ColorPickerZIndex

                RoundHueHolder.Name = "RoundHueHolder"
                RoundHueHolder.Parent = ColorPickerMain
                RoundHueHolder.BackgroundColor3 = Color3.new(1, 1, 1)
                RoundHueHolder.BackgroundTransparency = 1
                RoundHueHolder.ClipsDescendants = true
                RoundHueHolder.Position = UDim2.new(0, 136, 0, 6)
                RoundHueHolder.Size = UDim2.new(0, 28, 0, 114)
                RoundHueHolder.ZIndex = 2 + ColorPickerZIndex
                RoundHueHolder.Image = "rbxassetid://4695575676"
                RoundHueHolder.ImageColor3 = Color3.new(0.137255, 0.137255, 0.137255)
                RoundHueHolder.ScaleType = Enum.ScaleType.Slice
                RoundHueHolder.SliceCenter = Rect.new(128, 128, 128, 128)
                RoundHueHolder.SliceScale = 0.05

                ColorHue.Name = "ColorHue"
                ColorHue.Parent = RoundHueHolder
                ColorHue.BackgroundColor3 = Color3.new(1, 1, 1)
                ColorHue.BackgroundTransparency = 1
                ColorHue.BorderSizePixel = 0
                ColorHue.Size = UDim2.new(0, 28, 0, 114)
                ColorHue.Image = "http://www.roblox.com/asset/?id=4801885250"
                ColorHue.ScaleType = Enum.ScaleType.Crop
                ColorHue.ZIndex = 1 + ColorPickerZIndex

                HueMarker.Name = "HueMarker"
                HueMarker.Parent = RoundHueHolder
                HueMarker.BackgroundColor3 = Color3.new(0.294118, 0.294118, 0.294118)
                HueMarker.BorderSizePixel = 0
                HueMarker.Position = UDim2.new(-0.25, 0, 0, 0)
                HueMarker.Size = UDim2.new(0, 42, 0, 5)
                HueMarker.ZIndex = 1 + ColorPickerZIndex

                RoundSaturationHolder.Name = "RoundSaturationHolder"
                RoundSaturationHolder.Parent = ColorPickerMain
                RoundSaturationHolder.BackgroundColor3 = Color3.new(1, 1, 1)
                RoundSaturationHolder.BackgroundTransparency = 1
                RoundSaturationHolder.ClipsDescendants = true
                RoundSaturationHolder.Position = UDim2.new(0, 7, 0, 6)
                RoundSaturationHolder.Size = UDim2.new(0, 122, 0, 114)
                RoundSaturationHolder.ZIndex = 2 + ColorPickerZIndex
                RoundSaturationHolder.Image = "rbxassetid://4695575676"
                RoundSaturationHolder.ImageColor3 = Color3.new(0.137255, 0.137255, 0.137255)
                RoundSaturationHolder.ScaleType = Enum.ScaleType.Slice
                RoundSaturationHolder.SliceCenter = Rect.new(128, 128, 128, 128)
                RoundSaturationHolder.SliceScale = 0.05

                ColorSelector.Name = "ColorSelector"
                ColorSelector.Parent = RoundSaturationHolder
                ColorSelector.BackgroundColor3 = presetcolor
                ColorSelector.BorderSizePixel = 0
                ColorSelector.Size = UDim2.new(0, 122, 0, 114)
                ColorSelector.Image = "rbxassetid://4805274903"
                ColorSelector.ZIndex = 1 + ColorPickerZIndex

                SaturationMarker.Name = "SaturationMarker"
                SaturationMarker.Parent = RoundSaturationHolder
                SaturationMarker.BackgroundColor3 = Color3.new(1, 1, 1)
                SaturationMarker.BackgroundTransparency = 1
                SaturationMarker.Size = UDim2.new(0, 0, 0, 0)
                SaturationMarker.Image = "http://www.roblox.com/asset/?id=4805639000"
                SaturationMarker.ZIndex = 1 + ColorPickerZIndex

                local function SetRGBValues()
                    local RedValue, GreenValue, BlueValue = ColorPickerToggle.ImageColor3.r * 255, ColorPickerToggle.ImageColor3.g * 255, ColorPickerToggle.ImageColor3.b * 255

                    ColorValueR.Text = ("R: " .. math.floor(RedValue))
                    ColorValueG.Text = ("G: " .. math.floor(GreenValue))
                    ColorValueB.Text = ("B: " .. math.floor(BlueValue))
                end

                SetRGBValues()

                ColorPickerToggle.MouseButton1Down:Connect(function()
                    if not ColorPickerOpen then
                        ColorPickerOpen = true
                        Body.ClipsDescendants = false
                        Section1Holder.ClipsDescendants = false

                        TweenService:Create(ColorPickerMain, TweenInfo.new(0.75, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 171, 0, 175)}):Play()
                    elseif ColorPickerOpen then
                        ColorPickerOpen = false
                        TweenService:Create(ColorPickerMain, TweenInfo.new(0.75, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 0, 0, 175)}):Play()
                    end
                end)

                local ColorData = {
                    H = 1;
                    S = 1;
                    V = 1
                }

                local Connection1 = nil
                local Connection2 = nil

                local function GetXY(frame)
                    local X, Y = Mouse.X - frame.AbsolutePosition.X, Mouse.Y - frame.AbsolutePosition.Y
                    local MaxX, MaxY = frame.AbsoluteSize.X, frame.AbsoluteSize.Y
                    X = math.clamp(X, 0, MaxX)
                    Y = math.clamp(Y, 0, MaxY)
                    return X / MaxX, Y / MaxY
                end

                local function GetY(frame)
                    local Y2 = Mouse.Y - frame.AbsolutePosition.Y
                    MaxY2 = frame.AbsoluteSize.Y
                    Y2 = math.clamp(Y2, -10, MaxY2)
                    return Y2 / MaxY2
                end

                local function Update()
                    SetRGBValues()

                    Color = Color3.fromHSV(ColorData.H, ColorData.S, ColorData.V)

                    ColorPickerToggle.ImageColor3 = Color
                    ColorSelector.BackgroundColor3 = Color3.fromHSV(ColorData.H, 1, 1)
                    action(ColorPickerToggle.ImageColor3)
                end

                ColorSelector.MouseLeave:Connect(function()
                    if Connection1 then
                        Connection1:Disconnect()
                        Connection1 = nil
                    end
                    if Connection2 then
                        Connection2:Disconnect()
                        Connection2 = nil
                    end
                end)

                ColorHue.MouseLeave:Connect(function()
                    if Connection1 then
                        Connection1:Disconnect()
                        Connection1 = nil
                    end
                    if Connection2 then
                        Connection2:Disconnect()
                        Connection2 = nil
                    end
                end)

                RainbowToggleButton.MouseButton1Down:Connect(function()
                    if not RainbowColorMode then
                        RainbowColorMode = true
                        TweenService:Create(RainbowToggleButton, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {ImageTransparency = 0}):Play()
                    elseif RainbowColorMode then
                        RainbowColorMode = false
                        TweenService:Create(RainbowToggleButton, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {ImageTransparency = 1}):Play()
                    end

                    while RainbowColorMode do
                        RainbowColor = Color3.fromHSV(RainbowModeColorValue, 1, 1)

                        ColorPickerToggle.ImageColor3 = RainbowColor
                        ColorSelector.BackgroundColor3 = RainbowColor

                        action(RainbowColor)
                        SetRGBValues()
                        wait()
                    end
                end)

                ColorSelector.InputBegan:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        if not RainbowColorMode then
                            if Connection1 then
                                Connection1:Disconnect()
                            end
                            Connection1 = RunService.RenderStepped:Connect(function()
                                local X, Y = GetXY(RoundSaturationHolder)

                                SaturationMarker.Position = UDim2.new(X, 0, Y, 0)
                                ColorData.S = X
                                ColorData.V = 1 - Y
                                Update()
                            end)
                        end
                    end
                end)

                ColorSelector.InputEnded:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        if Connection1 then
                            Connection1:Disconnect()
                        end
                    end
                end)

                ColorHue.InputBegan:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        if not RainbowColorMode then
                            if Connection2 then
                                Connection2:Disconnect()
                            end

                            Connection2 = RunService.RenderStepped:Connect(function()
                                local X, Y = GetXY(RoundHueHolder)
                                local Y2 = GetY(RoundHueHolder)

                                ColorData.H = 1 - Y
                                TweenService:Create(HueMarker, TweenInfo.new(0.25, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Position = UDim2.new(-0.25, 0, Y2, 0)}):Play()
                                Update()
                            end)
                        end
                    end
                end)

                ColorHue.InputEnded:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        if Connection2 then
                            Connection2:Disconnect()
                        end
                    end
                end)

                SectionToggle.MouseButton1Down:Connect(function()
                    if not IsSectionOpen then
                        Body.ClipsDescendants = true
                        Section1Holder.ClipsDescendants = true

                        ExtendSectionSize(30)
                        ExtendBodySize(30)
                    elseif IsSectionOpen then
                        ColorPickerOpen = false
                        TweenService:Create(ColorPickerMain, TweenInfo.new(0.75, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 0, 0, 175)}):Play()

                        Body.ClipsDescendants = true
                        Section1Holder.ClipsDescendants = true

                        UnExtendSectionSize(30)
                        UnExtendBodySize(30)
                    end
                end)

                WindowToggle.MouseButton1Down:Connect(function()
                    ColorPickerOpen = false
                    TweenService:Create(ColorPickerMain, TweenInfo.new(0.75, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 0, 0, 175)}):Play()

                    Body.ClipsDescendants = true
                    Section1Holder.ClipsDescendants = true

                    if not IsTabOpen then
                        if IsSectionOpen then
                            ExtendBodySize(30)
                            TweenService:Create(SectionToggle, TweenInfo.new(0, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = 360}):Play()
                            TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
                        elseif not IsSectionOpen then
                            TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
                        end

                        
                    elseif IsTabOpen then
                        if IsSectionOpen then
                            UnExtendBodySize(30)
                            TweenService:Create(SectionToggle, TweenInfo.new(0, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = 0}):Play()
                            TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                        elseif not IsSectionOpen then
                            TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                        end
                    end

                    TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 1}):Play()
            
                    SectionToggle.Visible = false
            
                    repeat wait() until SectionToggle.TextTransparency == 1
                    SectionToggle.Visible = true
                    TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
                end)
            end

            function LibraryElements:CreateButton(name, action)
                local ButtonHolder = Instance.new("Frame")
                local Button = Instance.new("TextButton")
                local ButtonRound = Instance.new("ImageLabel")

                local ButtonName = RemoveSpaces(name)

                ButtonHolder.Name = (ButtonName .. "ButtonHolder")
                ButtonHolder.Parent = Section1Holder
                ButtonHolder.BackgroundColor3 = Color3.new(0.137255, 0.137255, 0.137255)
                ButtonHolder.BorderSizePixel = 0
                ButtonHolder.Size = UDim2.new(0, 170, 0, 30)
                
                Button.Name = "Button"
                Button.Parent = ButtonHolder
                Button.BackgroundColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                Button.BackgroundTransparency = 1
                Button.BorderSizePixel = 0
                Button.Position = UDim2.new(0.052941177, 0, 0, 0)
                Button.Size = UDim2.new(0, 153, 0, 24)
                Button.ZIndex = 2
                Button.AutoButtonColor = false
                Button.Font = Enum.Font.SourceSansBold
                Button.Text = name
                Button.TextColor3 = Color3.new(1, 1, 1)
                Button.TextSize = 14
                
                ButtonRound.Name = "ButtonRound"
                ButtonRound.Parent = Button
                ButtonRound.Active = true
                ButtonRound.AnchorPoint = Vector2.new(0.5, 0.5)
                ButtonRound.BackgroundColor3 = Color3.new(1, 1, 1)
                ButtonRound.BackgroundTransparency = 1
                ButtonRound.BorderSizePixel = 0
                ButtonRound.ClipsDescendants = true
                ButtonRound.Position = UDim2.new(0.5, 0, 0.5, 0)
                ButtonRound.Selectable = true
                ButtonRound.Size = UDim2.new(1, 0, 1, 0)
                ButtonRound.Image = "rbxassetid://3570695787"
                ButtonRound.ImageColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                ButtonRound.ScaleType = Enum.ScaleType.Slice
                ButtonRound.SliceCenter = Rect.new(100, 100, 100, 100)
                ButtonRound.SliceScale = 0.04

                Button.MouseButton1Down:Connect(function()
                    action(Button)
                end)
                
                SectionToggle.MouseButton1Down:Connect(function()
                    if not IsSectionOpen then
                        ExtendSectionSize(30)
                        ExtendBodySize(30)
                    elseif IsSectionOpen then
                        UnExtendSectionSize(30)
                        UnExtendBodySize(30)
                    end
                end)

                WindowToggle.MouseButton1Down:Connect(function()
                    if not IsTabOpen then
                        if IsSectionOpen then
                            ExtendBodySize(30)
                            TweenService:Create(SectionToggle, TweenInfo.new(0, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = 360}):Play()
                            TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
                        elseif not IsSectionOpen then
                            TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
                        end

                        
                    elseif IsTabOpen then
                        if IsSectionOpen then
                            UnExtendBodySize(30)
                            TweenService:Create(SectionToggle, TweenInfo.new(0, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = 0}):Play()
                            TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                        elseif not IsSectionOpen then
                            TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                        end
                    end

                    TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 1}):Play()
            
                    SectionToggle.Visible = false
            
                    repeat wait() until SectionToggle.TextTransparency == 1
                    SectionToggle.Visible = true
                    TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
                end)
            end

            function LibraryElements:CreateTextbox(name, action)
                local TextBoxHolder = Instance.new("Frame")
                local TextBox = Instance.new("TextBox")
                local TextBoxRound = Instance.new("ImageLabel")

                local TextBoxName = RemoveSpaces(name)

                TextBoxHolder.Name = (TextBoxName .. "TextBoxHolder")
                TextBoxHolder.Parent = Section1Holder
                TextBoxHolder.BackgroundColor3 = Color3.new(0.137255, 0.137255, 0.137255)
                TextBoxHolder.BorderSizePixel = 0
                TextBoxHolder.Size = UDim2.new(0, 170, 0, 30)
                
                TextBox.Parent = TextBoxHolder
                TextBox.BackgroundColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                TextBox.BackgroundTransparency = 1
                TextBox.ClipsDescendants = true
                TextBox.Position = UDim2.new(0.0529999994, 0, 0, 0)
                TextBox.Size = UDim2.new(0, 153, 0, 24)
                TextBox.ZIndex = 2
                TextBox.Font = Enum.Font.SourceSansBold
                TextBox.PlaceholderText = name
                TextBox.Text = ""
                TextBox.TextColor3 = Color3.new(1, 1, 1)
                TextBox.TextSize = 14
                
                TextBoxRound.Name = "TextBoxRound"
                TextBoxRound.Parent = TextBox
                TextBoxRound.Active = true
                TextBoxRound.AnchorPoint = Vector2.new(0.5, 0.5)
                TextBoxRound.BackgroundColor3 = Color3.new(1, 1, 1)
                TextBoxRound.BackgroundTransparency = 1
                TextBoxRound.BorderSizePixel = 0
                TextBoxRound.ClipsDescendants = true
                TextBoxRound.Position = UDim2.new(0.5, 0, 0.5, 0)
                TextBoxRound.Selectable = true
                TextBoxRound.Size = UDim2.new(1, 0, 1, 0)
                TextBoxRound.Image = "rbxassetid://3570695787"
                TextBoxRound.ImageColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                TextBoxRound.ScaleType = Enum.ScaleType.Slice
                TextBoxRound.SliceCenter = Rect.new(100, 100, 100, 100)
                TextBoxRound.SliceScale = 0.04

                TextBox.FocusLost:Connect(function(enterPressed)
                    if enterPressed then
                        action(TextBox.Text)
                    end
                end)

                SectionToggle.MouseButton1Down:Connect(function()
                    if not IsSectionOpen then
                        ExtendSectionSize(30)
                        ExtendBodySize(30)
                    elseif IsSectionOpen then
                        UnExtendSectionSize(30)
                        UnExtendBodySize(30)
                    end
                end)

                WindowToggle.MouseButton1Down:Connect(function()
                    if not IsTabOpen then
                        if IsSectionOpen then
                            ExtendBodySize(30)
                            TweenService:Create(SectionToggle, TweenInfo.new(0, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = 360}):Play()
                            TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
                        elseif not IsSectionOpen then
                            TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
                        end

                        
                    elseif IsTabOpen then
                        if IsSectionOpen then
                            UnExtendBodySize(30)
                            TweenService:Create(SectionToggle, TweenInfo.new(0, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = 0}):Play()
                            TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                        elseif not IsSectionOpen then
                            TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                        end
                    end

                    TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 1}):Play()
            
                    SectionToggle.Visible = false
            
                    repeat wait() until SectionToggle.TextTransparency == 1
                    SectionToggle.Visible = true
                    TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
                end)
            end

            function LibraryElements:CreateDropdown(name, options, presetoption, action)
                local DropdownHolder = Instance.new("Frame")
                local DropdownTitle = Instance.new("TextLabel")
                local DropdownRound = Instance.new("ImageLabel")
                local DropdownToggle = Instance.new("TextButton")
                local DropdownMain = Instance.new("ImageLabel")
                local ScrollingFrame = Instance.new("ScrollingFrame")
                local ButtonLayout = Instance.new("UIListLayout")

                local DropdownName = RemoveSpaces(name)

                local StartingCanvasSize = 1
                local StartScrollingFrame = false

                local SelectedOptionName = options[presetoption]
                local NumberOfOptions = 0
                local DropdownYSize = 0
                local IsDropdownWindowOpen = false

                DropdownHolder.Name = (DropdownName .. "DropdownHolder")
                DropdownHolder.Parent = Section1Holder
                DropdownHolder.BackgroundColor3 = Color3.new(0.137255, 0.137255, 0.137255)
                DropdownHolder.BorderSizePixel = 0
                DropdownHolder.Size = UDim2.new(0, 170, 0, 30)
                
                DropdownTitle.Name = "DropdownTitle"
                DropdownTitle.Parent = DropdownHolder
                DropdownTitle.BackgroundColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                DropdownTitle.BackgroundTransparency = 1
                DropdownTitle.BorderSizePixel = 0
                DropdownTitle.Position = UDim2.new(0.0529999994, 0, 0, 0)
                DropdownTitle.Size = UDim2.new(0, 153, 0, 24)
                DropdownTitle.ZIndex = 2
                DropdownTitle.Font = Enum.Font.SourceSansBold
                DropdownTitle.Text = SelectedOptionName
                DropdownTitle.TextColor3 = Color3.new(1, 1, 1)
                DropdownTitle.TextSize = 14
                
                DropdownRound.Name = "DropdownRound"
                DropdownRound.Parent = DropdownTitle
                DropdownRound.Active = true
                DropdownRound.AnchorPoint = Vector2.new(0.5, 0.5)
                DropdownRound.BackgroundColor3 = Color3.new(1, 1, 1)
                DropdownRound.BackgroundTransparency = 1
                DropdownRound.BorderSizePixel = 0
                DropdownRound.ClipsDescendants = true
                DropdownRound.Position = UDim2.new(0.5, 0, 0.5, 0)
                DropdownRound.Selectable = true
                DropdownRound.Size = UDim2.new(1, 0, 1, 0)
                DropdownRound.Image = "rbxassetid://3570695787"
                DropdownRound.ImageColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                DropdownRound.ScaleType = Enum.ScaleType.Slice
                DropdownRound.SliceCenter = Rect.new(100, 100, 100, 100)
                DropdownRound.SliceScale = 0.04

                DropdownToggle.Name = "DropdownToggle"
                DropdownToggle.Parent = DropdownTitle
                DropdownToggle.BackgroundColor3 = Color3.new(1, 1, 1)
                DropdownToggle.BackgroundTransparency = 1
                DropdownToggle.Position = UDim2.new(0.816928029, 0, 0, 0)
                DropdownToggle.Size = UDim2.new(0, 28, 0, 24)
                DropdownToggle.AutoButtonColor = false
                DropdownToggle.Font = Enum.Font.SourceSansBold
                DropdownToggle.Text = ">"
                DropdownToggle.TextColor3 = Color3.new(1, 1, 1)
                DropdownToggle.TextSize = 15
                
                DropdownMain.Name = "DropdownMain"
                DropdownMain.Parent = DropdownTitle
                DropdownMain.BackgroundColor3 = Color3.new(0.137255, 0.137255, 0.137255)
                DropdownMain.BackgroundTransparency = 1
                DropdownMain.ClipsDescendants = true
                DropdownMain.Position = UDim2.new(1.09275186, 0, -0.0336658955, 0)
                DropdownMain.Size = UDim2.new(0, 0, 0, DropdownYSize)
                DropdownMain.Image = "rbxassetid://3570695787"
                DropdownMain.ImageColor3 = Color3.new(0.137255, 0.137255, 0.137255)
                DropdownMain.ScaleType = Enum.ScaleType.Slice
                DropdownMain.SliceCenter = Rect.new(100, 100, 100, 100)
                DropdownMain.SliceScale = 0.04

                ScrollingFrame.Parent = DropdownMain
                ScrollingFrame.BackgroundColor3 = Color3.new(1, 1, 1)
                ScrollingFrame.BackgroundTransparency = 1
                ScrollingFrame.BorderSizePixel = 0
                ScrollingFrame.Size = UDim2.new(0, 153, 0, DropdownYSize)
                ScrollingFrame.BottomImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
                ScrollingFrame.CanvasSize = UDim2.new(0, 0, StartingCanvasSize, 0)
                ScrollingFrame.ScrollBarThickness = 3
                ScrollingFrame.TopImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
                ScrollingFrame.ScrollingDirection = "Y"

                ButtonLayout.Name = "ButtonLayout"
                ButtonLayout.Parent = ScrollingFrame
                ButtonLayout.SortOrder = Enum.SortOrder.LayoutOrder

                for i, v in pairs(options) do
                    local DropdownOption = Instance.new("TextButton")
        
                    NumberOfOptions = NumberOfOptions + 1

                    local DropdownButtonName = RemoveSpaces(v)

                    DropdownOption.Name = (DropdownButtonName .. "Button")
                    DropdownOption.Parent = ScrollingFrame
                    DropdownOption.BackgroundColor3 = Color3.new(0.215686, 0.215686, 0.215686)
                    DropdownOption.BackgroundTransparency = 1
                    DropdownOption.BorderSizePixel = 0
                    DropdownOption.Position = UDim2.new(0, 0, 0, 0)
                    DropdownOption.Size = UDim2.new(0, 153, 0, 25)
                    DropdownOption.AutoButtonColor = false
                    DropdownOption.Font = Enum.Font.SourceSansBold
                    DropdownOption.Text = v
                    DropdownOption.TextColor3 = Color3.new(1, 1, 1)
                    DropdownOption.TextSize = 14

                    if NumberOfOptions <= 4 then
                        DropdownYSize = DropdownYSize + 25
                        DropdownMain.Size = UDim2.new(0, 0, 0, DropdownYSize)
                    elseif NumberOfOptions >= 4 then
                        StartScrollingFrame = true
                    end

                    if StartScrollingFrame then
                        StartingCanvasSize = StartingCanvasSize + 0.25
                        ScrollingFrame.CanvasSize = UDim2.new(0, 0, StartingCanvasSize, 0)
                    end

                    DropdownOption.InputBegan:Connect(function(input)
                        if input.UserInputType == Enum.UserInputType.MouseMovement then
                            TweenService:Create(DropdownOption, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 0.5}):Play()
                        end
                    end)
                        
                    DropdownOption.InputEnded:Connect(function(input)
                        if input.UserInputType == Enum.UserInputType.MouseMovement then
                            TweenService:Create(DropdownOption, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                        end
                    end)

                    DropdownOption.MouseButton1Down:Connect(function()
                        SelectedOptionName = v
                        action(v)

                        IsDropdownWindowOpen = false

                        DropdownToggle.Text = ">"
                        TweenService:Create(DropdownToggle, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = 0}):Play()

                        TweenService:Create(DropdownTitle, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextColor3 = Color3.new(1, 1, 1)}):Play()
                        DropdownTitle.Text = SelectedOptionName

                        TweenService:Create(ScrollingFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {ScrollBarImageTransparency = 1}):Play()
                        TweenService:Create(ScrollingFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 0, 0, DropdownYSize)}):Play()

                        TweenService:Create(DropdownMain, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 0, 0, DropdownYSize)}):Play()
                    end)
                end
        
                DropdownToggle.MouseButton1Down:Connect(function()
                    if IsDropdownWindowOpen then
                        IsDropdownWindowOpen = false

                        DropdownToggle.Text = ">"
                        TweenService:Create(DropdownToggle, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = 0}):Play()

                        TweenService:Create(DropdownTitle, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextColor3 = Color3.new(1, 1, 1)}):Play()
                        DropdownTitle.Text = SelectedOptionName

                        TweenService:Create(ScrollingFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {ScrollBarImageTransparency = 1}):Play()
                        TweenService:Create(ScrollingFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 0, 0, DropdownYSize)}):Play()

                        TweenService:Create(DropdownMain, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 0, 0, DropdownYSize)}):Play()
                    elseif not IsDropdownWindowOpen then
                        Body.ClipsDescendants = false
                        Section1Holder.ClipsDescendants = false

                        IsDropdownWindowOpen = true

                        DropdownToggle.Text = "<"
                        TweenService:Create(DropdownToggle, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = -360}):Play()

                        TweenService:Create(DropdownTitle, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextColor3 = Color3.new(0.698039, 0.698039, 0.698039)}):Play()
                        DropdownTitle.Text = name

                        TweenService:Create(ScrollingFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {ScrollBarImageTransparency = 0}):Play()
                        TweenService:Create(ScrollingFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 153, 0, DropdownYSize)}):Play()

                        TweenService:Create(DropdownMain, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 153, 0, DropdownYSize)}):Play()
                    end
                end)

                SectionToggle.MouseButton1Down:Connect(function()
                    if not IsSectionOpen then
                        ExtendSectionSize(30)
                        ExtendBodySize(30)
                    elseif IsSectionOpen then
                        IsDropdownWindowOpen = false

                        DropdownToggle.Text = ">"
                        TweenService:Create(DropdownToggle, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = 0}):Play()

                        TweenService:Create(DropdownTitle, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextColor3 = Color3.new(1, 1, 1)}):Play()
                        DropdownTitle.Text = SelectedOptionName

                        TweenService:Create(ScrollingFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {ScrollBarImageTransparency = 1}):Play()
                        TweenService:Create(ScrollingFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 0, 0, 0)}):Play()

                        TweenService:Create(DropdownMain, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 0, 0, DropdownYSize)}):Play()
                        
                        Body.ClipsDescendants = true
                        Section1Holder.ClipsDescendants = true

                        UnExtendSectionSize(30)
                        UnExtendBodySize(30)
                    end
                end)

                WindowToggle.MouseButton1Down:Connect(function()
                    IsDropdownWindowOpen = false

                    DropdownToggle.Text = ">"
                    TweenService:Create(DropdownToggle, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = 0}):Play()

                    TweenService:Create(DropdownTitle, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextColor3 = Color3.new(1, 1, 1)}):Play()

                    DropdownTitle.Text = SelectedOptionName
                    TweenService:Create(ScrollingFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {ScrollBarImageTransparency = 1}):Play()
                    TweenService:Create(ScrollingFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 0, 0, DropdownYSize)}):Play()

                    TweenService:Create(DropdownMain, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 0, 0, DropdownYSize)}):Play()
                    
                    Body.ClipsDescendants = true
                    Section1Holder.ClipsDescendants = true

                    if not IsTabOpen then
                        if IsSectionOpen then
                            ExtendBodySize(30)
                            TweenService:Create(SectionToggle, TweenInfo.new(0, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = -360}):Play()
                            TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
                        elseif not IsSectionOpen then
                            TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
                        end

                        
                    elseif IsTabOpen then
                        if IsSectionOpen then
                            UnExtendBodySize(30)
                            TweenService:Create(SectionToggle, TweenInfo.new(0, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = 0}):Play()
                            TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                        elseif not IsSectionOpen then
                            TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                        end
                    end

                    TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 1}):Play()
            
                    SectionToggle.Visible = false
            
                    repeat wait() until SectionToggle.TextTransparency == 1
                    SectionToggle.Visible = true
                    TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
                end)
            end

            return LibraryElements
        end

        return Sections
    end

    local PhantomForcesWindow = Library:NewWindow("Combat")

    local KillingCheats = PhantomForcesWindow:NewSection("Kill Options")

    local WeaponsCheat = PhantomForcesWindow:NewSection("Weapons")

    -- New winows

    local CharacterWindow = Library:NewWindow("Player")

    local MovemontCheat = CharacterWindow:NewSection("Movement")

    local CharacterCheat = CharacterWindow:NewSection("Character")

    -- New winows

    local OthersWindow = Library:NewWindow("Others")

    local TrollingCheat = OthersWindow:NewSection("Trolling")

    local ChatCheats = OthersWindow:NewSection("Chat Stuff")

    local InfoCheats = OthersWindow:NewSection("Info Stealer")

    local MegaSoundCheats = OthersWindow:NewSection("Megaphone Troll")

    -- Others MegaSoundCheats


    MegaSoundCheats:CreateTextbox("Audio Id", function(STRINGID)
        Idmusic = STRINGID
    end)

    MegaSoundCheats:CreateButton("Change Audio Id", function()
        --fatfatfat
        RadioCheck()
        local table_1 = {
            [1] = 'UpdateID',
            [2] = Idmusic
        };
        local Target = game:GetService("ReplicatedStorage").Events.UpdateLoadout;
        Target:FireServer(table_1);
    end)

    MegaSoundCheats:CreateButton("Play Audio All", function()
        --fatfatfat
        RadioCheck()
        local table_1 = {
            [1] = 'UpdateID',
            [2] = Idmusic
        };
        local Target = game:GetService("ReplicatedStorage").Events.UpdateLoadout;
        Target:FireServer(table_1);
        local bool_1 = true;
        local userdata_1 = game:GetService("ReplicatedStorage").Taunts.Boombox;
        local Target = game:GetService("ReplicatedStorage").Events.ReplicateGear;
        Target:FireServer(bool_1, userdata_1);
        local bool_1 = true;
        local userdata_1 = game:GetService("ReplicatedStorage").Taunts.Megaphone;
        local Target = game:GetService("ReplicatedStorage").Events.ReplicateGear;
        Target:FireServer(bool_1, userdata_1);
        wait(.4)
        pcall(function()
            for _, v in pairs(game:GetService("Players"):GetPlayers()) do
        local userdata_1 = v.Character.Head.Voice;
        local userdata_2 = game:GetService("Players").LocalPlayer.Character.Gear.CustomSound;
        local Target = game:GetService("ReplicatedStorage").Events.PlayVoice;
        Target:FireServer(userdata_1, userdata_2);
        end
        wait(.4)
        local bool_1 = true;
        local Target = game:GetService("ReplicatedStorage").Events.ReplicateGear;
        Target:FireServer(bool_1);
        local bool_1 = true;
        local Target = game:GetService("ReplicatedStorage").Events.ReplicateGear;
        Target:FireServer(bool_1);
    end)
    end)

    -- Others InfoCheats

    InfoCheats:CreateTextbox("Player Username", function(usernamePicked)
        --fatfatfat
        _G.Username = usernamePicked
    end)

    InfoCheats:CreateButton("Print Info", function()
        --fatfatfat
        InfoStealer()
    end)

    -- Others ChatCheats

    ChatCheats:CreateButton("Chat Countries", function()
        --fatfatfat
        __=gethiddenproperty or get_hidden_prop;for a,b in pairs(game:GetService("Players"):GetPlayers())do if b.Name~=game:GetService("Players").LocalPlayer.Name then local a=game:GetService("HttpService"):JSONDecode(game:HttpGet("http://country.io/names.json"))local c=a[__(b,"CountryRegionCodeReplicate")]local d="[Bot]: "..b.Name.." | Country: "..tostring(c)local e=nil;local f=true;local g=nil;local h=game:GetService("ReplicatedStorage").Events.PlayerChatted;h:FireServer(d,e,f,g)end end
    end)

    
    ChatCheats:CreateTextbox("Spam text", function(____0)
        --fatfatfat
        TextChat = ____0
    end)
    
    ChatCheats:CreateTextbox("Ez text", function(____02)
        --fatfatfat
        TextChat2 = ____02
    end)
    
    ChatCheats:CreateTextbox("GG text", function(____03)
        --fatfatfat
        TextChat3 = ____03
    end)

    TextChat2 = "Ez" -- Default
    TextChat3 = "GG" -- Default
    local SavedKills = game:GetService("Players").LocalPlayer.Status.SessionKills.Value
    local SavedValue2 = nil
    local __Cooldown = true
    ChatCheats:CreateToggle("Auto GG", function(__ChatGG)
        --fatfatfat
        __ChatGGValue = __ChatGG
    end)

    ChatCheats:CreateToggle("Auto Ez", function(__ChatEz)
        --fatfatfat
        __ChatEzValue = __ChatEz
    end)


    ChatCheats:CreateToggle("Spam Chat", function(__Spami)
        --fatfatfat
        __SpamiValue = __Spami
    end)
    -- Others TrollingCheat

    TrollingCheat:CreateToggle("Whizz All", function(__WhizzVl)
        --fatfatfat
        ___WhizzValue = __WhizzVl
    end)

    -- Player CharacterCheat 

    CharacterCheat:CreateButton("Respawn", function()
        --fatfatfat
        game:GetService("ReplicatedStorage").Events.LoadCharacter:FireServer()
    end)

    CharacterCheat:CreateToggle("Fast Respawn", function(__FastiRespawn)
        --fatfatfat
        ___FastrespawnValue = __FastiRespawn
    end)

    CharacterCheat:CreateToggle("Spin", function(__Spinny)
        --fatfatfat
        ___SpinnyValue = __Spinny
    end)

    CharacterCheat:CreateToggle("Anti Aim", function(__AntiAimi)
        --fatfatfat
        ___AntiAimivalue = __AntiAimi
    end)

    CharacterCheat:CreateDropdown("AntiAim Option", {"Look Up", "Look Down", "Broken UpperTorso"}, 2, function(mob2)
        --fatfatfat
        lookinglol = mob2
    end)

    -- Player MovemontCheat

    walkpop = 30
    MovemontCheat:CreateSlider("WalkSpeed", 10, 50, 30, false, function(__SliderWalkValue)
        --fatfatfat
        walkpop = __SliderWalkValue
    end)

    jumppop = 50
    MovemontCheat:CreateSlider("JumpPower", 10, 70, 50, false, function(__SliderJUmpValue)
        --fatfatfat
        jumppop = __SliderJUmpValue
    end)

    MovemontCheat:CreateToggle("Toggle WalkSpeed", function(_Walkvalue)
        --fatfatfat
        __WL = _Walkvalue
    end)

    MovemontCheat:CreateToggle("Toggle JumpPower", function(_Jumpvalue)
        --fatfatfat
        __JP = _Jumpvalue
    end)

    MovemontCheat:CreateToggle("Bhup", function(bhup1)
        --fatfatfat
        bup2v1 = bhup1
    end)

    -- Combat KillingCheats

    KillingCheats:CreateTextbox("Player Name", function(Playername0)
        --fatfatfat
        epocname = Playername0
    end)

    KillingCheats:CreateToggle("Kill Player", function(c2)
        --fatfatfat
        cv2 = c2
    end)

    DmgValue = 25
    KillingCheats:CreateSlider("Aura Damage", 1, 25, 25, false, function(laggyfj)
        --fatfatfat
        DmgValue = laggyfj
    end)

    REange_ = 20
    KillingCheats:CreateSlider("Aura Range", 1, 30, 20, false, function(_Range)
        --fatfatfat
        REange_ = _Range
    end)

    KillingCheats:CreateToggle("Tp Aura", function(b_99)
        --fatfatfat
        b__v0 = b_99
    end)

    KillingCheats:CreateToggle("Kill Aura", function(b0)
        --fatfatfat
        bv0 = b0
    end)

    KillingCheats:CreateToggle("AutoFarm", function(b01)
        --fatfatfat
        bv01 = b01
    end)

    -- Combat WeaponCheat


    WeaponsCheat:CreateToggle("Rainbow Gun", function(EEEEE) -- Changes Gun Color
        --fatfatfat
        _EEE = EEEEE
    end)

    WeaponsCheat:CreateToggle("Rainbow Hand", function(EEEEEE) -- Changes Hand Color
        --fatfatfat
        _EEEE = EEEEEE
    end)

    WeaponsCheat:CreateToggle("Rainbow Projectile", function(EEEEEEE) -- Changes Projectile Color
        --fatfatfat
        _EEEEE = EEEEEEE
    end)

    -- Loop
    spawn(function()
        while wait() do
            if ___WhizzValue then
                for _, v in pairs(game:GetService("Players"):GetPlayers()) do
                    local userdata_1 = v;
                    local Target = game:GetService("ReplicatedStorage").Events.Whizz;
                    Target:FireServer(userdata_1);
                end
            end
        end
    end)

    spawn(function()
        while wait() do
            if cv2 then
                if game:GetService("ReplicatedStorage").wkspc.Status.RoundOver.Value == false then
                    wait(.01)
                    local hgd6safdf1f1 = game.Players.LocalPlayer.NRPBS
                    local nyygdy7g1d7gdg167wgdw = game.workspace
                    if hgd6safdf1f1.Health.Value < 0 then
                        game:GetService("ReplicatedStorage").Events.LoadCharacter:FireServer()
                        hgd6safdf1f1.Health.Value = 100
                    end
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players[epocname].Character.HumanoidRootPart.CFrame+Vector3.new(nil,10,nil)
                    local number_1 = math.huge;
                    local userdata_1 = game.Players[epocname].Character.Hitbox;
                    local Target = game:GetService("ReplicatedStorage").Events.FallDamage;
                    Target:FireServer(number_1, userdata_1);
                end
            end
        end
    end)

    spawn(function()
        while wait() do
            if bv01 then
                __AutoFarm()
            end
        end
    end)
    spawn(function()
        while wait(0.13) do 
            if ___SpinnyValue then
                pcall(function()
                    AnimationId = "754658275"
                    local Anim = Instance.new("Animation")
                    Anim.AnimationId = "rbxassetid://"..AnimationId
                    local k = game.Players.LocalPlayer.Character.Humanoid:LoadAnimation(Anim)
                    k:Play()
                    k:AdjustSpeed(1.5)
                end)
            end
        end
    end)
    local uis = game:GetService('UserInputService') 
    local a = false
    uis.InputBegan:connect(function(k)
        if k.KeyCode == Enum.KeyCode.Space then 
            a = true
        end
    end)
    uis.InputEnded:connect(function(k)
        if k.KeyCode == Enum.KeyCode.Space then 
            a = false 
        end
    end)
    spawn(function()
        while wait() do
            if __SpamiValue then
                local string_1 = TextChat;
                local bool_1 = false;
                local bool_2 = true;
                local bool_3 = false;
                local Target = game:GetService("ReplicatedStorage").Events.PlayerChatted;
                Target:FireServer(string_1, bool_1, bool_2, bool_3);
            end
        end
    end)

    counter = 0
    function zigzag(X) return math.acos(math.cos(X*math.pi))/math.pi end
    a = game:GetService('RunService').Stepped:Connect(function()
        if __ChatEzValue then
            if __Cooldown then
                SavedKills = game:GetService("Players").LocalPlayer.ScoreFolder.Kills.Value
        end
        if game:GetService("Players").LocalPlayer.ScoreFolder.Kills.Value == SavedKills then
        else
            local string_1 = TextChat2;
            local bool_1 = false;
            local bool_2 = true;
            local bool_3 = false;
            local Target = game:GetService("ReplicatedStorage").Events.PlayerChatted;
            Target:FireServer(string_1, bool_1, bool_2, bool_3); 
        SavedKills = game:GetService("Players").LocalPlayer.ScoreFolder.Kills.Value
    end
    __Cooldown = false
    else
    __Cooldown = true
        end
        if __ChatGGValue then
            if game:GetService("ReplicatedStorage").wkspc.Status.RoundOver.Value == true then
                if CooldownGG == true then
                    local string_1 = TextChat3;
                    local bool_1 = false;
                    local bool_2 = true;
                    local bool_3 = false;
                    local Target = game:GetService("ReplicatedStorage").Events.PlayerChatted;
                    Target:FireServer(string_1, bool_1, bool_2, bool_3);
                    CooldownGG = false 
                end
            else
                CooldownGG = true 
            end
        end
        if ___AntiAimivalue then
            if lookinglol == "Look Up" then
                local number_1 = 1.3962564026167;
                local Target = game:GetService("ReplicatedStorage").Events.ControlTurn;
                Target:FireServer(number_1);
            end
            if lookinglol == "Look Down" then
                local number_1 = -1.5962564026167;
                local Target = game:GetService("ReplicatedStorage").Events.ControlTurn;
                Target:FireServer(number_1);
            end
            if lookinglol == "Broken UpperTorso" then
                local number_1 = -6.1;
                local Target = game:GetService("ReplicatedStorage").Events.ControlTurn;
                Target:FireServer(number_1);
            end
        end
        if ___FastrespawnValue then
            if game:GetService("Players").LocalPlayer.Character:FindFirstChild("Cam") then
                game:GetService("ReplicatedStorage").Events.LoadCharacter:FireServer()
            end 
        end
        if bup2v1 == true then
            if game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") then
                if a then 
                    game.Players.LocalPlayer.Character.Humanoid.Jump = true
                end
            end
        end
        if __JP then
            game.Players.LocalPlayer.Character.Humanoid.JumpPower = jumppop
        end
        if __WL then
            game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = walkpop
        end
        if _EEE then
            for i,v in pairs(game:GetService("Workspace").Camera.Arms:GetDescendants()) do
                if v:IsA("MeshPart") then
                    v.Color = Color3.fromHSV(zigzag(counter),1,1)
                    counter = counter + 0.0009
                end
            end
        end
        if _EEEE then
            for i,v in pairs(game:GetService("Workspace").Camera.Arms:GetDescendants()) do
            if v:IsA("Part") then
                v.Color = Color3.fromHSV(zigzag(counter),1,1)
                counter = counter + 0.0009
                end
            end
        end
        if _EEEEE then
            for i,v in pairs(game:GetService("Workspace")["Ray_Ignore"]:GetDescendants()) do
                if v:IsA("MeshPart") then
                    v.Color = Color3.fromHSV(zigzag(counter),1,1)
                    counter = counter + 0.0009
                end
                if v:IsA("Part") then
                    v.Color = Color3.fromHSV(zigzag(counter),1,1)
                    counter = counter + 0.0009
                end
            end
        end
        if b__v0 then
            __TpAura()
        end
        if bv0 then
            __KillAura()
        end
    end)

    function __AutoFarm()
        if game:GetService("ReplicatedStorage").wkspc.Status.RoundOver.Value == false then
            local string_1 = "Spectator";
            local Target = game:GetService("ReplicatedStorage").Events.JoinTeam;
            Target:FireServer(string_1);					
            for _, v in pairs(game:GetService("Players"):GetPlayers()) do
                if v.Name ~= game:GetService("Players").LocalPlayer.Name then
                    wait(.01)
                    for i=1,6 do
                        wait()
                        pcall(function()
                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.Character.HumanoidRootPart.CFrame+Vector3.new(nil,8,nil)
                        end)
                        wait(.01)
                        pcall(function()
                            local number_1 = math.huge;
                            local userdata_1 = v.Character.Hitbox;
                            local Target = game:GetService("ReplicatedStorage").Events.FallDamage;
                            Target:FireServer(number_1, userdata_1);
                            local number_1 = math.huge;
                            local userdata_1 = v.Character.Hitbox;
                            local Target = game:GetService("ReplicatedStorage").Events.FallDamage;
                            Target:FireServer(number_1, userdata_1);
                        end)
                    end
                end
            end
        end
    end

    function RadioCheck()
        Checking = 0
    for i,v in pairs(game:GetService("Players").LocalPlayer.Data.Emotes:GetChildren()) do
    if v.Name == "" or "" then
    if v.Value == "Megaphone" and "Boombox" then
    Checking = 1 
    end
    end
    end
    if Checking == 0 then
        local NotificationBindable = Instance.new("BindableFunction")
    NotificationBindable.OnInvoke = callback
    game.StarterGui:SetCore("SendNotification",  {
    Title = "Error";
    Text = "Please Equip a Boombox or a Megaphone in your emotes";
    Duration = 5;
    Callback = NotificationBindable;
    })
    end
    end
    function __KillAura()
        if game:GetService("ReplicatedStorage").wkspc.Status.RoundOver.Value == false then
            for i,v in pairs(game:GetService("Workspace"):GetChildren()) do
                if v:findFirstChild("Hitbox") then
                    if (game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position - v.Hitbox.Position).Magnitude < REange_ then
                    if v.Name ~= game:GetService("Players").LocalPlayer.Name then     
                        local number_1 = DmgValue;
                        local userdata_1 = v.Hitbox;
                        local Target = game:GetService("ReplicatedStorage").Events.FallDamage;
                        Target:FireServer(number_1, userdata_1);
                    end
                end
                end
            end
        end
    end
    function __TpAura()
        _G.range = REange_
        _G.Damage = DmgValue
        for _, v in pairs(game:GetService("Players"):GetPlayers()) do
            if v.Name ~= game:GetService("Players").LocalPlayer.Name then
                if (game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position - v.Character.HumanoidRootPart.Position).Magnitude < _G.range then
                    if game:GetService("ReplicatedStorage").wkspc.TwoTeams.Value == true then
                    if v.Status.Team.Value == game.Players.LocalPlayer.Status.Team.Value then
                        else
                        game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = v.Character.HumanoidRootPart.CFrame+Vector3.new(math.random(-5,5),1,math.random(-5,5))
                        pcall(function()
                            local number_1 = _G.Damage;
                            local userdata_1 = v.Character.Hitbox;
                            local Target = game:GetService("ReplicatedStorage").Events.FallDamage;
                            Target:FireServer(number_1, userdata_1);
                        end)
                    end
                    else
                        game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = v.Character.HumanoidRootPart.CFrame+Vector3.new(math.random(-5,5),1,math.random(-5,5))
                        pcall(function()
                            local number_1 = _G.Damage;
                            local userdata_1 = v.Character.Hitbox;
                            local Target = game:GetService("ReplicatedStorage").Events.FallDamage;
                            Target:FireServer(number_1, userdata_1);
                        end)
                    end
                end
            end
        end
    end
    function InfoStealer()
        print("-- Info Stealer | User: ".._G.Username.." --")
        for i,v in pairs(game:GetService("Players")[_G.Username].Settings:GetChildren()) do
            if v.Name == "" or "" then
                if v:IsA("NumberValue") then
                    print(v.Name..": "..v.Value)
                end
                if v:IsA("StringValue") then
                    print(v.Name..": "..v.Value)
                end
                if v:IsA("BoolValue") then
                    if v.Value then
                        print(v.Name..": true")
                    else
                        print(v.Name..": false")
                    end
                end
            end
        end
        print("-- Data Stealer --")
        for i,v in pairs(game:GetService("Players")[_G.Username].Data:GetChildren()) do
            if v:IsA("NumberValue") then
                print(v.Name..": "..v.Value)
            end
            if v:IsA("StringValue") then
                print(v.Name..": "..v.Value)
            end
            if v:IsA("BoolValue") then
                if v.Value then
                    print(v.Name..": true")
                else
                    print(v.Name..": false")
                end
            end
        end
        print("-- Emotes --")
        for i,v in pairs(game:GetService("Players")[_G.Username].Data.Emotes:GetChildren()) do
            if v:IsA("NumberValue") then
                print(v.Name..": "..v.Value)
            end
            if v:IsA("StringValue") then
                print(v.Name..": "..v.Value)
            end
            if v:IsA("BoolValue") then
                if v.Value then
                    print(v.Name..": true")
                else
                    print(v.Name..": false")
                end
            end
        end
        print("-- Bundles --")
        for i,v in pairs(game:GetService("Players")[_G.Username].Bundles:GetChildren()) do
            if v:IsA("StringValue") then
                print(v.Name)
            end
        end
        print("-- BattlePass --")
        for i,v in pairs(game:GetService("Players")[_G.Username]["Battle Pass"]:GetDescendants()) do
            if v:IsA("NumberValue") then
                print(v.Name..": "..v.Value)
            end
            if v:IsA("StringValue") then
                print(v.Name..": "..v.Value)
            end
            if v:IsA("BoolValue") then
                if v.Value then
                    print(v.Name..": true")
                else
                    print(v.Name..": false")
                end
            end
        end
    end
    --[[
    MainCheatsSection:CreateSlider("Walkspeed", 16, 125, 50, false, function()
    end)
    
    
    MainCheatsSection:CreateColorPicker("Gun Color", Color3.fromRGB(235, 64, 52), function(GunColor)
        game:GetService("Workspace").goatraptors.Head.Color = GunColor
    end)
    
    MainCheatsSection:CreateColorPicker("Crosshair Color", Color3.fromRGB(255, 176, 79), function()
    end)
    
    MainCheatsSection:CreateColorPicker("Knife Color", Color3.fromRGB(53, 252, 193), function()
    end)
    
    MainCheatsSection:CreateButton("Break All Windows", function()
        print'Broke all the windows!'
    end)
    
    MainCheatsSection:CreateTextbox("Ammo Amount", function(AmmoAmount)
        print(AmmoAmount)
    end)
    
    MainCheatsSection:CreateDropdown("Guns", {"AK12", "Intervention", "AP Pistol"}, 2, function(Guns)
        if Guns == "AK12" then
            print'b-bb-b-b-bb-bb-b-b- bang!!!!!'
        elseif Guns == "Intervention" then
            print'big boi pew pew.'
        elseif Guns == "AP Pistol" then
            print'handheld weapon'
        end
    end)
    
    MainCheatsSection:CreateDropdown("Meele", {"Knife", "Bow Knife", "Hammer", "Bat", "Lightsaber", "Butterfly Knife"}, 5, function(Meele)
        if Meele == "Knife" then
            print'shingg'
        elseif Meele == "Boom" then
            print'owweeee.'
        elseif Meele == "Lightsaber" then
            print'nyaaaa wera wera werrr werrrr.'
        end
    end)
    ]]
    end
    function sb2()
    local tween
    function toTarget(pos, targetPos, targetCFrame)
        local tween_s = game:service"TweenService"
        local info = TweenInfo.new((targetPos - pos).Magnitude/34, Enum.EasingStyle.Quad)
        local tic_k = tick()
        local tween, err = pcall(function()
            tween = tween_s:Create(game.Players.LocalPlayer.Character["HumanoidRootPart"], info, {CFrame = targetCFrame})
            tween:Play()
        end)
        if not tween then return err end
    end
    local library = loadstring(game:HttpGet(('https://cdn.senz.xyz/s/JrEnL5kX7C.txt')))()
    local w = library:CreateWindow("Sb2") 
    local b = w:CreateFolder("Main")  
    local m = w:CreateFolder("Movement")
    local s
    repeat wait()
        if s == nil then
            for i,v in pairs(getnilinstances()) do 
                if v:IsA("ModuleScript") then  
                    s = require(v)
                end
            end
        end
    until s ~= nil
    m:Slider("WalkSpeed",35,function(value1)
        
        walkpop = value1
    end)
    m:Toggle("Toggle Walkspeed",function(bool)
        
        v1 = bool
        spawn(function()
            game.RunService.RenderStepped:Connect(function()
                if v1 == true then
                    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = walkpop
                end
            end)
        end)
    end)
    m:Toggle("MaxZoom",function(m2)
        
        mv2 = m2
        spawn(function()
            while mv2 == true do wait()
                if mv2 == true then
                    game.Players.LocalPlayer.CameraMaxZoomDistance = math.huge
                else
                    game.Players.LocalPlayer.CameraMaxZoomDistance = 15
                end
            end
        end)
    end)
    local mobsList = {}
    _G.studs = 10
    _G.method = 0
    pcall(function()
        for i,v in pairs(workspace.Mobs:GetChildren()) do
            if v:FindFirstChild("HumanoidRootPart") and not table.find(mobsList, v.Name) then
                table.insert(mobsList, v.Name)
            end
        end
    end)
    req = require or getmenv
    function autoFarm()
        pcall(function()
            for i,v in pairs(workspace.Mobs:GetChildren()) do
                if string.match(v.Name, _G.mob) and v:FindFirstChild("Entity") and v.Entity:FindFirstChild("Health") and v:FindFirstChild("HumanoidRootPart") and tonumber(v.Entity.Health.Value) > 0 then
                    repeat wait()
                        toTarget(game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position,v.HumanoidRootPart.Position,v.HumanoidRootPart.CFrame*CFrame.new(0,1,0) - v.HumanoidRootPart.CFrame.lookVector * 2.2)
                    until v == nil or v.HumanoidRootPart == nil or v.Parent == nil or not w.flags.af or tonumber(v.Entity.Health.Value) <= 0
                end
            end
        end)
    end
    b:Toggle("Autofarm",function(b2)
        
    bv2 = b2
        if b2 == false and tween ~= nil then
            tween:Pause()
        end
    end)
    b:Dropdown("Mobs",mobsList,function(a)
        
        _G.mob = a
    end)
    function infe()
        pcall(function()
            if game:GetService("Players").LocalPlayer.Character then
                game:GetService("Players").LocalPlayer.Character.Entity.Stamina.Value = 100
            end
        end)
    end
    b:Toggle("Infinite Stamina",function(b1)
        
    bv1 = b1
    spawn(function()
        while bv1 == true do wait()
            infe()
        end
    end)
    end)
    spawn(function()
        while wait() do
            if bv2 then
                autoFarm()
            end
        end
    end)
    spawn(function()
        while wait() do
            if bv2 then
                s.Services.Combat.AttackRequest(0,nil,function() return nil end)
                wait(.15)
            end
        end
    end)
    spawn(function()
        while game:GetService("RunService").Heartbeat:wait() do
            if bv2 then
                pcall(function()
                    game:GetService("Players").LocalPlayer.Character.Humanoid:ChangeState(11)
                end)
            end
        end
    end)
    b:DestroyGUI()
    end
    function recoil()

        local library = loadstring(game:HttpGet(('https://cdn.senz.xyz/s/JrEnL5kX7C.txt')))()
        local w = library:CreateWindow("Recoil Beta")
        local b = w:CreateFolder("Combat")
        local m = w:CreateFolder("Movement")
        local g = w:CreateFolder("Gui Settings")
        ValueHitbox = 1
        b:Slider("Hitbox Size",10,function(b0)
            --fatfatfat
            ValueHitbox = b0
        end)
        b:Toggle("Toggle Hitbox",function(hitbox1)
            --fatfatfat
            b1 = hitbox1
            spawn(function()
                pcall(function()
                    game.RunService.RenderStepped:Connect(function()
                        if b1 == true then
                            for _, v in pairs(game:GetService("Players"):GetPlayers()) do
                                if v.Name ~= game:GetService("Players").LocalPlayer.Name then
                                    v.Character.Head.CanCollide = false
                                    v.Character.Head.Size = Vector3.new(ValueHitbox,ValueHitbox,ValueHitbox)
                                    v.Character.LowerTorso.CanCollide = false
                                    v.Character.LowerTorso.Size = Vector3.new(ValueHitbox,ValueHitbox,ValueHitbox)
                                    v.Character.Head.Transparency = 0.2
                                    v.Character.LowerTorso.Transparency = 0.2
                                end
                            end
                        else
                            for _, v in pairs(game:GetService("Players"):GetPlayers()) do
                                if v.Name ~= game:GetService("Players").LocalPlayer.Name then
                                    v.Character.LowerTorso.Size = Vector3.new(1, 1, 0.7)
                                    v.Character.Head.Size = Vector3.new(0.8, 1, 0.63)
                                end
                            end
                        end
                    end)
                end)
            end)
        end)
        m:Slider("Boost Power",30,function(value1)
            --fatfatfat
            BoostPower = value1
        end)
        m:Toggle("Speed boost",function(boost)
            --fatfatfat
            boost1 = boost
            spawn(function()
                while boost1 == true do wait()
                    pcall(function()
                        for i=1,BoostPower do
                            if game.Players.LocalPlayer.Character.Humanoid.MoveDirection == Vector3.new(0,0,0) then
                            else
                                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame*CFrame.new(0,0,-0.1)
                            end
                        end
                    end)
                end
            end)
        end)
            
        m:Slider("JumpPower",350,function(value2)
            --fatfatfat
            jumppop = value2
        end)
        m:Toggle("Toggle JumpPower",function(bool)
            --fatfatfat
            v1 = bool
            spawn(function()
                game.RunService.RenderStepped:Connect(function()
                    if v1 == true then
                        game.Players.LocalPlayer.Character.Humanoid.JumpPower = jumppop
                    end
                end)
            end)
        end)
        g:DestroyGUI()
        g:Button("Rejoin Game",function()
        game:GetService('TeleportService'):Teleport(game.PlaceId)
        end)
    end
    function mm3()
        local library = loadstring(game:HttpGet(('https://cdn.senz.xyz/s/JrEnL5kX7C.txt')))()
        local w = library:CreateWindow("Beta MM3")
        local b = w:CreateFolder("Hitbox [Gun]") 
        local m = w:CreateFolder("Movement") 
        local esp = w:CreateFolder("Visual")
        local o = w:CreateFolder("Others") 
        local c = w:CreateFolder("Case") 
        local i = w:CreateFolder("Plr Info") 
        local g = w:CreateFolder("Gui Settings")
        ValueHitbox = 1
        b:Slider("Hitbox Size",50,function(b0)
            --fatfatfat
            ValueHitbox = b0
        end)
        b:Toggle("Toggle Hitbox",function(hitbox1)
            --fatfatfat
            b1 = hitbox1
            spawn(function()
                pcall(function()
                    while b1 == true do
                        wait(.1)
                        if b1 == true then
                            function getplrsname()
                                for i,v in pairs(game:GetChildren()) do
                                    if v.ClassName == "Players" then
                                        return v.Name
                                    end
                                end
                            end
                            local players = getplrsname()
                            local plr = game[players].LocalPlayer
                            coroutine.resume(coroutine.create(function()
                                coroutine.resume(coroutine.create(function()
                                    for _,v in pairs(game[players]:GetPlayers()) do
                                        if v.Name ~= plr.Name and v.Character then
                                                v.Character.HumanoidRootPart.Size = Vector3.new(ValueHitbox,ValueHitbox,ValueHitbox)
                                                v.Character.HumanoidRootPart.CanCollide = false
                                        end
                                    end
                                end))
                            end))
                        else
                            wait(.1)
                            for _, v in pairs(game:GetService("Players"):GetPlayers()) do
                                if v.Name ~= game:GetService("Players").LocalPlayer.Name then
                            v.Character.HumanoidRootPart.Size = Vector3.new(1,1,1)
                                end
                            end
                        end
                    end
                end)
            end)
        end)
        b:Toggle("Show Hitbox",function(hitbox2)
            --fatfatfat
            b2 = hitbox2
            spawn(function()
                pcall(function()
                    while b2 == true do
                        wait(.1)
                        function getplrsname()
                            for i,v in pairs(game:GetChildren()) do
                                if v.ClassName == "Players" then
                                    return v.Name
                                end
                            end
                        end
                        local players = getplrsname()
                        local plr = game[players].LocalPlayer
                        coroutine.resume(coroutine.create(function()
                            coroutine.resume(coroutine.create(function()
                                for _,v in pairs(game[players]:GetPlayers()) do
                                    if v.Name ~= plr.Name and v.Character then
                                        if b2 == true then
                                            v.Character.HumanoidRootPart.CanCollide = false
                                            v.Character.HumanoidRootPart.Transparency = 0.7
                                        else
                                            v.Character.HumanoidRootPart.Transparency = 1
                                        end
                                    end
                                end
                            end))
                        end))
                    end
                end)
            end)
        end)
        m:Slider("Boost Power",30,function(value1)
            --fatfatfat
            BoostPower = value1
        end)
        m:Toggle("Speed boost",function(boost)
            --fatfatfat
            boost1 = boost
            spawn(function()
                while boost1 == true do wait()
                    pcall(function()
                        for i=1,BoostPower do
                            if game.Players.LocalPlayer.Character.Humanoid.MoveDirection == Vector3.new(0,0,0) then
                            else
                                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame*CFrame.new(0,0,-0.1)
                            end
                        end
                    end)
                end
            end)
        end)
        m:Toggle("No Gravity",function(m1)
            --fatfatfat
            mv1 = m1
            spawn(function()
                if m1 then
                    game:GetService("Workspace").Gravity = 100
                else
                    game:GetService("Workspace").Gravity = 196.2
                end
            end)
        end)	
        m:Toggle("Fly",function(bool7)
            --fatfatfat
            v7 = bool7
            spawn(function()
                if v7 == true then 
                    _G.FLYING = true
                    local LP = game:service('Players').LocalPlayer
                    local T = LP.Character.HumanoidRootPart
                    local CONTROL = {F = 0, B = 0, L = 0, R = 0}
                    local lCONTROL = {F = 0, B = 0, L = 0, R = 0}
                    local SPEED = 100
                    local MOUSE = LP:GetMouse()
                    local function FLY()
                    local BG = Instance.new('BodyGyro', T)
                    local BV = Instance.new('BodyVelocity', T)
                    BG.P = 9e4
                    BG.maxTorque = Vector3.new(9e9, 9e9, 9e9)
                    BG.cframe = T.CFrame
                    BV.velocity = Vector3.new(0, 0.1, 0)
                    BV.maxForce = Vector3.new(9e9, 9e9, 9e9)
                    spawn(function()
                    repeat wait()
                        LP.Character.Humanoid.PlatformStand = true
                        if CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 then
                            SPEED = 100
                        elseif not (CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0) and SPEED ~= 0 then
                            SPEED = 0
                        end
                        if (CONTROL.L + CONTROL.R) ~= 0 or (CONTROL.F + CONTROL.B) ~= 0 then
                            BV.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (CONTROL.F + CONTROL.B)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(CONTROL.L + CONTROL.R, (CONTROL.F + CONTROL.B) * 0.2, 0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
                            lCONTROL = {F = CONTROL.F, B = CONTROL.B, L = CONTROL.L, R = CONTROL.R}
                        elseif (CONTROL.L + CONTROL.R) == 0 and (CONTROL.F + CONTROL.B) == 0 and SPEED ~= 0 then
                            BV.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lCONTROL.F + lCONTROL.B)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lCONTROL.L + lCONTROL.R, (lCONTROL.F + lCONTROL.B) * 0.2, 0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
                        else
                            BV.velocity = Vector3.new(0, 0.1, 0)
                        end
                            BG.cframe = game.Workspace.CurrentCamera.CoordinateFrame
                until not _G.FLYING
                CONTROL = {F = 0, B = 0, L = 0, R = 0}
                lCONTROL = {F = 0, B = 0, L = 0, R = 0}
                SPEED = 0
                BG:destroy()
                BV:destroy()
                LP.Character.Humanoid.PlatformStand = false
            end)
                end
                
                MOUSE.KeyDown:connect(function(KEY)
                if KEY:lower() == 'w' then
                CONTROL.F = 1
                elseif KEY:lower() == 's' then
                CONTROL.B = -1
                elseif KEY:lower() == 'a' then
                CONTROL.L = -1 
                elseif KEY:lower() == 'd' then 
                CONTROL.R = 1
                end
                end)
                
                MOUSE.KeyUp:connect(function(KEY)
                if KEY:lower() == 'w' then
                CONTROL.F = 0
                elseif KEY:lower() == 's' then
                CONTROL.B = 0
                elseif KEY:lower() == 'a' then
                CONTROL.L = 0
                elseif KEY:lower() == 'd' then
                CONTROL.R = 0
                end
                end)
                
                FLY()
                else
                _G.FLYING = false
                    end
                end)
        end)
        m:Toggle("MaxZoom",function(m2)
            --fatfatfat
            mv2 = m2
            spawn(function()
                while mv2 == true do wait()
                    if mv2 == true then
                        game.Players.LocalPlayer.CameraMaxZoomDistance = 999999999999999
                    else
                        game.Players.LocalPlayer.CameraMaxZoomDistance = 10
                    end
                end
            end)
        end)
        o:Toggle("AutoFarm",function(__o1)
            --fatfatfat
            __ov1 = __o1
            spawn(function()
                while wait() do
                    if __ov1 then
                        if Action == "2" then
                            pcall(function()
                                if game.Players.LocalPlayer.Character.Humanoid.Health == 100 then
                                    for _, v in pairs(game:GetService("Players"):GetPlayers()) do
                                        if v.Name ~= game:GetService("Players").LocalPlayer.Name then
                                            for i=1,10 do
                                                wait()
                                                pcall(function()
                                                    if __ov1 then
                                                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.Character.HumanoidRootPart.CFrame*CFrame.new(0,0,3)
                                                        local Target = game.Players.LocalPlayer.Character.Knife.KnifeScript.ClientStab:FireServer()
                                                    end
                                                end)
                                            end
                                            pcall(function()
                                                if __ov1 then
                                                    game.Players.LocalPlayer.Character.Humanoid:EquipTool(game:GetService("Players").LocalPlayer.Backpack.Knife)
                                                end
                                            end)
                                        end
                                    end
                                end
                            end)
                        end
                    end
                end
            end)
        end)
        o:Toggle("Collect Coins",function(o1)
            --fatfatfat
            ov1 = o1
            spawn(function()
                while ov1 do wait()
                    pcall(function()
                        for _,v in pairs(game:GetService("Workspace").CoinsFolder:GetDescendants()) do
                            if v:IsA("TouchTransmitter") then
                                firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v.Parent, 0)
                                wait()
                                firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v.Parent, 1)
                            end
                        end
                    end)
                end
            end)
        end)
        o:Toggle("Pick Revolver",function(o2)
            --fatfatfat
            ov2 = o2
            spawn(function()
                while ov2 do wait()
                    pcall(function()
                        for _,v in pairs(game:GetService("Workspace").RevolverPickUp:GetDescendants()) do
                            if v:IsA("TouchTransmitter") then
                                firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v.Parent, 0)
                                firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v.Parent, 1) 
                            end
                        end
                    end)
                end
            end)
        end)
        o:Button("Teleport Spawn",function()
            --fatfatfat
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-64.9476318, 307.6698, -461.497833, -0.999998033, 3.01827647e-08, -0.0019699214, 3.00663316e-08, 1, 5.91345675e-08, 0.0019699214, 5.90752265e-08, -0.999998033)
        end)
        o:Label("Trolling",Color3.fromRGB(30,30,30),Color3.fromRGB(255,255,255))
        o:Toggle("Lagg Server",function(o3)
            --fatfatfat
            ov3 = o3
            spawn(function()
                while ov3 do wait()
                    for i=1,30 do        
                        game:GetService("ReplicatedStorage").Interactions.Server.SendChatMessage:FireServer("Sharp Hub Winning!!")
                    end
                end
            end)
        end)
        o:Box("Text Chat","string",function(oBox)
            --fatfatfat
            textValue = oBox
        end)
        o:Toggle("Spam Chat",function(o4)
            --fatfatfat
            ov4 = o4
            spawn(function()
                while ov4 do wait()
                        game:GetService("ReplicatedStorage").Interactions.Server.SendChatMessage:FireServer(textValue)
                end
            end)
        end)
        esp:Toggle("Name Esp",function(esp1)
            --fatfatfat
            esp2 = esp1
            spawn(function()
                wait()
                if esp2 == true then
                    local Holder = Instance.new("Folder", game.CoreGui)
                    Holder.Name = "ESP"
                    local Box = Instance.new("BoxHandleAdornment")
                    Box.Name = "nilBox"
                    Box.Size = Vector3.new(4, 7, 4)
                    Box.Color3 = Color3.new(100 / 255, 100 / 255, 100 / 255)
                    Box.Transparency = 1000
                    Box.ZIndex = 0
                    Box.AlwaysOnTop = false
                    Box.Visible = false
                    local NameTag = Instance.new("BillboardGui")
                    NameTag.Name = "nilNameTag"
                    NameTag.Enabled = false
                    NameTag.Size = UDim2.new(0, 200, 0, 50)
                    NameTag.AlwaysOnTop = true
                    NameTag.StudsOffset = Vector3.new(0, 1.8, 0)
                    local Tag = Instance.new("TextLabel", NameTag)
                    Tag.Name = "Tag"
                    Tag.BackgroundTransparency = 1
                    Tag.Position = UDim2.new(0, -50, 0, 0)
                    Tag.Size = UDim2.new(0, 300, 0, 20)
                    Tag.TextSize = 20
                    Tag.TextColor3 = Color3.new(100 / 255, 100 / 255, 100 / 255)
                    Tag.TextStrokeColor3 = Color3.new(0 / 255, 0 / 255, 0 / 255)
                    Tag.TextStrokeTransparency = 0.4
                    Tag.Text = "nil"
                    Tag.Font = Enum.Font.SourceSansBold
                    Tag.TextScaled = false
                    local LoadCharacter = function(v)
                    repeat wait() until v.Character ~= nil
                        v.Character:WaitForChild("Humanoid")
                        local vHolder = Holder:FindFirstChild(v.Name)
                        vHolder:ClearAllChildren()
                        local b = Box:Clone()
                        b.Name = v.Name .. "Box"
                        b.Adornee = v.Character
                        b.Parent = vHolder
                        local t = NameTag:Clone()
                        t.Name = v.Name .. "NameTag"
                        t.Enabled = true
                        t.Parent = vHolder
                        t.Adornee = v.Character:WaitForChild("Head", 5)
                        if not t.Adornee then
                            return UnloadCharacter(v)
                        end
                        t.Tag.Text = v.Name
                        b.Color3 = Color3.new(v.TeamColor.r, v.TeamColor.g, v.TeamColor.b)
                        t.Tag.TextColor3 = Color3.new(v.TeamColor.r, v.TeamColor.g, v.TeamColor.b)
                        local Update
                        local UpdateNameTag = function()
                            if not pcall(function()
                                v.Character.Humanoid.DisplayDistanceType = Enum.HumanoidDisplayDistanceType.None
                                t.Tag.Text = v.Name .. "\n" .. ((maxh ~= 0 and tostring(math.floor((h / maxh) * 100))) or "0") .. "%  " .. tostring(h) .. "/" .. tostring(maxh)
                            end) then
                                Update:Disconnect()
                            end
                            end
                            UpdateNameTag()
                            Update = v.Character.Humanoid.Changed:Connect(UpdateNameTag)
                            end
                            local UnloadCharacter = function(v)
                                local vHolder = Holder:FindFirstChild(v.Name)
                                if vHolder and (vHolder:FindFirstChild(v.Name .. "Box") ~= nil or vHolder:FindFirstChild(v.Name .. "NameTag") ~= nil) then
                                    vHolder:ClearAllChildren()
                                end
                            end
                            local LoadPlayer = function(v)
                                local vHolder = Instance.new("Folder", Holder)
                                vHolder.Name = v.Name
                                v.CharacterAdded:Connect(function()
                                    pcall(LoadCharacter, v)
                                end)
                                v.CharacterRemoving:Connect(function()
                                    pcall(UnloadCharacter, v)
                                end)
                                v.Changed:Connect(function(prop)
                                    if prop == "TeamColor" then
                                        UnloadCharacter(v)
                                        wait()
                                        LoadCharacter(v)
                                    end
                                end)
                                LoadCharacter(v)
                            end
                            
                            local UnloadPlayer = function(v)
                                UnloadCharacter(v)
                                local vHolder = Holder:FindFirstChild(v.Name)
                                if vHolder then
                                    vHolder:Destroy()
                                end
                            end
                            
                            for i,v in pairs(game:GetService("Players"):GetPlayers()) do
                                spawn(function() pcall(LoadPlayer, v) end)
                            end
                            
                            game:GetService("Players").PlayerAdded:Connect(function(v)
                                pcall(LoadPlayer, v)
                            end)
                            
                            game:GetService("Players").PlayerRemoving:Connect(function(v)
                                pcall(UnloadPlayer, v)
                            end)
                            
                            game:GetService("Players").LocalPlayer.NameDisplayDistance = 0
                    else
                        pcall(function()
                            game.CoreGui.ESP:Remove()
                        end)
                end
            end)
        end)
        i:Box("Players name","string",function(value6)
            --fatfatfat
            UsernameInfo = value6
        end)
        i:Button("Print Player Info",function()
            --fatfatfat
            local v9 = game.Players[UsernameInfo].Stats
            local v10 = game.Players[UsernameInfo].Settings
            print("-== Info Username "..game.Players[UsernameInfo].Name.." ==-")
            print("Level: "..v9.Level.Value)
            print("Xp: "..v9.XP.Value)
            if v9.OwnsRadio == true then
                print("OwnsRadio: yes")
            else
                print("OwnsRadio: no")
            end
            print("Coins: "..v9.Coins.Value)
            print("GroupRole: "..v9.GroupRole.Value)
            print("- Client Settings -")
            if v10.MusicMuted.Value == true then
                print("MusicMuted: yes")
            else
                print("MusicMuted: no")
            end
            if v10.RadiosMuted.Value == true then
                print("RadiosMuted: yes")
            else
                print("RadiosMuted: no")
            end
                print("CurrentRadioID: "..v10.CurrentRadioID.Value)
        end)
        g:DestroyGUI()
                local ScreenGui = Instance.new("ScreenGui")
                local Frame = Instance.new("Frame")
                local Mudtext = Instance.new("TextLabel")
                local Sherrif = Instance.new("TextLabel")
                local TextLabel = Instance.new("TextLabel")
                local TextLabel_2 = Instance.new("TextLabel")
                
                g:Toggle("Detector Gui",function(dec)
                    dec1 = dec
                    spawn(function()
                    if dec1 == true then
                        Frame.Visible = true
                    else
                        Frame.Visible = false
                end
                end)
                end)
                ScreenGui.Parent = game:WaitForChild("CoreGui")
                
                Frame.Visible = false
                Frame.Parent = ScreenGui
                Frame.Active = true
                Frame.Draggable = true
                Frame.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
                Frame.BorderColor3 = Color3.fromRGB(34, 34, 34)
                Frame.Position = UDim2.new(0.500520825, 0, 0.567342103, 0)
                Frame.Size = UDim2.new(0, 285, 0, 171)
                
                Mudtext.Name = "Mudtext"
                Mudtext.Parent = Frame
                Mudtext.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                Mudtext.BackgroundTransparency = 1.000
                Mudtext.Position = UDim2.new(0.147368416, 0, 0.122807018, 0)
                Mudtext.Size = UDim2.new(0, 200, 0, 50)
                Mudtext.Font = Enum.Font.SourceSansLight
                Mudtext.Text = "MurdererName"
                Mudtext.TextColor3 = Color3.fromRGB(255, 0, 0)
                Mudtext.TextScaled = true
                Mudtext.TextSize = 20.000
                Mudtext.TextWrapped = true
                
                Sherrif.Name = "Sheriff"
                Sherrif.Parent = Frame
                Sherrif.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                Sherrif.BackgroundTransparency = 1.000
                Sherrif.Position = UDim2.new(0.147368416, 0, 0.415204674, 0)
                Sherrif.Size = UDim2.new(0, 200, 0, 50)
                Sherrif.Font = Enum.Font.SourceSansLight
                Sherrif.Text = "SheriffName"
                Sherrif.TextColor3 = Color3.fromRGB(62, 255, 223)
                Sherrif.TextScaled = true
                Sherrif.TextSize = 20.000
                Sherrif.TextWrapped = true
                
                TextLabel.Parent = Frame
                TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                TextLabel.BackgroundTransparency = 1.000
                TextLabel.Position = UDim2.new(-0.0701754391, 0, 0.894736886, 0)
                TextLabel.Size = UDim2.new(0, 86, 0, 18)
                TextLabel.Font = Enum.Font.SourceSansLight
                TextLabel.Text = "Sheriff"
                TextLabel.TextColor3 = Color3.fromRGB(62, 255, 223)
                TextLabel.TextScaled = true
                TextLabel.TextSize = 20.000
                TextLabel.TextWrapped = true
                
                TextLabel_2.Parent = Frame
                TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                TextLabel_2.BackgroundTransparency = 1.000
                TextLabel_2.Position = UDim2.new(0.0912280679, 0, 0.894736886, 0)
                TextLabel_2.Size = UDim2.new(0, 86, 0, 18)
                TextLabel_2.Font = Enum.Font.SourceSansLight
                TextLabel_2.Text = "Murderer"
                TextLabel_2.TextColor3 = Color3.fromRGB(255, 0, 4)
                TextLabel_2.TextScaled = true
                TextLabel_2.TextSize = 20.000
                TextLabel_2.TextWrapped = true
                spawn(function()
                    while wait() do
                        for a,b in pairs(game:GetService("Players"):GetPlayers()) do
                        for c,d in pairs(b.Backpack:GetDescendants()) do
                        if d.Name == "Revolver" then
                            Sherrif.Text = b.Name
                        end
                        if d.Name == "Knife" then
                            Mudtext.Text = b.Name
                        end
                        end
                        end
                    end
                end)
                c:Box("Case Name","string",function(value3)
                    casey = value3
                end)
                
                c:Dropdown("Case Type",{"KnifeSkins","RevolverSkins","RadioSkins","Pets","Toys","Perks","Effects","Emotes",},function(mob8)
                    CaseTy = mob8
                end)
                
                c:Toggle("Open Case",function(Case)
                    Case1 = Case
                    spawn(function()
                    while Case1 == true do wait(.01)
                        for i=1,10 do
                                local userdata_1 = game:GetService("ReplicatedStorage").ShopEntries[CaseTy][casey];
                                local Target = game:GetService("ReplicatedStorage").Interactions.Server.BuyShopItem;
                                Target:InvokeServer(userdata_1);
                        end
                end
                end)
                end)
            a = game:GetService('RunService').Stepped:Connect(function()
            if __ov1 then
            if game.Players:FindFirstChild("DevPlateau")then
                game.Players.LocalPlayer:Kick("Mod/Admin/Owner Joined game")
            end
            if game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Knife") then
            Action = "1"
        else
            if game.Players.LocalPlayer.Character:FindFirstChild("Knife") then
                Action = "2"
            else
                if game:GetService("Players").LocalPlayer.Backpack:FindFirstChild("Revolver") then 
                Action = "3"
                else
                    if game.Players.LocalPlayer.Character:FindFirstChild("Revolver") then
                        Action = "4"
                    else
                        Action = "5"
                    end
                end
            end
        end
        if Action == "5" then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-82.2656631, 309, -653.691162)
        
        end
        if Action == "1" then
            pcall(function()
                game.Players.LocalPlayer.Character.Humanoid:EquipTool(game:GetService("Players").LocalPlayer.Backpack.Knife)
            end)
        end
        
        if Action == "3" then
            pcall(function()
                game.Players.LocalPlayer.Character.Humanoid:EquipTool(game:GetService("Players").LocalPlayer.Backpack.Revolver)
            end)
        end
        if Action == "4" then
            for _, v in pairs(game:GetService("Players"):GetPlayers()) do
                if v.Name ~= game:GetService("Players").LocalPlayer.Name then
                if v.Backpack:FindFirstChild("Knife")  then
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.Character.HumanoidRootPart.CFrame*CFrame.new(0,0,5)
                            local userdata_1 = v.Character.Torso.Position;
                            local userdata_2 = v.Character.Torso;
                            local Target = game.Players.LocalPlayer.Character.Revolver.RevolverScript.ClientLeftDown;
                            Target:FireServer(userdata_1, userdata_2);
                else
                    if v.Character:FindFirstChild("Knife")  then
                        local userdata_1 = v.Character.Torso.Position;
                        local userdata_2 = v.Character.Torso;
                        local Target = game.Players.LocalPlayer.Character.Revolver.RevolverScript.ClientLeftDown;
                        Target:FireServer(userdata_1, userdata_2);
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.Character.HumanoidRootPart.CFrame*CFrame.new(0,0,5)
                    end
                end
                end
            end
        end
        pcall(function()
            for _,v in pairs(game:GetService("Workspace").CoinsFolder:GetDescendants()) do
                if v:IsA("TouchTransmitter") then
                    firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v.Parent, 0)
                    firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v.Parent, 1)
                end
            end
            for _,v in pairs(game:GetService("Workspace").RevolverPickUp:GetDescendants()) do
                if v:IsA("TouchTransmitter") then
                    firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v.Parent, 0)
                    firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v.Parent, 1)
                end
            end
        end)
        end
        end)
    end
    function eg()
        local library = loadstring(game:HttpGet(('https://cdn.senz.xyz/s/nxiNyFlHr6.txt')))()
        local w = library:CreateWindow("Eg!")
        local b = w:CreateFolder("Main")
        b:Label("Coin Options",Color3.fromRGB(38,38,38),Color3.fromRGB(200,200,200))
        b:Button("Collect All Coins",function()
            for i,v in pairs(workspace:GetDescendants()) do
                if v.Name == "coin" then
                    firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v, 0) 
                    firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v, 1)
                end
                if v.Name == "redcoin" then
                    firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v, 0)
                    firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v, 1) 
                end
                if v.Name == "greencoin" then
                    firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v, 0) 
                    firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v, 1) 
                end
                if v.Name == "bluecoin" then
                    firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v, 0) 
                    firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v, 1)
                end
                if v.Name == "purplecoin" then
                    firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v, 0)
                    firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v, 1)
                end
            end
        end)
        b:Toggle("Collect All Farm",function(b2)
            bv2 = b2
            spawn(function()
                while bv2 == true do wait(2)
                    for i,v in pairs(workspace:GetDescendants()) do
                        if v.Name == "coin" then
                            firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v, 0)
                            firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v, 1)
                        end
-- Released by the Sharp Hub owner, discord IDs: 317942197406269440 & 689878831552921757
                        if v.Name == "redcoin" then
                            firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v, 0)
                            firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v, 1)
                        end
                        if v.Name == "greencoin" then
                            firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v, 0)
                            firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v, 1)
                        end
                        if v.Name == "bluecoin" then
                            firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v, 0)
                            firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v, 1)
                        end
                        if v.Name == "purplecoin" then
                            firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v, 0)
                            firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v, 1)
                        end
                    end
                end
            end)
        end)
        b:Toggle("Slow Farm Coins",function(b1)
            bv1 = b1
            spawn(function()
                while bv1 == true do wait()
                    for i,v in pairs(workspace:GetDescendants()) do
                        if v.Name == "coin" then
                            if bv1 then
                                firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v, 0)
                                wait()
                                firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v, 1)
                            end 
                        end
                        if v.Name == "redcoin" then
                            if bv1 then
                                firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v, 0)
                                wait()
                                firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v, 1)
                            end
                        end
                        if v.Name == "greencoin" then
                            if bv1 then
                                firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v, 0)
                                wait()
                                firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v, 1)
                            end
                        end
                        if v.Name == "bluecoin" then
                            if bv1 then
                                firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v, 0)
                                wait()
                                firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v, 1)
                            end
                        end
                        if v.Name == "purplecoin" then
                            if bv1 then
                                firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v, 0)
                                wait()
                                firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v, 1)
                            end
                        end
                    end
                end
            end)
        end)
        b:Label("Collect All Farm, Collects all the coins every 3/6 seconds.",Color3.fromRGB(38,38,38),Color3.fromRGB(222,222,222)) --BgColor,TextColor
        b:Label("Gui Settings",Color3.fromRGB(38,38,38),Color3.fromRGB(200,200,200)) --BgColor,TextColor
        b:DestroyGUI()
        b:GuiSettings()
    end
    function RoBoxing()
        local char = game:GetService("Players").LocalPlayer.Character
        local plr = game:GetService("Players").LocalPlayer
        local plrgui = game:GetService("Players").LocalPlayer.PlayerGui
        local library = loadstring(game:HttpGet(('https://cdn.senz.xyz/s/JrEnL5kX7C.txt')))()
        local w = library:CreateWindow("Window")
        local b = w:CreateFolder("Main")
        local esp = w:CreateFolder("Visual")
        local g = w:CreateFolder("Gui Settings")
        Movends = "Legit"
        b:Dropdown("Speed Method",{"Legit","Hidden"},function(Value80)
            Movends = Value80
        end)
        Movends = "Legit"
        b:Dropdown("Accuracy Dummy",{"Dummy_Punch1","Dummy_Punch2","Dummy_Punch3","Dummy_Punch4"},function(DummyValue)
            DummName = DummyValue
        end)
        Value09 = ""
        b:Toggle("Farm Speed",function(b1)
            --fatfatfat
            bv1 = b1
            spawn(function()
                if bv1 == true then
                    game.RunService.RenderStepped:Connect(function()
                        if bv1 == true then
                            if Movends == "Legit" then
                                if game:GetService("Workspace")["Punch_Bag1"]["In_Use"].Value == false then
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-142.244156, 3.50129199, -28.8855648)
                                    Value09 = "1"
                                else
                                if game:GetService("Workspace")["Punch_Bag2"]["In_Use"].Value == false then
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-142.750336, 3.50129151, -36.8407898)
                                    Value09 = "2"
                                else
                                    Value09 = "3"
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-140.436813, 3.50129175, -32.5262108)
                                end
                            end
                        end
                        if Movends == "Hidden" then
                            workspace.Gravity = 0
                            game:GetService("Workspace")["Punch_Bag1"].Touch.Size = Vector3.new(10, 10, 42)
                            game:GetService("Workspace")["Punch_Bag2"].Touch.Size = Vector3.new(10, 10, 42)
                            if game:GetService("Workspace")["Punch_Bag1"]["In_Use"].Value == false then
                                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-146.19838, -3.75546932, -28.9711857)
                                Value09 = "1"
                            else
                                if game:GetService("Workspace")["Punch_Bag2"]["In_Use"].Value == false then
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-144.376816, -3.9438982, -37.0385323)
                                    Value09 = "2"
                                else
                                    Value09 = "3"
                                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-131.079514, -20.5987091, -38.181778)
                                end
                            end
                        end
                    end
                end)
                else
                    wait(1)
                    workspace.Gravity = 198.2
                    game:GetService("Workspace")["Punch_Bag1"].Touch.Size = Vector3.new(5.65989, 12.5833, 0.499993)
                    game:GetService("Workspace")["Punch_Bag2"].Touch.Size = Vector3.new(5.65989, 12.5833, 0.499993)
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-36.3062897, -20.5989285, 9.51561165)
                end
            end)
            spawn(function()
                while bv1 == true do wait()
                    if Value09 == "1" then
                        wait(.9)
                        game:GetService("ReplicatedStorage")["Strength_Exercises"]["Punch_Bag1"]:FireServer();
                        print ("1")
                    else
                        if Value09 == "2" then
                            wait(.9)
                            game:GetService("ReplicatedStorage")["Strength_Exercises"]["Punch_Bag2"]:FireServer();
                            print ("2")
                        else
                            if Value09 == "3" then
                            end
                        end
                    end
                end
            end)
            end)
        AccuracyValue = "0"
        b:Toggle("Farm Accuracy",function(b2)
            --fatfatfat
            bv2 = b2
            spawn(function()
                game.RunService.RenderStepped:Connect(function()
                    if bv2 == true then
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace")[DummName]["Torso_Position"].CFrame  
                    end
                end)
            end)
            spawn(function()
                while bv2 == true do wait(.4)
                    game:GetService("ReplicatedStorage")["Strength_Exercises"][DummName]:FireServer();
                    wait(1.2)
                end
            end)
            spawn(function()
                while bv2 == true do wait(.2)
                    fireclickdetector(game:GetService("Workspace")[DummName].Buttons.Right.ClickDetector, 3)
                    fireclickdetector(game:GetService("Workspace")[DummName].Buttons.Bottom.ClickDetector, 3)
                    fireclickdetector(game:GetService("Workspace")[DummName].Buttons.Top.ClickDetector, 3)
                    fireclickdetector(game:GetService("Workspace")[DummName].Buttons.Left.ClickDetector, 3)
                end
            end)
        end)
        b:Toggle("Farm Strength",function(b2)
            --fatfatfat
            bv2 = b2
            spawn(function()
                if bv2 == true then
                    while bv2 == true do wait()
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-114.185104, 15.5687084, -6.36945534)
                        wait(.36)
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-114.190887, 3.50129175, -6.83985424)
                        wait(.2)
                    end
                else
                    wait(.6)
                    for i,v in pairs(Workspace:GetDescendants()) do
                        if v.Name == "RopeTraining" then
                            v.Bottom.Size = Vector3.new(4.60836, 2.54612, 3.03)
                            v.Top.Size = Vector3.new(4.60836, 2.54612, 3.03)
                        end
                    end
                end
            end)
        end)
        b:Toggle("Farm Fitness",function(b3)
            --fatfatfat
            bv3 = b3
            spawn(function()
                pcall(function()
                    while bv3 == true do wait()
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame= game:GetService("Workspace").Pool.Back.CFrame
                        wait(.3)
                        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Pool.Front.CFrame
                        wait(.3)
                    end
                end)
            end)
        end)
        esp:Toggle("Name Esp",function(esp1) 
            --fatfatfat
            esp2 = esp1
            spawn(function()
                wait()
                if esp2 == true then
                    local Holder = Instance.new("Folder", game.CoreGui)
                    Holder.Name = "ESP"
                    local Box = Instance.new("BoxHandleAdornment")
                    Box.Name = "nilBox"
                    Box.Size = Vector3.new(4, 7, 4)
                    Box.Color3 = Color3.new(100 / 255, 100 / 255, 100 / 255)
                    Box.Transparency = 1000
                    Box.ZIndex = 0
                    Box.AlwaysOnTop = false
                    Box.Visible = false
                    local NameTag = Instance.new("BillboardGui")
                    NameTag.Name = "nilNameTag"
                    NameTag.Enabled = false
                    NameTag.Size = UDim2.new(0, 200, 0, 50)
                    NameTag.AlwaysOnTop = true
                    NameTag.StudsOffset = Vector3.new(0, 1.8, 0)
                    local Tag = Instance.new("TextLabel", NameTag)
                    Tag.Name = "Tag"
                    Tag.BackgroundTransparency = 1
                    Tag.Position = UDim2.new(0, -50, 0, 0)
                    Tag.Size = UDim2.new(0, 300, 0, 20)
                    Tag.TextSize = 20
                    Tag.TextColor3 = Color3.new(100 / 255, 100 / 255, 100 / 255)
                    Tag.TextStrokeColor3 = Color3.new(0 / 255, 0 / 255, 0 / 255)
                    Tag.TextStrokeTransparency = 0.4
                    Tag.Text = "nil"
                    Tag.Font = Enum.Font.SourceSansBold
                    Tag.TextScaled = false
                    local LoadCharacter = function(v)
                        repeat wait() until v.Character ~= nil
                            v.Character:WaitForChild("Humanoid")
                            local vHolder = Holder:FindFirstChild(v.Name)
                            vHolder:ClearAllChildren()
                            local b = Box:Clone()
                            b.Name = v.Name .. "Box"
                            b.Adornee = v.Character
                            b.Parent = vHolder
                            local t = NameTag:Clone()
                            t.Name = v.Name .. "NameTag"
                            t.Enabled = true
                            t.Parent = vHolder
                            t.Adornee = v.Character:WaitForChild("Head", 5)
                            if not t.Adornee then
                                return UnloadCharacter(v)
                            end
                            t.Tag.Text = v.Name
                            b.Color3 = Color3.new(v.TeamColor.r, v.TeamColor.g, v.TeamColor.b)
                            t.Tag.TextColor3 = Color3.new(v.TeamColor.r, v.TeamColor.g, v.TeamColor.b)
                            local Update
                            local UpdateNameTag = function()
                                if not pcall(function()
                                    v.Character.Humanoid.DisplayDistanceType = Enum.HumanoidDisplayDistanceType.None
                                    t.Tag.Text = v.Name .. "\n" .. ((maxh ~= 0 and tostring(math.floor((h / maxh) * 100))) or "0") .. "%  " .. tostring(h) .. "/" .. tostring(maxh)
                                end) then
                                Update:Disconnect()
                                end
                            end
                                UpdateNameTag()
                                Update = v.Character.Humanoid.Changed:Connect(UpdateNameTag)
                            end
                            local UnloadCharacter = function(v)
                                local vHolder = Holder:FindFirstChild(v.Name)
                                if vHolder and (vHolder:FindFirstChild(v.Name .. "Box") ~= nil or vHolder:FindFirstChild(v.Name .. "NameTag") ~= nil) then
                                    vHolder:ClearAllChildren()
                                end
                            end
                            local LoadPlayer = function(v)
                                local vHolder = Instance.new("Folder", Holder)
                                vHolder.Name = v.Name
                                v.CharacterAdded:Connect(function()
                                    pcall(LoadCharacter, v)
                                end)
                                v.CharacterRemoving:Connect(function()
                                    pcall(UnloadCharacter, v)
                                end)
                                v.Changed:Connect(function(prop)
                                    if prop == "TeamColor" then
                                        UnloadCharacter(v)
                                        wait()
                                        LoadCharacter(v)
                                    end
                                end)
                                LoadCharacter(v)
                            end
                            
                            local UnloadPlayer = function(v)
                                UnloadCharacter(v)
                                local vHolder = Holder:FindFirstChild(v.Name)
                                if vHolder then
                                    vHolder:Destroy()
                                end
                            end
                            
                            for i,v in pairs(game:GetService("Players"):GetPlayers()) do
                                spawn(function() pcall(LoadPlayer, v) end)
                            end
                            
                            game:GetService("Players").PlayerAdded:Connect(function(v)
                                pcall(LoadPlayer, v)
                            end)
                            
                            game:GetService("Players").PlayerRemoving:Connect(function(v)
                                pcall(UnloadPlayer, v)
                            end)
                            
                            game:GetService("Players").LocalPlayer.NameDisplayDistance = 0
                        else
                                game.CoreGui.ESP:Remove()
                            end
                    end)
        end)
        g:DestroyGUI()
        g:Button("Rejoin Game",function()
            --fatfatfat
            game:GetService('TeleportService'):Teleport(game.PlaceId)
        end)
                
                
                
        local vu = game:GetService("VirtualUser")
        game:GetService("Players").LocalPlayer.Idled:connect(function()
            vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
            wait(1)
            vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
        end)
    end
    function tankwarfare()

        local UserInputService = game:GetService("UserInputService")
        local TweenService = game:GetService("TweenService")
        local RunService = game:GetService("RunService")
        
        local Mouse = game:GetService("Players").LocalPlayer:GetMouse()
        
        local RainbowModeColorValue = 0
        local ColorPickerZIndex = 1
        
        local RainbowModeColorValue = 0
        local ColorPickerZIndex = 1
        
        local WindowPosition = 0
        
        local CoastifiedLibrary = Instance.new("ScreenGui")
        local Container = Instance.new("Frame")
        
        CoastifiedLibrary.Name = "CoastifiedLibrary"
        CoastifiedLibrary.Parent = game:GetService("CoreGui")
        
        Container.Name = "Container"
        Container.Parent = CoastifiedLibrary
        Container.BackgroundColor3 = Color3.new(1, 1, 1)
        Container.BackgroundTransparency = 1
        Container.Size = UDim2.new(0, 100, 0, 100)
        
        UserInputService.InputBegan:Connect(function(input)
            if input.KeyCode == Enum.KeyCode.RightControl then
                CoastifiedLibrary.Enabled = not CoastifiedLibrary.Enabled
            end
        end)
        
        function Dragging(instancename)
            local dragging = nil
            local dragInput = nil
            local dragStart = nil
            local startPos = nil
        
            local function update(input)
                local delta = input.Position - dragStart
                instancename.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
            end
        
            instancename.InputBegan:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                    dragging = true
                    dragStart = input.Position
                    startPos = instancename.Position
                    
                    input.Changed:Connect(function()
                        if input.UserInputState == Enum.UserInputState.End then
                            dragging = false
                        end
                    end)
                end
            end)
        
            instancename.InputChanged:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
                    dragInput = input
                end
            end)
        
            UserInputService.InputChanged:Connect(function(input)
                if input == dragInput and dragging then
                    update(input)
                end
            end)
        end
        
        local function RemoveSpaces(str)
            return str:gsub(" ", "")
        end
        
        coroutine.wrap(function()
            while wait() do
                RainbowModeColorValue = RainbowModeColorValue + 1/255
                if RainbowModeColorValue >= 1 then
                    RainbowModeColorValue = 0
                end
            end
        end)()
        
        
        local Library = {}
        
        function Library:NewWindow(name)
            local Window = Instance.new("ImageLabel")
            local Topbar = Instance.new("Frame")
            local WindowToggle = Instance.new("TextButton")
            local WindowTitle = Instance.new("TextLabel")
            local BottomRoundCover = Instance.new("Frame")
            local Body = Instance.new("ImageLabel")
            local Sorter = Instance.new("UIListLayout")
            local TopbarBodyCover = Instance.new("Frame")
        
            local WindowName = RemoveSpaces(name)
        
            WindowPosition = WindowPosition + 2
        
            local BodyYSize = 35
            local IsTabOpen = true
        
            local function ExtendBodySize(value)
                BodyYSize = BodyYSize + value
        
                TweenService:Create(Body, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 170, 0, BodyYSize)}):Play()
            end
        
            local function UnExtendBodySize(value)
                BodyYSize = BodyYSize - value
        
                TweenService:Create(Body, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 170, 0, BodyYSize)}):Play()
            end
        
            
            Window.Name = (WindowName .. "Window")
            Window.Parent = Container
            Window.BackgroundColor3 = Color3.new(0.0980392, 0.0980392, 0.0980392)
            Window.BackgroundTransparency = 1
            Window.Position = UDim2.new(WindowPosition, -100, 3, -265)
            Window.Size = UDim2.new(0, 170, 0, 30)
            Window.ZIndex = 2
            Window.Image = "rbxassetid://3570695787"
            Window.ImageColor3 = Color3.new(0.0980392, 0.0980392, 0.0980392)
            Window.ScaleType = Enum.ScaleType.Slice
            Window.SliceCenter = Rect.new(100, 100, 100, 100)
            Window.SliceScale =  0.05
        
            Topbar.Name = "Topbar"
            Topbar.Parent = Window
            Topbar.BackgroundColor3 = Color3.new(1, 1, 1)
            Topbar.BackgroundTransparency = 1
            Topbar.BorderSizePixel = 0
            Topbar.Size = UDim2.new(0, 170, 0, 30)
            Topbar.ZIndex = 2
        
            WindowToggle.Name = "WindowToggle"
            WindowToggle.Parent = Topbar
            WindowToggle.BackgroundColor3 = Color3.new(1, 1, 1)
            WindowToggle.BackgroundTransparency = 1
            WindowToggle.Position = UDim2.new(0.822450161, 0, 0, 0)
            WindowToggle.Size = UDim2.new(0, 30, 0, 30)
            WindowToggle.ZIndex = 2
            WindowToggle.Font = Enum.Font.SourceSansSemibold
            WindowToggle.Text = "-"
            WindowToggle.TextColor3 = Color3.new(1, 1, 1)
            WindowToggle.TextSize = 20
            WindowToggle.TextWrapped = true
        
            WindowToggle.MouseButton1Down:Connect(function()
                if not IsTabOpen then
                    IsTabOpen = true
                    TweenService:Create(WindowToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 1}):Play()
        
                    WindowToggle.Text = "-"
                    WindowToggle.TextSize = 20
                    WindowToggle.Visible = false
        
                    repeat wait() until WindowToggle.TextTransparency == 1
                    WindowToggle.Visible = true
                    TweenService:Create(WindowToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
                elseif IsTabOpen then
                    IsTabOpen = false
                    TweenService:Create(WindowToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 1}):Play()
                
                    WindowToggle.Text = "v"
                    WindowToggle.TextSize = 14
                    WindowToggle.Visible = false       
        
                    repeat wait() until WindowToggle.TextTransparency == 1
                    WindowToggle.Visible = true
                    TweenService:Create(WindowToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
                end
            end)
        
            WindowTitle.Name = "WindowTitle"
            WindowTitle.Parent = Topbar
            WindowTitle.BackgroundColor3 = Color3.new(1, 1, 1)
            WindowTitle.BackgroundTransparency = 1
            WindowTitle.Size = UDim2.new(0, 170, 0, 30)
            WindowTitle.ZIndex = 2
            WindowTitle.Font = Enum.Font.SourceSansBold
            WindowTitle.Text = name
            WindowTitle.TextColor3 = Color3.new(1, 1, 1)
            WindowTitle.TextSize = 17
        
            BottomRoundCover.Name = "BottomRoundCover"
            BottomRoundCover.Parent = Topbar
            BottomRoundCover.BackgroundColor3 = Color3.new(0.0980392, 0.0980392, 0.0980392)
            BottomRoundCover.BorderSizePixel = 0
            BottomRoundCover.Position = UDim2.new(0, 0, 0.833333313, 0)
            BottomRoundCover.Size = UDim2.new(0, 170, 0, 5)
            BottomRoundCover.ZIndex = 2
        
            Body.Name = "Body"
            Body.Parent = Window
            Body.BackgroundColor3 = Color3.new(0.137255, 0.137255, 0.137255)
            Body.BackgroundTransparency = 1
            Body.ClipsDescendants = true
            Body.Size = UDim2.new(0, 170, 0, BodyYSize)
            Body.Image = "rbxassetid://3570695787"
            Body.ImageColor3 = Color3.new(0.137255, 0.137255, 0.137255)
            Body.ScaleType = Enum.ScaleType.Slice
            Body.SliceCenter = Rect.new(100, 100, 100, 100)
            Body.SliceScale =  0.05
        
            Sorter.Name = "Sorter"
            Sorter.Parent = Body
            Sorter.SortOrder = Enum.SortOrder.LayoutOrder
        
            TopbarBodyCover.Name = "TopbarBodyCover"
            TopbarBodyCover.Parent = Body
            TopbarBodyCover.BackgroundColor3 = Color3.new(1, 1, 1)
            TopbarBodyCover.BackgroundTransparency = 1
            TopbarBodyCover.BorderSizePixel = 0
            TopbarBodyCover.Size = UDim2.new(0, 170, 0, 30)
        
            Dragging(Window)
        
            local Sections = {}
        
            function Sections:NewSection(name)
                local Section1Holder = Instance.new("Frame")
                local SectionInfo = Instance.new("Frame")
                local SectionToggle = Instance.new("TextButton")
                local SectionTitle = Instance.new("TextLabel")
                local Layout = Instance.new("UIListLayout")
        
                local SectionName = RemoveSpaces(name)
                local SectionToggleText = "v"
                local SectionYSize = 30
                local IsSectionOpen = false
        
                local function ExtendSectionSize(value)
                    SectionYSize = SectionYSize + value
            
                    TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 170, 0, SectionYSize)}):Play()
                end
            
                local function UnExtendSectionSize(value)
                    SectionYSize = SectionYSize - value
            
                    TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 170, 0, SectionYSize)}):Play()
                end
        
                Section1Holder.Name = (SectionName .. "Section")
                Section1Holder.Parent = Body
                Section1Holder.BackgroundColor3 = Color3.new(0.176471, 0.176471, 0.176471)
                Section1Holder.BorderSizePixel = 0
                Section1Holder.ClipsDescendants = true
                Section1Holder.Size = UDim2.new(0, 170, 0, SectionYSize)
                
                ExtendBodySize(30)
        
                SectionInfo.Name = "SectionInfo"
                SectionInfo.Parent = Section1Holder
                SectionInfo.BackgroundColor3 = Color3.new(1, 1, 1)
                SectionInfo.BackgroundTransparency = 1
                SectionInfo.Size = UDim2.new(0, 170, 0, 30)
                
                SectionToggle.Name = "SectionToggle"
                SectionToggle.Parent = SectionInfo
                SectionToggle.BackgroundColor3 = Color3.new(1, 1, 1)
                SectionToggle.BackgroundTransparency = 1
                SectionToggle.Position = UDim2.new(0.822450161, 0, 0, 0)
                SectionToggle.Size = UDim2.new(0, 30, 0, 30)
                SectionToggle.ZIndex = 2
                SectionToggle.Font = Enum.Font.SourceSansSemibold
                SectionToggle.Text = SectionToggleText
                SectionToggle.TextColor3 = Color3.new(1, 1, 1)
                SectionToggle.TextSize = 14
                SectionToggle.TextWrapped = true
                
                SectionTitle.Name = "SectionTitle"
                SectionTitle.Parent = SectionInfo
                SectionTitle.BackgroundColor3 = Color3.new(1, 1, 1)
                SectionTitle.BackgroundTransparency = 1
                SectionTitle.BorderSizePixel = 0
                SectionTitle.Position = UDim2.new(0.052941177, 0, 0, 0)
                SectionTitle.Size = UDim2.new(0, 125, 0, 30)
                SectionTitle.Font = Enum.Font.SourceSansBold
                SectionTitle.Text = name
                SectionTitle.TextColor3 = Color3.new(1, 1, 1)
                SectionTitle.TextSize = 17
                SectionTitle.TextXAlignment = Enum.TextXAlignment.Left
                
                Layout.Name = "Layout"
                Layout.Parent = Section1Holder
                Layout.SortOrder = Enum.SortOrder.LayoutOrder
        
                WindowToggle.MouseButton1Down:Connect(function()
                    if not IsTabOpen then
                        ExtendBodySize(30)
                        SectionToggle.Text = SectionToggleText
                        TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
                    elseif IsTabOpen then
                        UnExtendBodySize(30)
                        SectionToggle.Text = ""
                        TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                    end
                end)
        
                SectionToggle.MouseButton1Down:Connect(function()
                    if not IsSectionOpen then
                        IsSectionOpen = true
                        SectionToggleText = "-"
        
                        TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 1}):Play()
                        TweenService:Create(WindowToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 1}):Play()
        
                        SectionToggle.Text = SectionToggleText
                        SectionToggle.TextSize = 20
                        SectionToggle.Visible = false
                        WindowToggle.Visible = false
        
                        repeat wait() until SectionToggle.TextTransparency == 1 and WindowToggle.TextTransparency == 1
                        SectionToggle.Visible = true
                        WindowToggle.Visible = true
                        TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
                        TweenService:Create(WindowToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
                    elseif IsSectionOpen then
                        IsSectionOpen = false
                        SectionToggleText = "v"
        
                        TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 1}):Play()
                        TweenService:Create(WindowToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 1}):Play()
        
                        SectionToggle.Text = SectionToggleText
                        SectionToggle.TextSize = 14
                        SectionToggle.Visible = false
                        WindowToggle.Visible = false
        
                        repeat wait() until SectionToggle.TextTransparency == 1 and WindowToggle.TextTransparency == 1
                        SectionToggle.Visible = true
                        WindowToggle.Visible = true
                        TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
                        TweenService:Create(WindowToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
                    end
                end)
        
                local LibraryElements = {}
        
                function LibraryElements:CreateToggle(name, action)
                    local ToggleHolder = Instance.new("Frame")
                    local ToggleTitle = Instance.new("TextLabel")
                    local ToggleBackground = Instance.new("ImageLabel")
                    local ToggleButton = Instance.new("ImageButton")
                
                    local ToggleName = RemoveSpaces(name)
                    local Toggled = false
        
                    ToggleHolder.Name = (ToggleName .. "ToggleHolder")
                    ToggleHolder.Parent = Section1Holder
                    ToggleHolder.BackgroundColor3 = Color3.new(0.137255, 0.137255, 0.137255)
                    ToggleHolder.BorderSizePixel = 0
                    ToggleHolder.Size = UDim2.new(0, 170, 0, 30)
                
                    ToggleTitle.Name = "ToggleTitle"
                    ToggleTitle.Parent = ToggleHolder
                    ToggleTitle.BackgroundColor3 = Color3.new(1, 1, 1)
                    ToggleTitle.BackgroundTransparency = 1
                    ToggleTitle.BorderSizePixel = 0
                    ToggleTitle.Position = UDim2.new(0.052941177, 0, 0, 0)
                    ToggleTitle.Size = UDim2.new(0, 125, 0, 30)
                    ToggleTitle.Font = Enum.Font.SourceSansBold
                    ToggleTitle.Text = name
                    ToggleTitle.TextColor3 = Color3.new(1, 1, 1)
                    ToggleTitle.TextSize = 17
                    ToggleTitle.TextXAlignment = Enum.TextXAlignment.Left
                
                    ToggleBackground.Name = "ToggleBackground"
                    ToggleBackground.Parent = ToggleHolder
                    ToggleBackground.BackgroundColor3 = Color3.new(1, 1, 1)
                    ToggleBackground.BackgroundTransparency = 1
                    ToggleBackground.BorderSizePixel = 0
                    ToggleBackground.Position = UDim2.new(0.847058833, 0, 0.166666672, 0)
                    ToggleBackground.Size = UDim2.new(0, 20, 0, 20)
                    ToggleBackground.Image = "rbxassetid://3570695787"
                    ToggleBackground.ImageColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                
                    ToggleButton.Name = "ToggleButton"
                    ToggleButton.Parent = ToggleBackground
                    ToggleButton.BackgroundColor3 = Color3.new(1, 1, 1)
                    ToggleButton.BackgroundTransparency = 1
                    ToggleButton.Position = UDim2.new(0, 2, 0, 2)
                    ToggleButton.Size = UDim2.new(0, 16, 0, 16)
                    ToggleButton.Image = "rbxassetid://3570695787"
                    ToggleButton.ImageColor3 = Color3.new(1, 0.341176, 0.341176)
                    ToggleButton.ImageTransparency = 1
        
                    ToggleButton.MouseButton1Down:Connect(function()	
                        Toggled = not Toggled
                    
                        if Toggled then
                            TweenService:Create(ToggleButton, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {ImageTransparency = 0}):Play()
                        elseif not Toggled then
                            TweenService:Create(ToggleButton, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {ImageTransparency = 1}):Play()
                        end
        
                        action(Toggled)
                    end)
        
                    SectionToggle.MouseButton1Down:Connect(function()
                        if not IsSectionOpen then
                            ExtendSectionSize(30)
                            ExtendBodySize(30)
                        elseif IsSectionOpen then
                            UnExtendSectionSize(30)
                            UnExtendBodySize(30)
                        end
                    end)
        
                    WindowToggle.MouseButton1Down:Connect(function()
                        if not IsTabOpen then
                            if IsSectionOpen then
                                ExtendBodySize(30)
                                TweenService:Create(SectionToggle, TweenInfo.new(0, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = 360}):Play()
                                TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
                            elseif not IsSectionOpen then
                                TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
                            end
        
                            
                        elseif IsTabOpen then
                            if IsSectionOpen then
                                UnExtendBodySize(30)
                                TweenService:Create(SectionToggle, TweenInfo.new(0, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = 0}):Play()
                                TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                            elseif not IsSectionOpen then
                                TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                            end
                        end
        
                        TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 1}):Play()
                
                        SectionToggle.Visible = false
                
                        repeat wait() until SectionToggle.TextTransparency == 1
                        SectionToggle.Visible = true
                        TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
                    end)
                end
        
                function LibraryElements:CreateSlider(name, minimumvalue, maximumvalue, startvalue, precisevalue, action)
                    local SliderHolder = Instance.new("Frame")
                    local SliderTitle = Instance.new("TextLabel")
                    local SliderValueHolder = Instance.new("ImageLabel")
                    local SliderValue = Instance.new("TextLabel")
                    local SliderBackground = Instance.new("ImageLabel")
                    local Slider = Instance.new("ImageLabel")
        
                    local SliderName = RemoveSpaces(name)
                    local Dragging = false
                    local PreciseSliderValue = precisevalue
        
                    SliderHolder.Name = (SliderName .. "SliderHolder")
                    SliderHolder.Parent = Section1Holder
                    SliderHolder.BackgroundColor3 = Color3.new(0.137255, 0.137255, 0.137255)
                    SliderHolder.BorderSizePixel = 0
                    SliderHolder.Size = UDim2.new(0, 170, 0, 30)
        
                    SliderTitle.Name = "SliderTitle"
                    SliderTitle.Parent = SliderHolder
                    SliderTitle.BackgroundColor3 = Color3.new(1, 1, 1)
                    SliderTitle.BackgroundTransparency = 1
                    SliderTitle.BorderSizePixel = 0
                    SliderTitle.Position = UDim2.new(0.052941177, 0, 0, 0)
                    SliderTitle.Size = UDim2.new(0, 125, 0, 15)
                    SliderTitle.Font = Enum.Font.SourceSansSemibold
                    SliderTitle.Text = name
                    SliderTitle.TextColor3 = Color3.new(1, 1, 1)
                    SliderTitle.TextSize = 17
                    SliderTitle.TextXAlignment = Enum.TextXAlignment.Left
        
                    SliderValueHolder.Name = "SliderValueHolder"
                    SliderValueHolder.Parent = SliderHolder
                    SliderValueHolder.BackgroundColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                    SliderValueHolder.BackgroundTransparency = 1
                    SliderValueHolder.Position = UDim2.new(0.747058809, 0, 0, 0)
                    SliderValueHolder.Size = UDim2.new(0, 35, 0, 15)
                    SliderValueHolder.Image = "rbxassetid://3570695787"
                    SliderValueHolder.ImageColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                    SliderValueHolder.ImageTransparency = 0.5
                    SliderValueHolder.ScaleType = Enum.ScaleType.Slice
                    SliderValueHolder.SliceCenter = Rect.new(100, 100, 100, 100)
                    SliderValueHolder.SliceScale = 0.02
        
                    SliderValue.Name = "SliderValue"
                    SliderValue.Parent = SliderValueHolder
                    SliderValue.BackgroundColor3 = Color3.new(1, 1, 1)
                    SliderValue.BackgroundTransparency = 1
                    SliderValue.Size = UDim2.new(0, 35, 0, 15)
                    SliderValue.Font = Enum.Font.SourceSansSemibold
                    SliderValue.Text = tostring(startvalue or PreciseSliderValue and tonumber(string.format("%.2f", startvalue)))
                    SliderValue.TextColor3 = Color3.new(1, 1, 1)
                    SliderValue.TextSize = 14
        
                    SliderBackground.Name = "SliderBackground"
                    SliderBackground.Parent = SliderHolder
                    SliderBackground.BackgroundColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                    SliderBackground.BackgroundTransparency = 1
                    SliderBackground.Position = UDim2.new(0.0529999994, 0, 0.649999976, 0)
                    SliderBackground.Selectable = true
                    SliderBackground.Size = UDim2.new(0, 153, 0, 5)
                    SliderBackground.Image = "rbxassetid://3570695787"
                    SliderBackground.ImageColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                    SliderBackground.ImageTransparency = 0.5
                    SliderBackground.ScaleType = Enum.ScaleType.Slice
                    SliderBackground.SliceCenter = Rect.new(100, 100, 100, 100)
                    SliderBackground.ClipsDescendants = true
                    SliderBackground.SliceScale = 0.02
        
                    Slider.Name = "Slider"
                    Slider.Parent = SliderBackground
                    Slider.BackgroundColor3 = Color3.new(1, 1, 1)
                    Slider.BackgroundTransparency = 1
                    Slider.Size = UDim2.new(((startvalue or minimumvalue) - minimumvalue) / (maximumvalue - minimumvalue), 0, 0, 5)
                    Slider.Image = "rbxassetid://3570695787"
                    Slider.ScaleType = Enum.ScaleType.Slice
                    Slider.SliceCenter = Rect.new(100, 100, 100, 100)
                    Slider.SliceScale = 0.02
        
                    local function Sliding(input)
                        local Pos = UDim2.new(math.clamp((input.Position.X - SliderBackground.AbsolutePosition.X) / SliderBackground.AbsoluteSize.X, 0, 1), 0, 1.15, 0)
                        TweenService:Create(Slider, TweenInfo.new(0.25, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = Pos}):Play()
        
                        local NonSliderPreciseValue = math.floor(((Pos.X.Scale * maximumvalue) / maximumvalue) * (maximumvalue - minimumvalue) + minimumvalue)
                        local SliderPreciseValue = ((Pos.X.Scale * maximumvalue) / maximumvalue) * (maximumvalue - minimumvalue) + minimumvalue
            
                        local Value = (PreciseSliderValue and SliderPreciseValue or NonSliderPreciseValue)
                        Value = tonumber(string.format("%.2f", Value))
            
                        SliderValue.Text = tostring(Value)
                        action(Value)
                    end
                
                    SliderBackground.InputBegan:Connect(function(input)
                        if input.UserInputType == Enum.UserInputType.MouseButton1 then
                            Dragging = true
                        end
                    end)
                    
                    SliderBackground.InputEnded:Connect(function(input)
                        if input.UserInputType == Enum.UserInputType.MouseButton1 then
                            Dragging = false
                        end
                    end)
                    
                    SliderBackground.InputBegan:Connect(function(input)
                        if input.UserInputType == Enum.UserInputType.MouseButton1 then
                            Sliding(input)
                        end
                    end)
                
                    UserInputService.InputChanged:Connect(function(input)
                        if Dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                            Sliding(input)
                        end
                    end)
        
                    SectionToggle.MouseButton1Down:Connect(function()
                        if not IsSectionOpen then
                            ExtendSectionSize(30)
                            ExtendBodySize(30)
                        elseif IsSectionOpen then
                            UnExtendSectionSize(30)
                            UnExtendBodySize(30)
                        end
                    end)
        
                    WindowToggle.MouseButton1Down:Connect(function()
                        if not IsTabOpen then
                            if IsSectionOpen then
                                ExtendBodySize(30)
                                TweenService:Create(SectionToggle, TweenInfo.new(0, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = 360}):Play()
                                TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
                            elseif not IsSectionOpen then
                                TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
                            end
        
                            
                        elseif IsTabOpen then
                            if IsSectionOpen then
                                UnExtendBodySize(30)
                                TweenService:Create(SectionToggle, TweenInfo.new(0, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = 0}):Play()
                                TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                            elseif not IsSectionOpen then
                                TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                            end
                        end
        
                        TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 1}):Play()
                
                        SectionToggle.Visible = false
                
                        repeat wait() until SectionToggle.TextTransparency == 1
                        SectionToggle.Visible = true
                        TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
                    end)
                end
        
                function LibraryElements:CreateColorPicker(name, presetcolor, action)
                    local ColorPickerHolder = Instance.new("Frame")
                    local RainbowToggleHolder = Instance.new("Frame")
                    local RainbowTitle = Instance.new("TextLabel")
                    local RainbowBackground = Instance.new("ImageLabel")
                    local RainbowToggleButton = Instance.new("ImageButton")
                    local ColorPickerTitle = Instance.new("TextLabel")
                    local ColorPickerToggle = Instance.new("ImageButton")
                    local ColorPickerMain = Instance.new("ImageLabel")
                    local ColorValueR = Instance.new("TextLabel")
                    local ColorValueRRound = Instance.new("ImageLabel")
                    local ColorValueB = Instance.new("TextLabel")
                    local ColorValueBRound = Instance.new("ImageLabel")
                    local ColorValueG = Instance.new("TextLabel")
                    local ColorValueGRound = Instance.new("ImageLabel")
                    local RoundHueHolder = Instance.new("ImageLabel")
                    local ColorHue = Instance.new("ImageLabel")
                    local HueMarker = Instance.new("Frame")
                    local RoundSaturationHolder = Instance.new("ImageLabel")
                    local ColorSelector = Instance.new("ImageLabel")
                    local SaturationMarker = Instance.new("ImageLabel")
        
                    local ColorPickerName = RemoveSpaces(name)
        
                    ColorPickerZIndex = ColorPickerZIndex + 1
        
                    local ColorPickerOpen = false
                    local RainbowColorMode = false
                    
                    local Color = nil
                    local ColorValue = 0
                    local RainbowColor = nil
        
                    ColorPickerHolder.Name = (ColorPickerName .. "ColorPickerHolder")
                    ColorPickerHolder.Parent = Section1Holder
                    ColorPickerHolder.BackgroundColor3 = Color3.new(0.137255, 0.137255, 0.137255)
                    ColorPickerHolder.BorderSizePixel = 0
                    ColorPickerHolder.Size = UDim2.new(0, 170, 0, 30)
        
                    ColorPickerTitle.Name = "ColorPickerTitle"
                    ColorPickerTitle.Parent = ColorPickerHolder
                    ColorPickerTitle.BackgroundColor3 = Color3.new(1, 1, 1)
                    ColorPickerTitle.BackgroundTransparency = 1
                    ColorPickerTitle.BorderSizePixel = 0
                    ColorPickerTitle.Position = UDim2.new(0.052941177, 0, 0, 0)
                    ColorPickerTitle.Size = UDim2.new(0, 125, 0, 30)
                    ColorPickerTitle.Font = Enum.Font.SourceSansBold
                    ColorPickerTitle.Text = name
                    ColorPickerTitle.TextColor3 = Color3.new(1, 1, 1)
                    ColorPickerTitle.TextSize = 17
                    ColorPickerTitle.TextXAlignment = Enum.TextXAlignment.Left
                    
                    ColorPickerToggle.Name = "ColorPickerToggle"
                    ColorPickerToggle.Parent = ColorPickerHolder
                    ColorPickerToggle.BackgroundColor3 = Color3.new(1, 1, 1)
                    ColorPickerToggle.BackgroundTransparency = 1
                    ColorPickerToggle.Position = UDim2.new(0.822000027, 0, 0.166999996, 0)
                    ColorPickerToggle.Size = UDim2.new(0, 22, 0, 20)
                    ColorPickerToggle.Image = "rbxassetid://3570695787"
                    ColorPickerToggle.ImageColor3 = presetcolor
                    ColorPickerToggle.ScaleType = Enum.ScaleType.Slice
                    ColorPickerToggle.SliceCenter = Rect.new(100, 100, 100, 100)
                    ColorPickerToggle.SliceScale = 0.04
                    
                    ColorPickerMain.Name = "ColorPickerMain"
                    ColorPickerMain.Parent = ColorPickerHolder
                    ColorPickerMain.BackgroundColor3 = Color3.new(0.137255, 0.137255, 0.137255)
                    ColorPickerMain.BackgroundTransparency = 1
                    ColorPickerMain.ClipsDescendants = true
                    ColorPickerMain.BorderSizePixel = 0
                    ColorPickerMain.Position = UDim2.new(1.04705882, 0, -1.36666667, 0)
                    ColorPickerMain.Size = UDim2.new(0, 0, 0, 175)
                    ColorPickerMain.Image = "rbxassetid://3570695787"
                    ColorPickerMain.ImageColor3 = Color3.new(0.137255, 0.137255, 0.137255)
                    ColorPickerMain.ScaleType = Enum.ScaleType.Slice
                    ColorPickerMain.SliceCenter = Rect.new(100, 100, 100, 100)
                    ColorPickerMain.SliceScale = 0.05
                    ColorPickerMain.ZIndex = 1 + ColorPickerZIndex
                    
                    RainbowToggleHolder.Name = "RainbowToggleHolder"
                    RainbowToggleHolder.Parent = ColorPickerMain
                    RainbowToggleHolder.BackgroundColor3 = Color3.new(0.137255, 0.137255, 0.137255)
                    RainbowToggleHolder.BackgroundTransparency = 1
                    RainbowToggleHolder.BorderSizePixel = 0
                    RainbowToggleHolder.Position = UDim2.new(0, 0, 0.819999993, 0)
                    RainbowToggleHolder.Size = UDim2.new(0, 170, 0, 30)
                    RainbowToggleHolder.ZIndex = 1 + ColorPickerZIndex
        
                    RainbowTitle.Name = "RainbowTitle"
                    RainbowTitle.Parent = RainbowToggleHolder
                    RainbowTitle.BackgroundColor3 = Color3.new(1, 1, 1)
                    RainbowTitle.BackgroundTransparency = 1
                    RainbowTitle.BorderSizePixel = 0
                    RainbowTitle.Position = UDim2.new(0.052941177, 0, 0, 0)
                    RainbowTitle.Size = UDim2.new(0, 125, 0, 30)
                    RainbowTitle.Font = Enum.Font.SourceSansBold
                    RainbowTitle.Text = "Rainbow"
                    RainbowTitle.TextColor3 = Color3.new(1, 1, 1)
                    RainbowTitle.TextSize = 17
                    RainbowTitle.TextXAlignment = Enum.TextXAlignment.Left
                    RainbowTitle.ZIndex = 1 + ColorPickerZIndex
        
                    RainbowBackground.Name = "RainbowBackground"
                    RainbowBackground.Parent = RainbowToggleHolder
                    RainbowBackground.BackgroundColor3 = Color3.new(1, 1, 1)
                    RainbowBackground.BackgroundTransparency = 1
                    RainbowBackground.BorderSizePixel = 0
                    RainbowBackground.Position = UDim2.new(0.847058833, 0, 0.166666672, 0)
                    RainbowBackground.Size = UDim2.new(0, 20, 0, 20)
                    RainbowBackground.Image = "rbxassetid://3570695787"
                    RainbowBackground.ImageColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                    RainbowBackground.ZIndex = 1 + ColorPickerZIndex
        
                    RainbowToggleButton.Name = "RainbowToggleButton"
                    RainbowToggleButton.Parent = RainbowBackground
                    RainbowToggleButton.BackgroundColor3 = Color3.new(1, 1, 1)
                    RainbowToggleButton.BackgroundTransparency = 1
                    RainbowToggleButton.Position = UDim2.new(0, 2, 0, 2)
                    RainbowToggleButton.Size = UDim2.new(0, 16, 0, 16)
                    RainbowToggleButton.Image = "rbxassetid://3570695787"
                    RainbowToggleButton.ImageColor3 = Color3.new(1, 0.341176, 0.341176)
                    RainbowToggleButton.ImageTransparency = 1
                    RainbowToggleButton.ZIndex = 1 + ColorPickerZIndex
        
                    ColorValueR.Name = "ColorValueR"
                    ColorValueR.Parent = ColorPickerMain
                    ColorValueR.BackgroundColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                    ColorValueR.BackgroundTransparency = 1
                    ColorValueR.BorderSizePixel = 0
                    ColorValueR.ClipsDescendants = true
                    ColorValueR.Position = UDim2.new(0, 7, 0, 127)
                    ColorValueR.Size = UDim2.new(0, 50, 0, 16)
                    ColorValueR.ZIndex = 2 + ColorPickerZIndex
                    ColorValueR.Font = Enum.Font.SourceSansBold
                    ColorValueR.Text = "R: 000"
                    ColorValueR.TextColor3 = Color3.new(1, 1, 1)
                    ColorValueR.TextSize = 14
        
                    ColorValueRRound.Name = "ColorValueRRound"
                    ColorValueRRound.Parent = ColorValueR
                    ColorValueRRound.Active = true
                    ColorValueRRound.AnchorPoint = Vector2.new(0.5, 0.5)
                    ColorValueRRound.BackgroundColor3 = Color3.new(1, 1, 1)
                    ColorValueRRound.BackgroundTransparency = 1
                    ColorValueRRound.Position = UDim2.new(0.5, 0, 0.5, 0)
                    ColorValueRRound.Selectable = true
                    ColorValueRRound.Size = UDim2.new(1, 0, 1, 0)
                    ColorValueRRound.Image = "rbxassetid://3570695787"
                    ColorValueRRound.ImageColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                    ColorValueRRound.ScaleType = Enum.ScaleType.Slice
                    ColorValueRRound.SliceCenter = Rect.new(100, 100, 100, 100)
                    ColorValueRRound.SliceScale = 0.04
                    ColorValueRRound.ZIndex = 1 + ColorPickerZIndex
        
                    ColorValueG.Name = "ColorValueG"
                    ColorValueG.Parent = ColorPickerMain
                    ColorValueG.BackgroundColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                    ColorValueG.BackgroundTransparency = 1
                    ColorValueG.BorderSizePixel = 0
                    ColorValueG.ClipsDescendants = true
                    ColorValueG.Position = UDim2.new(0, 60, 0, 127)
                    ColorValueG.Size = UDim2.new(0, 51, 0, 16)
                    ColorValueG.ZIndex = 2 + ColorPickerZIndex
                    ColorValueG.Font = Enum.Font.SourceSansBold
                    ColorValueG.Text = "G: 000"
                    ColorValueG.TextColor3 = Color3.new(1, 1, 1)
                    ColorValueG.TextSize = 14
        
                    ColorValueGRound.Name = "ColorValueGRound"
                    ColorValueGRound.Parent = ColorValueG
                    ColorValueGRound.Active = true
                    ColorValueGRound.AnchorPoint = Vector2.new(0.5, 0.5)
                    ColorValueGRound.BackgroundColor3 = Color3.new(1, 1, 1)
                    ColorValueGRound.BackgroundTransparency = 1
                    ColorValueGRound.Position = UDim2.new(0.5, 0, 0.5, 0)
                    ColorValueGRound.Selectable = true
                    ColorValueGRound.Size = UDim2.new(1, 0, 1, 0)
                    ColorValueGRound.Image = "rbxassetid://3570695787"
                    ColorValueGRound.ImageColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                    ColorValueGRound.ScaleType = Enum.ScaleType.Slice
                    ColorValueGRound.SliceCenter = Rect.new(100, 100, 100, 100)
                    ColorValueGRound.SliceScale = 0.04
                    ColorValueGRound.ZIndex = 1 + ColorPickerZIndex
        
                    ColorValueB.Name = "ColorValueB"
                    ColorValueB.Parent = ColorPickerMain
                    ColorValueB.BackgroundColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                    ColorValueB.BackgroundTransparency = 1
                    ColorValueB.BorderSizePixel = 0
                    ColorValueB.ClipsDescendants = true
                    ColorValueB.Position = UDim2.new(0, 114, 0, 127)
                    ColorValueB.Size = UDim2.new(0, 50, 0, 16)
                    ColorValueB.ZIndex = 2 + ColorPickerZIndex
                    ColorValueB.Font = Enum.Font.SourceSansBold
                    ColorValueB.Text = "B: 000"
                    ColorValueB.TextColor3 = Color3.new(1, 1, 1)
                    ColorValueB.TextSize = 14
        
                    ColorValueBRound.Name = "ColorValueBRound"
                    ColorValueBRound.Parent = ColorValueB
                    ColorValueBRound.Active = true
                    ColorValueBRound.AnchorPoint = Vector2.new(0.5, 0.5)
                    ColorValueBRound.BackgroundColor3 = Color3.new(1, 1, 1)
                    ColorValueBRound.BackgroundTransparency = 1
                    ColorValueBRound.Position = UDim2.new(0.5, 0, 0.5, 0)
                    ColorValueBRound.Selectable = true
                    ColorValueBRound.Size = UDim2.new(1, 0, 1, 0)
                    ColorValueBRound.Image = "rbxassetid://3570695787"
                    ColorValueBRound.ImageColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                    ColorValueBRound.ScaleType = Enum.ScaleType.Slice
                    ColorValueBRound.SliceCenter = Rect.new(100, 100, 100, 100)
                    ColorValueBRound.SliceScale = 0.04
                    ColorValueBRound.ZIndex = 1 + ColorPickerZIndex
        
                    RoundHueHolder.Name = "RoundHueHolder"
                    RoundHueHolder.Parent = ColorPickerMain
                    RoundHueHolder.BackgroundColor3 = Color3.new(1, 1, 1)
                    RoundHueHolder.BackgroundTransparency = 1
                    RoundHueHolder.ClipsDescendants = true
                    RoundHueHolder.Position = UDim2.new(0, 136, 0, 6)
                    RoundHueHolder.Size = UDim2.new(0, 28, 0, 114)
                    RoundHueHolder.ZIndex = 2 + ColorPickerZIndex
                    RoundHueHolder.Image = "rbxassetid://4695575676"
                    RoundHueHolder.ImageColor3 = Color3.new(0.137255, 0.137255, 0.137255)
                    RoundHueHolder.ScaleType = Enum.ScaleType.Slice
                    RoundHueHolder.SliceCenter = Rect.new(128, 128, 128, 128)
                    RoundHueHolder.SliceScale = 0.05
        
                    ColorHue.Name = "ColorHue"
                    ColorHue.Parent = RoundHueHolder
                    ColorHue.BackgroundColor3 = Color3.new(1, 1, 1)
                    ColorHue.BackgroundTransparency = 1
                    ColorHue.BorderSizePixel = 0
                    ColorHue.Size = UDim2.new(0, 28, 0, 114)
                    ColorHue.Image = "http://www.roblox.com/asset/?id=4801885250"
                    ColorHue.ScaleType = Enum.ScaleType.Crop
                    ColorHue.ZIndex = 1 + ColorPickerZIndex
        
                    HueMarker.Name = "HueMarker"
                    HueMarker.Parent = RoundHueHolder
                    HueMarker.BackgroundColor3 = Color3.new(0.294118, 0.294118, 0.294118)
                    HueMarker.BorderSizePixel = 0
                    HueMarker.Position = UDim2.new(-0.25, 0, 0, 0)
                    HueMarker.Size = UDim2.new(0, 42, 0, 5)
                    HueMarker.ZIndex = 1 + ColorPickerZIndex
        
                    RoundSaturationHolder.Name = "RoundSaturationHolder"
                    RoundSaturationHolder.Parent = ColorPickerMain
                    RoundSaturationHolder.BackgroundColor3 = Color3.new(1, 1, 1)
                    RoundSaturationHolder.BackgroundTransparency = 1
                    RoundSaturationHolder.ClipsDescendants = true
                    RoundSaturationHolder.Position = UDim2.new(0, 7, 0, 6)
                    RoundSaturationHolder.Size = UDim2.new(0, 122, 0, 114)
                    RoundSaturationHolder.ZIndex = 2 + ColorPickerZIndex
                    RoundSaturationHolder.Image = "rbxassetid://4695575676"
                    RoundSaturationHolder.ImageColor3 = Color3.new(0.137255, 0.137255, 0.137255)
                    RoundSaturationHolder.ScaleType = Enum.ScaleType.Slice
                    RoundSaturationHolder.SliceCenter = Rect.new(128, 128, 128, 128)
                    RoundSaturationHolder.SliceScale = 0.05
        
                    ColorSelector.Name = "ColorSelector"
                    ColorSelector.Parent = RoundSaturationHolder
                    ColorSelector.BackgroundColor3 = presetcolor
                    ColorSelector.BorderSizePixel = 0
                    ColorSelector.Size = UDim2.new(0, 122, 0, 114)
                    ColorSelector.Image = "rbxassetid://4805274903"
                    ColorSelector.ZIndex = 1 + ColorPickerZIndex
        
                    SaturationMarker.Name = "SaturationMarker"
                    SaturationMarker.Parent = RoundSaturationHolder
                    SaturationMarker.BackgroundColor3 = Color3.new(1, 1, 1)
                    SaturationMarker.BackgroundTransparency = 1
                    SaturationMarker.Size = UDim2.new(0, 0, 0, 0)
                    SaturationMarker.Image = "http://www.roblox.com/asset/?id=4805639000"
                    SaturationMarker.ZIndex = 1 + ColorPickerZIndex
        
                    local function SetRGBValues()
                        local RedValue, GreenValue, BlueValue = ColorPickerToggle.ImageColor3.r * 255, ColorPickerToggle.ImageColor3.g * 255, ColorPickerToggle.ImageColor3.b * 255
        
                        ColorValueR.Text = ("R: " .. math.floor(RedValue))
                        ColorValueG.Text = ("G: " .. math.floor(GreenValue))
                        ColorValueB.Text = ("B: " .. math.floor(BlueValue))
                    end
        
                    SetRGBValues()
        
                    ColorPickerToggle.MouseButton1Down:Connect(function()
                        if not ColorPickerOpen then
                            ColorPickerOpen = true
                            Body.ClipsDescendants = false
                            Section1Holder.ClipsDescendants = false
        
                            TweenService:Create(ColorPickerMain, TweenInfo.new(0.75, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 171, 0, 175)}):Play()
                        elseif ColorPickerOpen then
                            ColorPickerOpen = false
                            TweenService:Create(ColorPickerMain, TweenInfo.new(0.75, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 0, 0, 175)}):Play()
                        end
                    end)
        
                    local ColorData = {
                        H = 1;
                        S = 1;
                        V = 1
                    }
        
                    local Connection1 = nil
                    local Connection2 = nil
        
                    local function GetXY(frame)
                        local X, Y = Mouse.X - frame.AbsolutePosition.X, Mouse.Y - frame.AbsolutePosition.Y
                        local MaxX, MaxY = frame.AbsoluteSize.X, frame.AbsoluteSize.Y
                        X = math.clamp(X, 0, MaxX)
                        Y = math.clamp(Y, 0, MaxY)
                        return X / MaxX, Y / MaxY
                    end
        
                    local function GetY(frame)
                        local Y2 = Mouse.Y - frame.AbsolutePosition.Y
                        MaxY2 = frame.AbsoluteSize.Y
                        Y2 = math.clamp(Y2, -10, MaxY2)
                        return Y2 / MaxY2
                    end
        
                    local function Update()
                        SetRGBValues()
        
                        Color = Color3.fromHSV(ColorData.H, ColorData.S, ColorData.V)
        
                        ColorPickerToggle.ImageColor3 = Color
                        ColorSelector.BackgroundColor3 = Color3.fromHSV(ColorData.H, 1, 1)
                        action(ColorPickerToggle.ImageColor3)
                    end
        
                    ColorSelector.MouseLeave:Connect(function()
                        if Connection1 then
                            Connection1:Disconnect()
                            Connection1 = nil
                        end
                        if Connection2 then
                            Connection2:Disconnect()
                            Connection2 = nil
                        end
                    end)
        
                    ColorHue.MouseLeave:Connect(function()
                        if Connection1 then
                            Connection1:Disconnect()
                            Connection1 = nil
                        end
                        if Connection2 then
                            Connection2:Disconnect()
                            Connection2 = nil
                        end
                    end)
        
                    RainbowToggleButton.MouseButton1Down:Connect(function()
                        if not RainbowColorMode then
                            RainbowColorMode = true
                            TweenService:Create(RainbowToggleButton, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {ImageTransparency = 0}):Play()
                        elseif RainbowColorMode then
                            RainbowColorMode = false
                            TweenService:Create(RainbowToggleButton, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {ImageTransparency = 1}):Play()
                        end
        
                        while RainbowColorMode do
                            RainbowColor = Color3.fromHSV(RainbowModeColorValue, 1, 1)
        
                            ColorPickerToggle.ImageColor3 = RainbowColor
                            ColorSelector.BackgroundColor3 = RainbowColor
        
                            action(RainbowColor)
                            SetRGBValues()
                            wait()
                        end
                    end)
        
                    ColorSelector.InputBegan:Connect(function(input)
                        if input.UserInputType == Enum.UserInputType.MouseButton1 then
                            if not RainbowColorMode then
                                if Connection1 then
                                    Connection1:Disconnect()
                                end
                                Connection1 = RunService.RenderStepped:Connect(function()
                                    local X, Y = GetXY(RoundSaturationHolder)
        
                                    SaturationMarker.Position = UDim2.new(X, 0, Y, 0)
                                    ColorData.S = X
                                    ColorData.V = 1 - Y
                                    Update()
                                end)
                            end
                        end
                    end)
        
                    ColorSelector.InputEnded:Connect(function(input)
                        if input.UserInputType == Enum.UserInputType.MouseButton1 then
                            if Connection1 then
                                Connection1:Disconnect()
                            end
                        end
                    end)
        
                    ColorHue.InputBegan:Connect(function(input)
                        if input.UserInputType == Enum.UserInputType.MouseButton1 then
                            if not RainbowColorMode then
                                if Connection2 then
                                    Connection2:Disconnect()
                                end
        
                                Connection2 = RunService.RenderStepped:Connect(function()
                                    local X, Y = GetXY(RoundHueHolder)
                                    local Y2 = GetY(RoundHueHolder)
        
                                    ColorData.H = 1 - Y
                                    TweenService:Create(HueMarker, TweenInfo.new(0.25, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Position = UDim2.new(-0.25, 0, Y2, 0)}):Play()
                                    Update()
                                end)
                            end
                        end
                    end)
        
                    ColorHue.InputEnded:Connect(function(input)
                        if input.UserInputType == Enum.UserInputType.MouseButton1 then
                            if Connection2 then
                                Connection2:Disconnect()
                            end
                        end
                    end)
        
                    SectionToggle.MouseButton1Down:Connect(function()
                        if not IsSectionOpen then
                            Body.ClipsDescendants = true
                            Section1Holder.ClipsDescendants = true
        
                            ExtendSectionSize(30)
                            ExtendBodySize(30)
                        elseif IsSectionOpen then
                            ColorPickerOpen = false
                            TweenService:Create(ColorPickerMain, TweenInfo.new(0.75, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 0, 0, 175)}):Play()
        
                            Body.ClipsDescendants = true
                            Section1Holder.ClipsDescendants = true
        
                            UnExtendSectionSize(30)
                            UnExtendBodySize(30)
                        end
                    end)
        
                    WindowToggle.MouseButton1Down:Connect(function()
                        ColorPickerOpen = false
                        TweenService:Create(ColorPickerMain, TweenInfo.new(0.75, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 0, 0, 175)}):Play()
        
                        Body.ClipsDescendants = true
                        Section1Holder.ClipsDescendants = true
        
                        if not IsTabOpen then
                            if IsSectionOpen then
                                ExtendBodySize(30)
                                TweenService:Create(SectionToggle, TweenInfo.new(0, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = 360}):Play()
                                TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
                            elseif not IsSectionOpen then
                                TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
                            end
        
                            
                        elseif IsTabOpen then
                            if IsSectionOpen then
                                UnExtendBodySize(30)
                                TweenService:Create(SectionToggle, TweenInfo.new(0, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = 0}):Play()
                                TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                            elseif not IsSectionOpen then
                                TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                            end
                        end
        
                        TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 1}):Play()
                
                        SectionToggle.Visible = false
                
                        repeat wait() until SectionToggle.TextTransparency == 1
                        SectionToggle.Visible = true
                        TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
                    end)
                end
        
                function LibraryElements:CreateButton(name, action)
                    local ButtonHolder = Instance.new("Frame")
                    local Button = Instance.new("TextButton")
                    local ButtonRound = Instance.new("ImageLabel")
        
                    local ButtonName = RemoveSpaces(name)
        
                    ButtonHolder.Name = (ButtonName .. "ButtonHolder")
                    ButtonHolder.Parent = Section1Holder
                    ButtonHolder.BackgroundColor3 = Color3.new(0.137255, 0.137255, 0.137255)
                    ButtonHolder.BorderSizePixel = 0
                    ButtonHolder.Size = UDim2.new(0, 170, 0, 30)
                    
                    Button.Name = "Button"
                    Button.Parent = ButtonHolder
                    Button.BackgroundColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                    Button.BackgroundTransparency = 1
                    Button.BorderSizePixel = 0
                    Button.Position = UDim2.new(0.052941177, 0, 0, 0)
                    Button.Size = UDim2.new(0, 153, 0, 24)
                    Button.ZIndex = 2
                    Button.AutoButtonColor = false
                    Button.Font = Enum.Font.SourceSansBold
                    Button.Text = name
                    Button.TextColor3 = Color3.new(1, 1, 1)
                    Button.TextSize = 14
                    
                    ButtonRound.Name = "ButtonRound"
                    ButtonRound.Parent = Button
                    ButtonRound.Active = true
                    ButtonRound.AnchorPoint = Vector2.new(0.5, 0.5)
                    ButtonRound.BackgroundColor3 = Color3.new(1, 1, 1)
                    ButtonRound.BackgroundTransparency = 1
                    ButtonRound.BorderSizePixel = 0
                    ButtonRound.ClipsDescendants = true
                    ButtonRound.Position = UDim2.new(0.5, 0, 0.5, 0)
                    ButtonRound.Selectable = true
                    ButtonRound.Size = UDim2.new(1, 0, 1, 0)
                    ButtonRound.Image = "rbxassetid://3570695787"
                    ButtonRound.ImageColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                    ButtonRound.ScaleType = Enum.ScaleType.Slice
                    ButtonRound.SliceCenter = Rect.new(100, 100, 100, 100)
                    ButtonRound.SliceScale = 0.04
        
                    Button.MouseButton1Down:Connect(function()
                        action(Button)
                    end)
                    
                    SectionToggle.MouseButton1Down:Connect(function()
                        if not IsSectionOpen then
                            ExtendSectionSize(30)
                            ExtendBodySize(30)
                        elseif IsSectionOpen then
                            UnExtendSectionSize(30)
                            UnExtendBodySize(30)
                        end
                    end)
        
                    WindowToggle.MouseButton1Down:Connect(function()
                        if not IsTabOpen then
                            if IsSectionOpen then
                                ExtendBodySize(30)
                                TweenService:Create(SectionToggle, TweenInfo.new(0, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = 360}):Play()
                                TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
                            elseif not IsSectionOpen then
                                TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
                            end
        
                            
                        elseif IsTabOpen then
                            if IsSectionOpen then
                                UnExtendBodySize(30)
                                TweenService:Create(SectionToggle, TweenInfo.new(0, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = 0}):Play()
                                TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                            elseif not IsSectionOpen then
                                TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                            end
                        end
        
                        TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 1}):Play()
                
                        SectionToggle.Visible = false
                
                        repeat wait() until SectionToggle.TextTransparency == 1
                        SectionToggle.Visible = true
                        TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
                    end)
                end
        
                function LibraryElements:CreateTextbox(name, action)
                    local TextBoxHolder = Instance.new("Frame")
                    local TextBox = Instance.new("TextBox")
                    local TextBoxRound = Instance.new("ImageLabel")
        
                    local TextBoxName = RemoveSpaces(name)
        
                    TextBoxHolder.Name = (TextBoxName .. "TextBoxHolder")
                    TextBoxHolder.Parent = Section1Holder
                    TextBoxHolder.BackgroundColor3 = Color3.new(0.137255, 0.137255, 0.137255)
                    TextBoxHolder.BorderSizePixel = 0
                    TextBoxHolder.Size = UDim2.new(0, 170, 0, 30)
                    
                    TextBox.Parent = TextBoxHolder
                    TextBox.BackgroundColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                    TextBox.BackgroundTransparency = 1
                    TextBox.ClipsDescendants = true
                    TextBox.Position = UDim2.new(0.0529999994, 0, 0, 0)
                    TextBox.Size = UDim2.new(0, 153, 0, 24)
                    TextBox.ZIndex = 2
                    TextBox.Font = Enum.Font.SourceSansBold
                    TextBox.PlaceholderText = name
                    TextBox.Text = ""
                    TextBox.TextColor3 = Color3.new(1, 1, 1)
                    TextBox.TextSize = 14
                    
                    TextBoxRound.Name = "TextBoxRound"
                    TextBoxRound.Parent = TextBox
                    TextBoxRound.Active = true
                    TextBoxRound.AnchorPoint = Vector2.new(0.5, 0.5)
                    TextBoxRound.BackgroundColor3 = Color3.new(1, 1, 1)
                    TextBoxRound.BackgroundTransparency = 1
                    TextBoxRound.BorderSizePixel = 0
                    TextBoxRound.ClipsDescendants = true
                    TextBoxRound.Position = UDim2.new(0.5, 0, 0.5, 0)
                    TextBoxRound.Selectable = true
                    TextBoxRound.Size = UDim2.new(1, 0, 1, 0)
                    TextBoxRound.Image = "rbxassetid://3570695787"
                    TextBoxRound.ImageColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                    TextBoxRound.ScaleType = Enum.ScaleType.Slice
                    TextBoxRound.SliceCenter = Rect.new(100, 100, 100, 100)
                    TextBoxRound.SliceScale = 0.04
        
                    TextBox.FocusLost:Connect(function(enterPressed)
                        if enterPressed then
                            action(TextBox.Text)
                        end
                    end)
        
                    SectionToggle.MouseButton1Down:Connect(function()
                        if not IsSectionOpen then
                            ExtendSectionSize(30)
                            ExtendBodySize(30)
                        elseif IsSectionOpen then
                            UnExtendSectionSize(30)
                            UnExtendBodySize(30)
                        end
                    end)
        
                    WindowToggle.MouseButton1Down:Connect(function()
                        if not IsTabOpen then
                            if IsSectionOpen then
                                ExtendBodySize(30)
                                TweenService:Create(SectionToggle, TweenInfo.new(0, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = 360}):Play()
                                TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
                            elseif not IsSectionOpen then
                                TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
                            end
        
                            
                        elseif IsTabOpen then
                            if IsSectionOpen then
                                UnExtendBodySize(30)
                                TweenService:Create(SectionToggle, TweenInfo.new(0, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = 0}):Play()
                                TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                            elseif not IsSectionOpen then
                                TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                            end
                        end
        
                        TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 1}):Play()
                
                        SectionToggle.Visible = false
                
                        repeat wait() until SectionToggle.TextTransparency == 1
                        SectionToggle.Visible = true
                        TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
                    end)
                end
        
                function LibraryElements:CreateDropdown(name, options, presetoption, action)
                    local DropdownHolder = Instance.new("Frame")
                    local DropdownTitle = Instance.new("TextLabel")
                    local DropdownRound = Instance.new("ImageLabel")
                    local DropdownToggle = Instance.new("TextButton")
                    local DropdownMain = Instance.new("ImageLabel")
                    local ScrollingFrame = Instance.new("ScrollingFrame")
                    local ButtonLayout = Instance.new("UIListLayout")
        
                    local DropdownName = RemoveSpaces(name)
        
                    local StartingCanvasSize = 1
                    local StartScrollingFrame = false
        
                    local SelectedOptionName = options[presetoption]
                    local NumberOfOptions = 0
                    local DropdownYSize = 0
                    local IsDropdownWindowOpen = false
        
                    DropdownHolder.Name = (DropdownName .. "DropdownHolder")
                    DropdownHolder.Parent = Section1Holder
                    DropdownHolder.BackgroundColor3 = Color3.new(0.137255, 0.137255, 0.137255)
                    DropdownHolder.BorderSizePixel = 0
                    DropdownHolder.Size = UDim2.new(0, 170, 0, 30)
                    
                    DropdownTitle.Name = "DropdownTitle"
                    DropdownTitle.Parent = DropdownHolder
                    DropdownTitle.BackgroundColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                    DropdownTitle.BackgroundTransparency = 1
                    DropdownTitle.BorderSizePixel = 0
                    DropdownTitle.Position = UDim2.new(0.0529999994, 0, 0, 0)
                    DropdownTitle.Size = UDim2.new(0, 153, 0, 24)
                    DropdownTitle.ZIndex = 2
                    DropdownTitle.Font = Enum.Font.SourceSansBold
                    DropdownTitle.Text = SelectedOptionName
                    DropdownTitle.TextColor3 = Color3.new(1, 1, 1)
                    DropdownTitle.TextSize = 14
                    
                    DropdownRound.Name = "DropdownRound"
                    DropdownRound.Parent = DropdownTitle
                    DropdownRound.Active = true
                    DropdownRound.AnchorPoint = Vector2.new(0.5, 0.5)
                    DropdownRound.BackgroundColor3 = Color3.new(1, 1, 1)
                    DropdownRound.BackgroundTransparency = 1
                    DropdownRound.BorderSizePixel = 0
                    DropdownRound.ClipsDescendants = true
                    DropdownRound.Position = UDim2.new(0.5, 0, 0.5, 0)
                    DropdownRound.Selectable = true
                    DropdownRound.Size = UDim2.new(1, 0, 1, 0)
                    DropdownRound.Image = "rbxassetid://3570695787"
                    DropdownRound.ImageColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                    DropdownRound.ScaleType = Enum.ScaleType.Slice
                    DropdownRound.SliceCenter = Rect.new(100, 100, 100, 100)
                    DropdownRound.SliceScale = 0.04
        
                    DropdownToggle.Name = "DropdownToggle"
                    DropdownToggle.Parent = DropdownTitle
                    DropdownToggle.BackgroundColor3 = Color3.new(1, 1, 1)
                    DropdownToggle.BackgroundTransparency = 1
                    DropdownToggle.Position = UDim2.new(0.816928029, 0, 0, 0)
                    DropdownToggle.Size = UDim2.new(0, 28, 0, 24)
                    DropdownToggle.AutoButtonColor = false
                    DropdownToggle.Font = Enum.Font.SourceSansBold
                    DropdownToggle.Text = ">"
                    DropdownToggle.TextColor3 = Color3.new(1, 1, 1)
                    DropdownToggle.TextSize = 15
                    
                    DropdownMain.Name = "DropdownMain"
                    DropdownMain.Parent = DropdownTitle
                    DropdownMain.BackgroundColor3 = Color3.new(0.137255, 0.137255, 0.137255)
                    DropdownMain.BackgroundTransparency = 1
                    DropdownMain.ClipsDescendants = true
                    DropdownMain.Position = UDim2.new(1.09275186, 0, -0.0336658955, 0)
                    DropdownMain.Size = UDim2.new(0, 0, 0, DropdownYSize)
                    DropdownMain.Image = "rbxassetid://3570695787"
                    DropdownMain.ImageColor3 = Color3.new(0.137255, 0.137255, 0.137255)
                    DropdownMain.ScaleType = Enum.ScaleType.Slice
                    DropdownMain.SliceCenter = Rect.new(100, 100, 100, 100)
                    DropdownMain.SliceScale = 0.04
        
                    ScrollingFrame.Parent = DropdownMain
                    ScrollingFrame.BackgroundColor3 = Color3.new(1, 1, 1)
                    ScrollingFrame.BackgroundTransparency = 1
                    ScrollingFrame.BorderSizePixel = 0
                    ScrollingFrame.Size = UDim2.new(0, 153, 0, DropdownYSize)
                    ScrollingFrame.BottomImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
                    ScrollingFrame.CanvasSize = UDim2.new(0, 0, StartingCanvasSize, 0)
                    ScrollingFrame.ScrollBarThickness = 3
                    ScrollingFrame.TopImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
                    ScrollingFrame.ScrollingDirection = "Y"
        
                    ButtonLayout.Name = "ButtonLayout"
                    ButtonLayout.Parent = ScrollingFrame
                    ButtonLayout.SortOrder = Enum.SortOrder.LayoutOrder
        
                    for i, v in pairs(options) do
                        local DropdownOption = Instance.new("TextButton")
            
                        NumberOfOptions = NumberOfOptions + 1
        
                        local DropdownButtonName = RemoveSpaces(v)
        
                        DropdownOption.Name = (DropdownButtonName .. "Button")
                        DropdownOption.Parent = ScrollingFrame
                        DropdownOption.BackgroundColor3 = Color3.new(0.215686, 0.215686, 0.215686)
                        DropdownOption.BackgroundTransparency = 1
                        DropdownOption.BorderSizePixel = 0
                        DropdownOption.Position = UDim2.new(0, 0, 0, 0)
                        DropdownOption.Size = UDim2.new(0, 153, 0, 25)
                        DropdownOption.AutoButtonColor = false
                        DropdownOption.Font = Enum.Font.SourceSansBold
                        DropdownOption.Text = v
                        DropdownOption.TextColor3 = Color3.new(1, 1, 1)
                        DropdownOption.TextSize = 14
        
                        if NumberOfOptions <= 4 then
                            DropdownYSize = DropdownYSize + 25
                            DropdownMain.Size = UDim2.new(0, 0, 0, DropdownYSize)
                        elseif NumberOfOptions >= 4 then
                            StartScrollingFrame = true
                        end
        
                        if StartScrollingFrame then
                            StartingCanvasSize = StartingCanvasSize + 0.25
                            ScrollingFrame.CanvasSize = UDim2.new(0, 0, StartingCanvasSize, 0)
                        end
        
                        DropdownOption.InputBegan:Connect(function(input)
                            if input.UserInputType == Enum.UserInputType.MouseMovement then
                                TweenService:Create(DropdownOption, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 0.5}):Play()
                            end
                        end)
                            
                        DropdownOption.InputEnded:Connect(function(input)
                            if input.UserInputType == Enum.UserInputType.MouseMovement then
                                TweenService:Create(DropdownOption, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                            end
                        end)
        
                        DropdownOption.MouseButton1Down:Connect(function()
                            SelectedOptionName = v
                            action(v)
        
                            IsDropdownWindowOpen = false
        
                            DropdownToggle.Text = ">"
                            TweenService:Create(DropdownToggle, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = 0}):Play()
        
                            TweenService:Create(DropdownTitle, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextColor3 = Color3.new(1, 1, 1)}):Play()
                            DropdownTitle.Text = SelectedOptionName
        
                            TweenService:Create(ScrollingFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {ScrollBarImageTransparency = 1}):Play()
                            TweenService:Create(ScrollingFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 0, 0, DropdownYSize)}):Play()
        
                            TweenService:Create(DropdownMain, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 0, 0, DropdownYSize)}):Play()
                        end)
                    end
            
                    DropdownToggle.MouseButton1Down:Connect(function()
                        if IsDropdownWindowOpen then
                            IsDropdownWindowOpen = false
        
                            DropdownToggle.Text = ">"
                            TweenService:Create(DropdownToggle, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = 0}):Play()
        
                            TweenService:Create(DropdownTitle, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextColor3 = Color3.new(1, 1, 1)}):Play()
                            DropdownTitle.Text = SelectedOptionName
        
                            TweenService:Create(ScrollingFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {ScrollBarImageTransparency = 1}):Play()
                            TweenService:Create(ScrollingFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 0, 0, DropdownYSize)}):Play()
        
                            TweenService:Create(DropdownMain, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 0, 0, DropdownYSize)}):Play()
                        elseif not IsDropdownWindowOpen then
                            Body.ClipsDescendants = false
                            Section1Holder.ClipsDescendants = false
        
                            IsDropdownWindowOpen = true
        
                            DropdownToggle.Text = "<"
                            TweenService:Create(DropdownToggle, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = -360}):Play()
        
                            TweenService:Create(DropdownTitle, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextColor3 = Color3.new(0.698039, 0.698039, 0.698039)}):Play()
                            DropdownTitle.Text = name
        
                            TweenService:Create(ScrollingFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {ScrollBarImageTransparency = 0}):Play()
                            TweenService:Create(ScrollingFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 153, 0, DropdownYSize)}):Play()
        
                            TweenService:Create(DropdownMain, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 153, 0, DropdownYSize)}):Play()
                        end
                    end)
        
                    SectionToggle.MouseButton1Down:Connect(function()
                        if not IsSectionOpen then
                            ExtendSectionSize(30)
                            ExtendBodySize(30)
                        elseif IsSectionOpen then
                            IsDropdownWindowOpen = false
        
                            DropdownToggle.Text = ">"
                            TweenService:Create(DropdownToggle, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = 0}):Play()
        
                            TweenService:Create(DropdownTitle, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextColor3 = Color3.new(1, 1, 1)}):Play()
                            DropdownTitle.Text = SelectedOptionName
        
                            TweenService:Create(ScrollingFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {ScrollBarImageTransparency = 1}):Play()
                            TweenService:Create(ScrollingFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 0, 0, 0)}):Play()
        
                            TweenService:Create(DropdownMain, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 0, 0, DropdownYSize)}):Play()
                            
                            Body.ClipsDescendants = true
                            Section1Holder.ClipsDescendants = true
        
                            UnExtendSectionSize(30)
                            UnExtendBodySize(30)
                        end
                    end)
        
                    WindowToggle.MouseButton1Down:Connect(function()
                        IsDropdownWindowOpen = false
        
                        DropdownToggle.Text = ">"
                        TweenService:Create(DropdownToggle, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = 0}):Play()
        
                        TweenService:Create(DropdownTitle, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextColor3 = Color3.new(1, 1, 1)}):Play()
        
                        DropdownTitle.Text = SelectedOptionName
                        TweenService:Create(ScrollingFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {ScrollBarImageTransparency = 1}):Play()
                        TweenService:Create(ScrollingFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 0, 0, DropdownYSize)}):Play()
        
                        TweenService:Create(DropdownMain, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 0, 0, DropdownYSize)}):Play()
                        
                        Body.ClipsDescendants = true
                        Section1Holder.ClipsDescendants = true
        
                        if not IsTabOpen then
                            if IsSectionOpen then
                                ExtendBodySize(30)
                                TweenService:Create(SectionToggle, TweenInfo.new(0, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = -360}):Play()
                                TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
                            elseif not IsSectionOpen then
                                TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
                            end
        
                            
                        elseif IsTabOpen then
                            if IsSectionOpen then
                                UnExtendBodySize(30)
                                TweenService:Create(SectionToggle, TweenInfo.new(0, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = 0}):Play()
                                TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                            elseif not IsSectionOpen then
                                TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                            end
                        end
        
                        TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 1}):Play()
                
                        SectionToggle.Visible = false
                
                        repeat wait() until SectionToggle.TextTransparency == 1
                        SectionToggle.Visible = true
                        TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
                    end)
                end
        
                return LibraryElements
            end
        
            return Sections
        end
        
        local PhantomForcesWindow = Library:NewWindow("Tank Warfare")
        
        local MainCheatsSection = PhantomForcesWindow:NewSection("UwU Cheats")
        
        local Tanki = PhantomForcesWindow:NewSection("Tank Cheats")
        
        
        Tanki:CreateToggle("Fast Turret Rotate", function(Tanki1)
            --fatfatfat
            if Tanki1 then
                _OldSpeed = game:GetService("Players").LocalPlayer.Character.Base.TurretRotation.AngularSpeed
            else
                game:GetService("Players").LocalPlayer.Character.Base.TurretRotation.AngularSpeed = _OldSpeed
            end
            __Tanki1 = Tanki1
        end)
        
        Tanki:CreateToggle("Fast Respawn", function(Tanki3)
            --fatfatfat
            __Tanki3 = Tanki3
        end)
        
        Tanki:CreateButton("Godmode", function()
            --fatfatfat
            for i,v in pairs(workspace[game.Players.LocalPlayer.Name]:GetDescendants()) do
                if v.Name == "HitTarget" then
                    v:Remove()
                end
            end
        end)
        
        Tanki:CreateToggle("Auto Godmode", function(Tanki2)
            --fatfatfat
            __Tanki2 = Tanki2
        end)
        MainCheatsSection:CreateToggle("Kill All", function(enabled)
            --fatfatfat
        __enabled = enabled
        end)
        
        MainCheatsSection:CreateToggle("Kill Aura", function(enabled2)
            --fatfatfat
            __enabled2 = enabled2
        end)
        
        MainCheatsSection:CreateToggle("Click Kill", function(enabled9)
            --fatfatfat
            __enabled9 = enabled9
        end)
        
        MainCheatsSection:CreateToggle("AutoCollect", function(enabled3)
            --fatfatfat
            __enabled3 = enabled3
        end)
        
        
        MainCheatsSection:CreateToggle("Ping Changer", function(enabled4)
            --fatfatfat
            __enabled4 = enabled4
        end)
        local __PingValue = 50
        MainCheatsSection:CreateSlider("Ping", 1, 210, 50, false, function(E)
            --fatfatfat
            __PingValue = E
        end)
        
        local _C
        _C = game:GetService('RunService').Stepped:Connect(function()
            if __Tanki2 then
                for i,v in pairs(workspace[game.Players.LocalPlayer.Name]:GetDescendants()) do
                    if v.Name == "HitTarget" then
                        v:Remove()
                    end
                end
            end
            if __Tanki1 then
                if workspace[game.Players.LocalPlayer.Name]:FindFirstChild("Base") then
                game:GetService("Players").LocalPlayer.Character.Base.TurretRotation.AngularSpeed = 9e9
                end
            end
            if __enabled4 then
                local number_1 = __PingValue;
                local Target = game:GetService("ReplicatedStorage")["Core_RemoteFunctions"].Ping;
                Target:InvokeServer(number_1);
            end
            if __enabled2 then
                for _, v in pairs(game:GetService("Players"):GetPlayers()) do
                    if v.Name ~= game:GetService("Players").LocalPlayer.Name then
                        if Workspace:FindFirstChild(v.Name) then
                            if Workspace[v.Name]:FindFirstChild("Base") then
                            if (game:GetService("Players").LocalPlayer.Character.Base.Position - v.Character.Base.Position).Magnitude < 120 then
                            local table_1 = {
                                [1] = v.Character.Base,
                                [2] = v.Character.Base.Position,
                                [3] =  v.Character.Base.Position,
                                [4] = 'Primary',
                                [5] =  v.Character.Base.Position,
                            };
                            local Target = game:GetService("Players").LocalPlayer.Backpack.aWeaponEventa;
                            Target:FireServer(table_1);
                        end
                        end
                    end
                end
                end
            end
        end)
        
        spawn(function()
            while wait() do
                if __enabled then
                    for _, v in pairs(game:GetService("Players"):GetPlayers()) do
                        if v.Name ~= game:GetService("Players").LocalPlayer.Name then
                            if Workspace:FindFirstChild(v.Name) then
                                if Workspace[v.Name]:FindFirstChild("Base") then
                                local table_1 = {
                                    [1] = v.Character.Base,
                                    [2] = v.Character.Base.Position,
                                    [3] =  v.Character.Base.Position,
                                    [4] = 'Primary',
                                    [5] =  v.Character.Base.Position,
                                };
                                local Target = game:GetService("Players").LocalPlayer.Backpack:FindFirstChildOfClass("RemoteEvent");
                                Target:FireServer(table_1);
                                wait(.4)
                            end
                            end
                        end
                    end
                end
            end
        end)
        
        spawn(function()
            while wait(.2) do
                if __enabled3 then
                    for _,v in pairs(workspace:GetDescendants()) do
                        if v:IsA("TouchTransmitter") then
                        v.Parent.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
                        end
                        end
                end
            end
        end)
        local player = game:GetService('Players').LocalPlayer 
        local mouse = player:GetMouse() 
        local canshoot = false
        mouse.Button1Down:connect(function()
            canshoot = true
        end)
        mouse.Button1Up:connect(function()
            canshoot = false
        end)
        
        __Cool = true
        game:GetService('RunService').Stepped:connect(function()
            if __Tanki3 then
                if workspace[game.Players.LocalPlayer.Name]:FindFirstChild("Base") then
                    if game:GetService("Players").LocalPlayer.Character.Health.Value == 0 then
                        if __Cool  then
                            __Cool = false
                    local string_1 = nil;
                    local Target = game:GetService("ReplicatedStorage")["Core_RemoteEvents"].RespawnEvent;
                    Target:FireServer(string_1);
                    
                    local Target = game:GetService("ReplicatedStorage")["Core_RemoteEvents"].RandomSpawn;
                    Target:FireServer();
                    wait(1)
                    __Cool = true
                    end
                    end
                    end
            end
            if __enabled9 then
            if canshoot == true then 
                for _, v in pairs(game:GetService("Players"):GetPlayers()) do
                    if v.Name ~= game:GetService("Players").LocalPlayer.Name then
                            if (Vector3.new(mouse.Hit.p.X,mouse.Hit.p.Y,mouse.Hit.p.Z) - v.Character.Base.Position).Magnitude < 35 then
                                local table_1 = {
                                    [1] = v.Character.Base,
                                    [2] = v.Character.Base.Position,
                                    [3] =  v.Character.Base.Position,
                                    [4] = 'Primary',
                                    [5] =  v.Character.Base.Position,
                                };
                                local Target = game:GetService("Players").LocalPlayer.Backpack.aWeaponEventa;
                                Target:FireServer(table_1);
                            end
                        end
                    end
            end
        end
        end)
    end
    function yba()
        local UserInputService = game:GetService("UserInputService")
        local TweenService = game:GetService("TweenService")
        local RunService = game:GetService("RunService")
    
        local Mouse = game:GetService("Players").LocalPlayer:GetMouse()
    
        local RainbowModeColorValue = 0
        local ColorPickerZIndex = 1
    
        local RainbowModeColorValue = 0
        local ColorPickerZIndex = 1
    
        local WindowPosition = 0
    
        local CoastifiedLibrary = Instance.new("ScreenGui")
        local Container = Instance.new("Frame")
    
        CoastifiedLibrary.Name = "CoastifiedLibrary"
        CoastifiedLibrary.Parent = game:GetService("CoreGui")
    
        Container.Name = "Container"
        Container.Parent = CoastifiedLibrary
        Container.BackgroundColor3 = Color3.new(1, 1, 1)
        Container.BackgroundTransparency = 1
        Container.Size = UDim2.new(0, 100, 0, 100)
    
        UserInputService.InputBegan:Connect(function(input)
            if input.KeyCode == Enum.KeyCode.RightControl then
                CoastifiedLibrary.Enabled = not CoastifiedLibrary.Enabled
            end
        end)
    
        function Dragging(instancename)
            local dragging = nil
            local dragInput = nil
            local dragStart = nil
            local startPos = nil
    
            local function update(input)
                local delta = input.Position - dragStart
                instancename.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
            end
    
            instancename.InputBegan:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                    dragging = true
                    dragStart = input.Position
                    startPos = instancename.Position
                    
                    input.Changed:Connect(function()
                        if input.UserInputState == Enum.UserInputState.End then
                            dragging = false
                        end
                    end)
                end
            end)
    
            instancename.InputChanged:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
                    dragInput = input
                end
            end)
    
            UserInputService.InputChanged:Connect(function(input)
                if input == dragInput and dragging then
                    update(input)
                end
            end)
        end
    
        local function RemoveSpaces(str)
            return str:gsub(" ", "")
        end
    
        coroutine.wrap(function()
            while wait() do
                RainbowModeColorValue = RainbowModeColorValue + 1/255
                if RainbowModeColorValue >= 1 then
                    RainbowModeColorValue = 0
                end
            end
        end)()
    
    
        local Library = {}
    
        function Library:NewWindow(name)
            local Window = Instance.new("ImageLabel")
            local Topbar = Instance.new("Frame")
            local WindowToggle = Instance.new("TextButton")
            local WindowTitle = Instance.new("TextLabel")
            local BottomRoundCover = Instance.new("Frame")
            local Body = Instance.new("ImageLabel")
            local Sorter = Instance.new("UIListLayout")
            local TopbarBodyCover = Instance.new("Frame")
    
            local WindowName = RemoveSpaces(name)
    
            WindowPosition = WindowPosition + 2
    
            local BodyYSize = 35
            local IsTabOpen = true
    
            local function ExtendBodySize(value)
                BodyYSize = BodyYSize + value
    
                TweenService:Create(Body, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 170, 0, BodyYSize)}):Play()
            end
    
            local function UnExtendBodySize(value)
                BodyYSize = BodyYSize - value
    
                TweenService:Create(Body, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 170, 0, BodyYSize)}):Play()
            end
    
            
            Window.Name = (WindowName .. "Window")
            Window.Parent = Container
            Window.BackgroundColor3 = Color3.new(0.0980392, 0.0980392, 0.0980392)
            Window.BackgroundTransparency = 1
            Window.Position = UDim2.new(WindowPosition, -100, 3, -265)
            Window.Size = UDim2.new(0, 170, 0, 30)
            Window.ZIndex = 2
            Window.Image = "rbxassetid://3570695787"
            Window.ImageColor3 = Color3.new(0.0980392, 0.0980392, 0.0980392)
            Window.ScaleType = Enum.ScaleType.Slice
            Window.SliceCenter = Rect.new(100, 100, 100, 100)
            Window.SliceScale =  0.05
    
            Topbar.Name = "Topbar"
            Topbar.Parent = Window
            Topbar.BackgroundColor3 = Color3.new(1, 1, 1)
            Topbar.BackgroundTransparency = 1
            Topbar.BorderSizePixel = 0
            Topbar.Size = UDim2.new(0, 170, 0, 30)
            Topbar.ZIndex = 2
    
            WindowToggle.Name = "WindowToggle"
            WindowToggle.Parent = Topbar
            WindowToggle.BackgroundColor3 = Color3.new(1, 1, 1)
            WindowToggle.BackgroundTransparency = 1
            WindowToggle.Position = UDim2.new(0.822450161, 0, 0, 0)
            WindowToggle.Size = UDim2.new(0, 30, 0, 30)
            WindowToggle.ZIndex = 2
            WindowToggle.Font = Enum.Font.SourceSansSemibold
            WindowToggle.Text = "-"
            WindowToggle.TextColor3 = Color3.new(1, 1, 1)
            WindowToggle.TextSize = 20
            WindowToggle.TextWrapped = true
    
            WindowToggle.MouseButton1Down:Connect(function()
                if not IsTabOpen then
                    IsTabOpen = true
                    TweenService:Create(WindowToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 1}):Play()
    
                    WindowToggle.Text = "-"
                    WindowToggle.TextSize = 20
                    WindowToggle.Visible = false
        
                    repeat wait() until WindowToggle.TextTransparency == 1
                    WindowToggle.Visible = true
                    TweenService:Create(WindowToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
                elseif IsTabOpen then
                    IsTabOpen = false
                    TweenService:Create(WindowToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 1}):Play()
                
                    WindowToggle.Text = "v"
                    WindowToggle.TextSize = 14
                    WindowToggle.Visible = false       
    
                    repeat wait() until WindowToggle.TextTransparency == 1
                    WindowToggle.Visible = true
                    TweenService:Create(WindowToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
                end
            end)
    
            WindowTitle.Name = "WindowTitle"
            WindowTitle.Parent = Topbar
            WindowTitle.BackgroundColor3 = Color3.new(1, 1, 1)
            WindowTitle.BackgroundTransparency = 1
            WindowTitle.Size = UDim2.new(0, 170, 0, 30)
            WindowTitle.ZIndex = 2
            WindowTitle.Font = Enum.Font.SourceSansBold
            WindowTitle.Text = name
            WindowTitle.TextColor3 = Color3.new(1, 1, 1)
            WindowTitle.TextSize = 17
    
            BottomRoundCover.Name = "BottomRoundCover"
            BottomRoundCover.Parent = Topbar
            BottomRoundCover.BackgroundColor3 = Color3.new(0.0980392, 0.0980392, 0.0980392)
            BottomRoundCover.BorderSizePixel = 0
            BottomRoundCover.Position = UDim2.new(0, 0, 0.833333313, 0)
            BottomRoundCover.Size = UDim2.new(0, 170, 0, 5)
            BottomRoundCover.ZIndex = 2
    
            Body.Name = "Body"
            Body.Parent = Window
            Body.BackgroundColor3 = Color3.new(0.137255, 0.137255, 0.137255)
            Body.BackgroundTransparency = 1
            Body.ClipsDescendants = true
            Body.Size = UDim2.new(0, 170, 0, BodyYSize)
            Body.Image = "rbxassetid://3570695787"
            Body.ImageColor3 = Color3.new(0.137255, 0.137255, 0.137255)
            Body.ScaleType = Enum.ScaleType.Slice
            Body.SliceCenter = Rect.new(100, 100, 100, 100)
            Body.SliceScale =  0.05
    
            Sorter.Name = "Sorter"
            Sorter.Parent = Body
            Sorter.SortOrder = Enum.SortOrder.LayoutOrder
    
            TopbarBodyCover.Name = "TopbarBodyCover"
            TopbarBodyCover.Parent = Body
            TopbarBodyCover.BackgroundColor3 = Color3.new(1, 1, 1)
            TopbarBodyCover.BackgroundTransparency = 1
            TopbarBodyCover.BorderSizePixel = 0
            TopbarBodyCover.Size = UDim2.new(0, 170, 0, 30)
    
            Dragging(Window)
    
            local Sections = {}
    
            function Sections:NewSection(name)
                local Section1Holder = Instance.new("Frame")
                local SectionInfo = Instance.new("Frame")
                local SectionToggle = Instance.new("TextButton")
                local SectionTitle = Instance.new("TextLabel")
                local Layout = Instance.new("UIListLayout")
    
                local SectionName = RemoveSpaces(name)
                local SectionToggleText = "v"
                local SectionYSize = 30
                local IsSectionOpen = false
    
                local function ExtendSectionSize(value)
                    SectionYSize = SectionYSize + value
            
                    TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 170, 0, SectionYSize)}):Play()
                end
            
                local function UnExtendSectionSize(value)
                    SectionYSize = SectionYSize - value
            
                    TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 170, 0, SectionYSize)}):Play()
                end
    
                Section1Holder.Name = (SectionName .. "Section")
                Section1Holder.Parent = Body
                Section1Holder.BackgroundColor3 = Color3.new(0.176471, 0.176471, 0.176471)
                Section1Holder.BorderSizePixel = 0
                Section1Holder.ClipsDescendants = true
                Section1Holder.Size = UDim2.new(0, 170, 0, SectionYSize)
                
                ExtendBodySize(30)
    
                SectionInfo.Name = "SectionInfo"
                SectionInfo.Parent = Section1Holder
                SectionInfo.BackgroundColor3 = Color3.new(1, 1, 1)
                SectionInfo.BackgroundTransparency = 1
                SectionInfo.Size = UDim2.new(0, 170, 0, 30)
                
                SectionToggle.Name = "SectionToggle"
                SectionToggle.Parent = SectionInfo
                SectionToggle.BackgroundColor3 = Color3.new(1, 1, 1)
                SectionToggle.BackgroundTransparency = 1
                SectionToggle.Position = UDim2.new(0.822450161, 0, 0, 0)
                SectionToggle.Size = UDim2.new(0, 30, 0, 30)
                SectionToggle.ZIndex = 2
                SectionToggle.Font = Enum.Font.SourceSansSemibold
                SectionToggle.Text = SectionToggleText
                SectionToggle.TextColor3 = Color3.new(1, 1, 1)
                SectionToggle.TextSize = 14
                SectionToggle.TextWrapped = true
                
                SectionTitle.Name = "SectionTitle"
                SectionTitle.Parent = SectionInfo
                SectionTitle.BackgroundColor3 = Color3.new(1, 1, 1)
                SectionTitle.BackgroundTransparency = 1
                SectionTitle.BorderSizePixel = 0
                SectionTitle.Position = UDim2.new(0.052941177, 0, 0, 0)
                SectionTitle.Size = UDim2.new(0, 125, 0, 30)
                SectionTitle.Font = Enum.Font.SourceSansBold
                SectionTitle.Text = name
                SectionTitle.TextColor3 = Color3.new(1, 1, 1)
                SectionTitle.TextSize = 17
                SectionTitle.TextXAlignment = Enum.TextXAlignment.Left
                
                Layout.Name = "Layout"
                Layout.Parent = Section1Holder
                Layout.SortOrder = Enum.SortOrder.LayoutOrder
    
                WindowToggle.MouseButton1Down:Connect(function()
                    if not IsTabOpen then
                        ExtendBodySize(30)
                        SectionToggle.Text = SectionToggleText
                        TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
                    elseif IsTabOpen then
                        UnExtendBodySize(30)
                        SectionToggle.Text = ""
                        TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                    end
                end)
    
                SectionToggle.MouseButton1Down:Connect(function()
                    if not IsSectionOpen then
                        IsSectionOpen = true
                        SectionToggleText = "-"
    
                        TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 1}):Play()
                        TweenService:Create(WindowToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 1}):Play()
    
                        SectionToggle.Text = SectionToggleText
                        SectionToggle.TextSize = 20
                        SectionToggle.Visible = false
                        WindowToggle.Visible = false
    
                        repeat wait() until SectionToggle.TextTransparency == 1 and WindowToggle.TextTransparency == 1
                        SectionToggle.Visible = true
                        WindowToggle.Visible = true
                        TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
                        TweenService:Create(WindowToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
                    elseif IsSectionOpen then
                        IsSectionOpen = false
                        SectionToggleText = "v"
    
                        TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 1}):Play()
                        TweenService:Create(WindowToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 1}):Play()
    
                        SectionToggle.Text = SectionToggleText
                        SectionToggle.TextSize = 14
                        SectionToggle.Visible = false
                        WindowToggle.Visible = false
    
                        repeat wait() until SectionToggle.TextTransparency == 1 and WindowToggle.TextTransparency == 1
                        SectionToggle.Visible = true
                        WindowToggle.Visible = true
                        TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
                        TweenService:Create(WindowToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
                    end
                end)
    
                local LibraryElements = {}
    
                function LibraryElements:CreateToggle(name, action)
                    local ToggleHolder = Instance.new("Frame")
                    local ToggleTitle = Instance.new("TextLabel")
                    local ToggleBackground = Instance.new("ImageLabel")
                    local ToggleButton = Instance.new("ImageButton")
                
                    local ToggleName = RemoveSpaces(name)
                    local Toggled = false
    
                    ToggleHolder.Name = (ToggleName .. "ToggleHolder")
                    ToggleHolder.Parent = Section1Holder
                    ToggleHolder.BackgroundColor3 = Color3.new(0.137255, 0.137255, 0.137255)
                    ToggleHolder.BorderSizePixel = 0
                    ToggleHolder.Size = UDim2.new(0, 170, 0, 30)
                
                    ToggleTitle.Name = "ToggleTitle"
                    ToggleTitle.Parent = ToggleHolder
                    ToggleTitle.BackgroundColor3 = Color3.new(1, 1, 1)
                    ToggleTitle.BackgroundTransparency = 1
                    ToggleTitle.BorderSizePixel = 0
                    ToggleTitle.Position = UDim2.new(0.052941177, 0, 0, 0)
                    ToggleTitle.Size = UDim2.new(0, 125, 0, 30)
                    ToggleTitle.Font = Enum.Font.SourceSansBold
                    ToggleTitle.Text = name
                    ToggleTitle.TextColor3 = Color3.new(1, 1, 1)
                    ToggleTitle.TextSize = 17
                    ToggleTitle.TextXAlignment = Enum.TextXAlignment.Left
                
                    ToggleBackground.Name = "ToggleBackground"
                    ToggleBackground.Parent = ToggleHolder
                    ToggleBackground.BackgroundColor3 = Color3.new(1, 1, 1)
                    ToggleBackground.BackgroundTransparency = 1
                    ToggleBackground.BorderSizePixel = 0
                    ToggleBackground.Position = UDim2.new(0.847058833, 0, 0.166666672, 0)
                    ToggleBackground.Size = UDim2.new(0, 20, 0, 20)
                    ToggleBackground.Image = "rbxassetid://3570695787"
                    ToggleBackground.ImageColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                
                    ToggleButton.Name = "ToggleButton"
                    ToggleButton.Parent = ToggleBackground
                    ToggleButton.BackgroundColor3 = Color3.new(1, 1, 1)
                    ToggleButton.BackgroundTransparency = 1
                    ToggleButton.Position = UDim2.new(0, 2, 0, 2)
                    ToggleButton.Size = UDim2.new(0, 16, 0, 16)
                    ToggleButton.Image = "rbxassetid://3570695787"
                    ToggleButton.ImageColor3 = Color3.new(1, 0.341176, 0.341176)
                    ToggleButton.ImageTransparency = 1
    
                    ToggleButton.MouseButton1Down:Connect(function()	
                        Toggled = not Toggled
                    
                        if Toggled then
                            TweenService:Create(ToggleButton, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {ImageTransparency = 0}):Play()
                        elseif not Toggled then
                            TweenService:Create(ToggleButton, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {ImageTransparency = 1}):Play()
                        end
    
                        action(Toggled)
                    end)
    
                    SectionToggle.MouseButton1Down:Connect(function()
                        if not IsSectionOpen then
                            ExtendSectionSize(30)
                            ExtendBodySize(30)
                        elseif IsSectionOpen then
                            UnExtendSectionSize(30)
                            UnExtendBodySize(30)
                        end
                    end)
    
                    WindowToggle.MouseButton1Down:Connect(function()
                        if not IsTabOpen then
                            if IsSectionOpen then
                                ExtendBodySize(30)
                                TweenService:Create(SectionToggle, TweenInfo.new(0, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = 360}):Play()
                                TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
                            elseif not IsSectionOpen then
                                TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
                            end
    
                            
                        elseif IsTabOpen then
                            if IsSectionOpen then
                                UnExtendBodySize(30)
                                TweenService:Create(SectionToggle, TweenInfo.new(0, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = 0}):Play()
                                TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                            elseif not IsSectionOpen then
                                TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                            end
                        end
    
                        TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 1}):Play()
                
                        SectionToggle.Visible = false
                
                        repeat wait() until SectionToggle.TextTransparency == 1
                        SectionToggle.Visible = true
                        TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
                    end)
                end
    
                function LibraryElements:CreateSlider(name, minimumvalue, maximumvalue, startvalue, precisevalue, action)
                    local SliderHolder = Instance.new("Frame")
                    local SliderTitle = Instance.new("TextLabel")
                    local SliderValueHolder = Instance.new("ImageLabel")
                    local SliderValue = Instance.new("TextLabel")
                    local SliderBackground = Instance.new("ImageLabel")
                    local Slider = Instance.new("ImageLabel")
    
                    local SliderName = RemoveSpaces(name)
                    local Dragging = false
                    local PreciseSliderValue = precisevalue
    
                    SliderHolder.Name = (SliderName .. "SliderHolder")
                    SliderHolder.Parent = Section1Holder
                    SliderHolder.BackgroundColor3 = Color3.new(0.137255, 0.137255, 0.137255)
                    SliderHolder.BorderSizePixel = 0
                    SliderHolder.Size = UDim2.new(0, 170, 0, 30)
    
                    SliderTitle.Name = "SliderTitle"
                    SliderTitle.Parent = SliderHolder
                    SliderTitle.BackgroundColor3 = Color3.new(1, 1, 1)
                    SliderTitle.BackgroundTransparency = 1
                    SliderTitle.BorderSizePixel = 0
                    SliderTitle.Position = UDim2.new(0.052941177, 0, 0, 0)
                    SliderTitle.Size = UDim2.new(0, 125, 0, 15)
                    SliderTitle.Font = Enum.Font.SourceSansSemibold
                    SliderTitle.Text = name
                    SliderTitle.TextColor3 = Color3.new(1, 1, 1)
                    SliderTitle.TextSize = 17
                    SliderTitle.TextXAlignment = Enum.TextXAlignment.Left
    
                    SliderValueHolder.Name = "SliderValueHolder"
                    SliderValueHolder.Parent = SliderHolder
                    SliderValueHolder.BackgroundColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                    SliderValueHolder.BackgroundTransparency = 1
                    SliderValueHolder.Position = UDim2.new(0.747058809, 0, 0, 0)
                    SliderValueHolder.Size = UDim2.new(0, 35, 0, 15)
                    SliderValueHolder.Image = "rbxassetid://3570695787"
                    SliderValueHolder.ImageColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                    SliderValueHolder.ImageTransparency = 0.5
                    SliderValueHolder.ScaleType = Enum.ScaleType.Slice
                    SliderValueHolder.SliceCenter = Rect.new(100, 100, 100, 100)
                    SliderValueHolder.SliceScale = 0.02
    
                    SliderValue.Name = "SliderValue"
                    SliderValue.Parent = SliderValueHolder
                    SliderValue.BackgroundColor3 = Color3.new(1, 1, 1)
                    SliderValue.BackgroundTransparency = 1
                    SliderValue.Size = UDim2.new(0, 35, 0, 15)
                    SliderValue.Font = Enum.Font.SourceSansSemibold
                    SliderValue.Text = tostring(startvalue or PreciseSliderValue and tonumber(string.format("%.2f", startvalue)))
                    SliderValue.TextColor3 = Color3.new(1, 1, 1)
                    SliderValue.TextSize = 14
    
                    SliderBackground.Name = "SliderBackground"
                    SliderBackground.Parent = SliderHolder
                    SliderBackground.BackgroundColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                    SliderBackground.BackgroundTransparency = 1
                    SliderBackground.Position = UDim2.new(0.0529999994, 0, 0.649999976, 0)
                    SliderBackground.Selectable = true
                    SliderBackground.Size = UDim2.new(0, 153, 0, 5)
                    SliderBackground.Image = "rbxassetid://3570695787"
                    SliderBackground.ImageColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                    SliderBackground.ImageTransparency = 0.5
                    SliderBackground.ScaleType = Enum.ScaleType.Slice
                    SliderBackground.SliceCenter = Rect.new(100, 100, 100, 100)
                    SliderBackground.ClipsDescendants = true
                    SliderBackground.SliceScale = 0.02
    
                    Slider.Name = "Slider"
                    Slider.Parent = SliderBackground
                    Slider.BackgroundColor3 = Color3.new(1, 1, 1)
                    Slider.BackgroundTransparency = 1
                    Slider.Size = UDim2.new(((startvalue or minimumvalue) - minimumvalue) / (maximumvalue - minimumvalue), 0, 0, 5)
                    Slider.Image = "rbxassetid://3570695787"
                    Slider.ScaleType = Enum.ScaleType.Slice
                    Slider.SliceCenter = Rect.new(100, 100, 100, 100)
                    Slider.SliceScale = 0.02
    
                    local function Sliding(input)
                        local Pos = UDim2.new(math.clamp((input.Position.X - SliderBackground.AbsolutePosition.X) / SliderBackground.AbsoluteSize.X, 0, 1), 0, 1.15, 0)
                        TweenService:Create(Slider, TweenInfo.new(0.25, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = Pos}):Play()
    
                        local NonSliderPreciseValue = math.floor(((Pos.X.Scale * maximumvalue) / maximumvalue) * (maximumvalue - minimumvalue) + minimumvalue)
                        local SliderPreciseValue = ((Pos.X.Scale * maximumvalue) / maximumvalue) * (maximumvalue - minimumvalue) + minimumvalue
            
                        local Value = (PreciseSliderValue and SliderPreciseValue or NonSliderPreciseValue)
                        Value = tonumber(string.format("%.2f", Value))
            
                        SliderValue.Text = tostring(Value)
                        action(Value)
                    end
                
                    SliderBackground.InputBegan:Connect(function(input)
                        if input.UserInputType == Enum.UserInputType.MouseButton1 then
                            Dragging = true
                        end
                    end)
                    
                    SliderBackground.InputEnded:Connect(function(input)
                        if input.UserInputType == Enum.UserInputType.MouseButton1 then
                            Dragging = false
                        end
                    end)
                    
                    SliderBackground.InputBegan:Connect(function(input)
                        if input.UserInputType == Enum.UserInputType.MouseButton1 then
                            Sliding(input)
                        end
                    end)
                
                    UserInputService.InputChanged:Connect(function(input)
                        if Dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                            Sliding(input)
                        end
                    end)
    
                    SectionToggle.MouseButton1Down:Connect(function()
                        if not IsSectionOpen then
                            ExtendSectionSize(30)
                            ExtendBodySize(30)
                        elseif IsSectionOpen then
                            UnExtendSectionSize(30)
                            UnExtendBodySize(30)
                        end
                    end)
    
                    WindowToggle.MouseButton1Down:Connect(function()
                        if not IsTabOpen then
                            if IsSectionOpen then
                                ExtendBodySize(30)
                                TweenService:Create(SectionToggle, TweenInfo.new(0, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = 360}):Play()
                                TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
                            elseif not IsSectionOpen then
                                TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
                            end
    
                            
                        elseif IsTabOpen then
                            if IsSectionOpen then
                                UnExtendBodySize(30)
                                TweenService:Create(SectionToggle, TweenInfo.new(0, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = 0}):Play()
                                TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                            elseif not IsSectionOpen then
                                TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                            end
                        end
    
                        TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 1}):Play()
                
                        SectionToggle.Visible = false
                
                        repeat wait() until SectionToggle.TextTransparency == 1
                        SectionToggle.Visible = true
                        TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
                    end)
                end
    
                function LibraryElements:CreateColorPicker(name, presetcolor, action)
                    local ColorPickerHolder = Instance.new("Frame")
                    local RainbowToggleHolder = Instance.new("Frame")
                    local RainbowTitle = Instance.new("TextLabel")
                    local RainbowBackground = Instance.new("ImageLabel")
                    local RainbowToggleButton = Instance.new("ImageButton")
                    local ColorPickerTitle = Instance.new("TextLabel")
                    local ColorPickerToggle = Instance.new("ImageButton")
                    local ColorPickerMain = Instance.new("ImageLabel")
                    local ColorValueR = Instance.new("TextLabel")
                    local ColorValueRRound = Instance.new("ImageLabel")
                    local ColorValueB = Instance.new("TextLabel")
                    local ColorValueBRound = Instance.new("ImageLabel")
                    local ColorValueG = Instance.new("TextLabel")
                    local ColorValueGRound = Instance.new("ImageLabel")
                    local RoundHueHolder = Instance.new("ImageLabel")
                    local ColorHue = Instance.new("ImageLabel")
                    local HueMarker = Instance.new("Frame")
                    local RoundSaturationHolder = Instance.new("ImageLabel")
                    local ColorSelector = Instance.new("ImageLabel")
                    local SaturationMarker = Instance.new("ImageLabel")
    
                    local ColorPickerName = RemoveSpaces(name)
    
                    ColorPickerZIndex = ColorPickerZIndex + 1
    
                    local ColorPickerOpen = false
                    local RainbowColorMode = false
                    
                    local Color = nil
                    local ColorValue = 0
                    local RainbowColor = nil
    
                    ColorPickerHolder.Name = (ColorPickerName .. "ColorPickerHolder")
                    ColorPickerHolder.Parent = Section1Holder
                    ColorPickerHolder.BackgroundColor3 = Color3.new(0.137255, 0.137255, 0.137255)
                    ColorPickerHolder.BorderSizePixel = 0
                    ColorPickerHolder.Size = UDim2.new(0, 170, 0, 30)
    
                    ColorPickerTitle.Name = "ColorPickerTitle"
                    ColorPickerTitle.Parent = ColorPickerHolder
                    ColorPickerTitle.BackgroundColor3 = Color3.new(1, 1, 1)
                    ColorPickerTitle.BackgroundTransparency = 1
                    ColorPickerTitle.BorderSizePixel = 0
                    ColorPickerTitle.Position = UDim2.new(0.052941177, 0, 0, 0)
                    ColorPickerTitle.Size = UDim2.new(0, 125, 0, 30)
                    ColorPickerTitle.Font = Enum.Font.SourceSansBold
                    ColorPickerTitle.Text = name
                    ColorPickerTitle.TextColor3 = Color3.new(1, 1, 1)
                    ColorPickerTitle.TextSize = 17
                    ColorPickerTitle.TextXAlignment = Enum.TextXAlignment.Left
                    
                    ColorPickerToggle.Name = "ColorPickerToggle"
                    ColorPickerToggle.Parent = ColorPickerHolder
                    ColorPickerToggle.BackgroundColor3 = Color3.new(1, 1, 1)
                    ColorPickerToggle.BackgroundTransparency = 1
                    ColorPickerToggle.Position = UDim2.new(0.822000027, 0, 0.166999996, 0)
                    ColorPickerToggle.Size = UDim2.new(0, 22, 0, 20)
                    ColorPickerToggle.Image = "rbxassetid://3570695787"
                    ColorPickerToggle.ImageColor3 = presetcolor
                    ColorPickerToggle.ScaleType = Enum.ScaleType.Slice
                    ColorPickerToggle.SliceCenter = Rect.new(100, 100, 100, 100)
                    ColorPickerToggle.SliceScale = 0.04
                    
                    ColorPickerMain.Name = "ColorPickerMain"
                    ColorPickerMain.Parent = ColorPickerHolder
                    ColorPickerMain.BackgroundColor3 = Color3.new(0.137255, 0.137255, 0.137255)
                    ColorPickerMain.BackgroundTransparency = 1
                    ColorPickerMain.ClipsDescendants = true
                    ColorPickerMain.BorderSizePixel = 0
                    ColorPickerMain.Position = UDim2.new(1.04705882, 0, -1.36666667, 0)
                    ColorPickerMain.Size = UDim2.new(0, 0, 0, 175)
                    ColorPickerMain.Image = "rbxassetid://3570695787"
                    ColorPickerMain.ImageColor3 = Color3.new(0.137255, 0.137255, 0.137255)
                    ColorPickerMain.ScaleType = Enum.ScaleType.Slice
                    ColorPickerMain.SliceCenter = Rect.new(100, 100, 100, 100)
                    ColorPickerMain.SliceScale = 0.05
                    ColorPickerMain.ZIndex = 1 + ColorPickerZIndex
                    
                    RainbowToggleHolder.Name = "RainbowToggleHolder"
                    RainbowToggleHolder.Parent = ColorPickerMain
                    RainbowToggleHolder.BackgroundColor3 = Color3.new(0.137255, 0.137255, 0.137255)
                    RainbowToggleHolder.BackgroundTransparency = 1
                    RainbowToggleHolder.BorderSizePixel = 0
                    RainbowToggleHolder.Position = UDim2.new(0, 0, 0.819999993, 0)
                    RainbowToggleHolder.Size = UDim2.new(0, 170, 0, 30)
                    RainbowToggleHolder.ZIndex = 1 + ColorPickerZIndex
    
                    RainbowTitle.Name = "RainbowTitle"
                    RainbowTitle.Parent = RainbowToggleHolder
                    RainbowTitle.BackgroundColor3 = Color3.new(1, 1, 1)
                    RainbowTitle.BackgroundTransparency = 1
                    RainbowTitle.BorderSizePixel = 0
                    RainbowTitle.Position = UDim2.new(0.052941177, 0, 0, 0)
                    RainbowTitle.Size = UDim2.new(0, 125, 0, 30)
                    RainbowTitle.Font = Enum.Font.SourceSansBold
                    RainbowTitle.Text = "Rainbow"
                    RainbowTitle.TextColor3 = Color3.new(1, 1, 1)
                    RainbowTitle.TextSize = 17
                    RainbowTitle.TextXAlignment = Enum.TextXAlignment.Left
                    RainbowTitle.ZIndex = 1 + ColorPickerZIndex
    
                    RainbowBackground.Name = "RainbowBackground"
                    RainbowBackground.Parent = RainbowToggleHolder
                    RainbowBackground.BackgroundColor3 = Color3.new(1, 1, 1)
                    RainbowBackground.BackgroundTransparency = 1
                    RainbowBackground.BorderSizePixel = 0
                    RainbowBackground.Position = UDim2.new(0.847058833, 0, 0.166666672, 0)
                    RainbowBackground.Size = UDim2.new(0, 20, 0, 20)
                    RainbowBackground.Image = "rbxassetid://3570695787"
                    RainbowBackground.ImageColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                    RainbowBackground.ZIndex = 1 + ColorPickerZIndex
    
                    RainbowToggleButton.Name = "RainbowToggleButton"
                    RainbowToggleButton.Parent = RainbowBackground
                    RainbowToggleButton.BackgroundColor3 = Color3.new(1, 1, 1)
                    RainbowToggleButton.BackgroundTransparency = 1
                    RainbowToggleButton.Position = UDim2.new(0, 2, 0, 2)
                    RainbowToggleButton.Size = UDim2.new(0, 16, 0, 16)
                    RainbowToggleButton.Image = "rbxassetid://3570695787"
                    RainbowToggleButton.ImageColor3 = Color3.new(1, 0.341176, 0.341176)
                    RainbowToggleButton.ImageTransparency = 1
                    RainbowToggleButton.ZIndex = 1 + ColorPickerZIndex
    
                    ColorValueR.Name = "ColorValueR"
                    ColorValueR.Parent = ColorPickerMain
                    ColorValueR.BackgroundColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                    ColorValueR.BackgroundTransparency = 1
                    ColorValueR.BorderSizePixel = 0
                    ColorValueR.ClipsDescendants = true
                    ColorValueR.Position = UDim2.new(0, 7, 0, 127)
                    ColorValueR.Size = UDim2.new(0, 50, 0, 16)
                    ColorValueR.ZIndex = 2 + ColorPickerZIndex
                    ColorValueR.Font = Enum.Font.SourceSansBold
                    ColorValueR.Text = "R: 000"
                    ColorValueR.TextColor3 = Color3.new(1, 1, 1)
                    ColorValueR.TextSize = 14
    
                    ColorValueRRound.Name = "ColorValueRRound"
                    ColorValueRRound.Parent = ColorValueR
                    ColorValueRRound.Active = true
                    ColorValueRRound.AnchorPoint = Vector2.new(0.5, 0.5)
                    ColorValueRRound.BackgroundColor3 = Color3.new(1, 1, 1)
                    ColorValueRRound.BackgroundTransparency = 1
                    ColorValueRRound.Position = UDim2.new(0.5, 0, 0.5, 0)
                    ColorValueRRound.Selectable = true
                    ColorValueRRound.Size = UDim2.new(1, 0, 1, 0)
                    ColorValueRRound.Image = "rbxassetid://3570695787"
                    ColorValueRRound.ImageColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                    ColorValueRRound.ScaleType = Enum.ScaleType.Slice
                    ColorValueRRound.SliceCenter = Rect.new(100, 100, 100, 100)
                    ColorValueRRound.SliceScale = 0.04
                    ColorValueRRound.ZIndex = 1 + ColorPickerZIndex
    
                    ColorValueG.Name = "ColorValueG"
                    ColorValueG.Parent = ColorPickerMain
                    ColorValueG.BackgroundColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                    ColorValueG.BackgroundTransparency = 1
                    ColorValueG.BorderSizePixel = 0
                    ColorValueG.ClipsDescendants = true
                    ColorValueG.Position = UDim2.new(0, 60, 0, 127)
                    ColorValueG.Size = UDim2.new(0, 51, 0, 16)
                    ColorValueG.ZIndex = 2 + ColorPickerZIndex
                    ColorValueG.Font = Enum.Font.SourceSansBold
                    ColorValueG.Text = "G: 000"
                    ColorValueG.TextColor3 = Color3.new(1, 1, 1)
                    ColorValueG.TextSize = 14
    
                    ColorValueGRound.Name = "ColorValueGRound"
                    ColorValueGRound.Parent = ColorValueG
                    ColorValueGRound.Active = true
                    ColorValueGRound.AnchorPoint = Vector2.new(0.5, 0.5)
                    ColorValueGRound.BackgroundColor3 = Color3.new(1, 1, 1)
                    ColorValueGRound.BackgroundTransparency = 1
                    ColorValueGRound.Position = UDim2.new(0.5, 0, 0.5, 0)
                    ColorValueGRound.Selectable = true
                    ColorValueGRound.Size = UDim2.new(1, 0, 1, 0)
                    ColorValueGRound.Image = "rbxassetid://3570695787"
                    ColorValueGRound.ImageColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                    ColorValueGRound.ScaleType = Enum.ScaleType.Slice
                    ColorValueGRound.SliceCenter = Rect.new(100, 100, 100, 100)
                    ColorValueGRound.SliceScale = 0.04
                    ColorValueGRound.ZIndex = 1 + ColorPickerZIndex
    
                    ColorValueB.Name = "ColorValueB"
                    ColorValueB.Parent = ColorPickerMain
                    ColorValueB.BackgroundColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                    ColorValueB.BackgroundTransparency = 1
                    ColorValueB.BorderSizePixel = 0
                    ColorValueB.ClipsDescendants = true
                    ColorValueB.Position = UDim2.new(0, 114, 0, 127)
                    ColorValueB.Size = UDim2.new(0, 50, 0, 16)
                    ColorValueB.ZIndex = 2 + ColorPickerZIndex
                    ColorValueB.Font = Enum.Font.SourceSansBold
                    ColorValueB.Text = "B: 000"
                    ColorValueB.TextColor3 = Color3.new(1, 1, 1)
                    ColorValueB.TextSize = 14
    
                    ColorValueBRound.Name = "ColorValueBRound"
                    ColorValueBRound.Parent = ColorValueB
                    ColorValueBRound.Active = true
                    ColorValueBRound.AnchorPoint = Vector2.new(0.5, 0.5)
                    ColorValueBRound.BackgroundColor3 = Color3.new(1, 1, 1)
                    ColorValueBRound.BackgroundTransparency = 1
                    ColorValueBRound.Position = UDim2.new(0.5, 0, 0.5, 0)
                    ColorValueBRound.Selectable = true
                    ColorValueBRound.Size = UDim2.new(1, 0, 1, 0)
                    ColorValueBRound.Image = "rbxassetid://3570695787"
                    ColorValueBRound.ImageColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                    ColorValueBRound.ScaleType = Enum.ScaleType.Slice
                    ColorValueBRound.SliceCenter = Rect.new(100, 100, 100, 100)
                    ColorValueBRound.SliceScale = 0.04
                    ColorValueBRound.ZIndex = 1 + ColorPickerZIndex
    
                    RoundHueHolder.Name = "RoundHueHolder"
                    RoundHueHolder.Parent = ColorPickerMain
                    RoundHueHolder.BackgroundColor3 = Color3.new(1, 1, 1)
                    RoundHueHolder.BackgroundTransparency = 1
                    RoundHueHolder.ClipsDescendants = true
                    RoundHueHolder.Position = UDim2.new(0, 136, 0, 6)
                    RoundHueHolder.Size = UDim2.new(0, 28, 0, 114)
                    RoundHueHolder.ZIndex = 2 + ColorPickerZIndex
                    RoundHueHolder.Image = "rbxassetid://4695575676"
                    RoundHueHolder.ImageColor3 = Color3.new(0.137255, 0.137255, 0.137255)
                    RoundHueHolder.ScaleType = Enum.ScaleType.Slice
                    RoundHueHolder.SliceCenter = Rect.new(128, 128, 128, 128)
                    RoundHueHolder.SliceScale = 0.05
    
                    ColorHue.Name = "ColorHue"
                    ColorHue.Parent = RoundHueHolder
                    ColorHue.BackgroundColor3 = Color3.new(1, 1, 1)
                    ColorHue.BackgroundTransparency = 1
                    ColorHue.BorderSizePixel = 0
                    ColorHue.Size = UDim2.new(0, 28, 0, 114)
                    ColorHue.Image = "http://www.roblox.com/asset/?id=4801885250"
                    ColorHue.ScaleType = Enum.ScaleType.Crop
                    ColorHue.ZIndex = 1 + ColorPickerZIndex
    
                    HueMarker.Name = "HueMarker"
                    HueMarker.Parent = RoundHueHolder
                    HueMarker.BackgroundColor3 = Color3.new(0.294118, 0.294118, 0.294118)
                    HueMarker.BorderSizePixel = 0
                    HueMarker.Position = UDim2.new(-0.25, 0, 0, 0)
                    HueMarker.Size = UDim2.new(0, 42, 0, 5)
                    HueMarker.ZIndex = 1 + ColorPickerZIndex
    
                    RoundSaturationHolder.Name = "RoundSaturationHolder"
                    RoundSaturationHolder.Parent = ColorPickerMain
                    RoundSaturationHolder.BackgroundColor3 = Color3.new(1, 1, 1)
                    RoundSaturationHolder.BackgroundTransparency = 1
                    RoundSaturationHolder.ClipsDescendants = true
                    RoundSaturationHolder.Position = UDim2.new(0, 7, 0, 6)
                    RoundSaturationHolder.Size = UDim2.new(0, 122, 0, 114)
                    RoundSaturationHolder.ZIndex = 2 + ColorPickerZIndex
                    RoundSaturationHolder.Image = "rbxassetid://4695575676"
                    RoundSaturationHolder.ImageColor3 = Color3.new(0.137255, 0.137255, 0.137255)
                    RoundSaturationHolder.ScaleType = Enum.ScaleType.Slice
                    RoundSaturationHolder.SliceCenter = Rect.new(128, 128, 128, 128)
                    RoundSaturationHolder.SliceScale = 0.05
    
                    ColorSelector.Name = "ColorSelector"
                    ColorSelector.Parent = RoundSaturationHolder
                    ColorSelector.BackgroundColor3 = presetcolor
                    ColorSelector.BorderSizePixel = 0
                    ColorSelector.Size = UDim2.new(0, 122, 0, 114)
                    ColorSelector.Image = "rbxassetid://4805274903"
                    ColorSelector.ZIndex = 1 + ColorPickerZIndex
    
                    SaturationMarker.Name = "SaturationMarker"
                    SaturationMarker.Parent = RoundSaturationHolder
                    SaturationMarker.BackgroundColor3 = Color3.new(1, 1, 1)
                    SaturationMarker.BackgroundTransparency = 1
                    SaturationMarker.Size = UDim2.new(0, 0, 0, 0)
                    SaturationMarker.Image = "http://www.roblox.com/asset/?id=4805639000"
                    SaturationMarker.ZIndex = 1 + ColorPickerZIndex
    
                    local function SetRGBValues()
                        local RedValue, GreenValue, BlueValue = ColorPickerToggle.ImageColor3.r * 255, ColorPickerToggle.ImageColor3.g * 255, ColorPickerToggle.ImageColor3.b * 255
    
                        ColorValueR.Text = ("R: " .. math.floor(RedValue))
                        ColorValueG.Text = ("G: " .. math.floor(GreenValue))
                        ColorValueB.Text = ("B: " .. math.floor(BlueValue))
                    end
    
                    SetRGBValues()
    
                    ColorPickerToggle.MouseButton1Down:Connect(function()
                        if not ColorPickerOpen then
                            ColorPickerOpen = true
                            Body.ClipsDescendants = false
                            Section1Holder.ClipsDescendants = false
    
                            TweenService:Create(ColorPickerMain, TweenInfo.new(0.75, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 171, 0, 175)}):Play()
                        elseif ColorPickerOpen then
                            ColorPickerOpen = false
                            TweenService:Create(ColorPickerMain, TweenInfo.new(0.75, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 0, 0, 175)}):Play()
                        end
                    end)
    
                    local ColorData = {
                        H = 1;
                        S = 1;
                        V = 1
                    }
    
                    local Connection1 = nil
                    local Connection2 = nil
    
                    local function GetXY(frame)
                        local X, Y = Mouse.X - frame.AbsolutePosition.X, Mouse.Y - frame.AbsolutePosition.Y
                        local MaxX, MaxY = frame.AbsoluteSize.X, frame.AbsoluteSize.Y
                        X = math.clamp(X, 0, MaxX)
                        Y = math.clamp(Y, 0, MaxY)
                        return X / MaxX, Y / MaxY
                    end
    
                    local function GetY(frame)
                        local Y2 = Mouse.Y - frame.AbsolutePosition.Y
                        MaxY2 = frame.AbsoluteSize.Y
                        Y2 = math.clamp(Y2, -10, MaxY2)
                        return Y2 / MaxY2
                    end
    
                    local function Update()
                        SetRGBValues()
    
                        Color = Color3.fromHSV(ColorData.H, ColorData.S, ColorData.V)
    
                        ColorPickerToggle.ImageColor3 = Color
                        ColorSelector.BackgroundColor3 = Color3.fromHSV(ColorData.H, 1, 1)
                        action(ColorPickerToggle.ImageColor3)
                    end
    
                    ColorSelector.MouseLeave:Connect(function()
                        if Connection1 then
                            Connection1:Disconnect()
                            Connection1 = nil
                        end
                        if Connection2 then
                            Connection2:Disconnect()
                            Connection2 = nil
                        end
                    end)
    
                    ColorHue.MouseLeave:Connect(function()
                        if Connection1 then
                            Connection1:Disconnect()
                            Connection1 = nil
                        end
                        if Connection2 then
                            Connection2:Disconnect()
                            Connection2 = nil
                        end
                    end)
    
                    RainbowToggleButton.MouseButton1Down:Connect(function()
                        if not RainbowColorMode then
                            RainbowColorMode = true
                            TweenService:Create(RainbowToggleButton, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {ImageTransparency = 0}):Play()
                        elseif RainbowColorMode then
                            RainbowColorMode = false
                            TweenService:Create(RainbowToggleButton, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {ImageTransparency = 1}):Play()
                        end
    
                        while RainbowColorMode do
                            RainbowColor = Color3.fromHSV(RainbowModeColorValue, 1, 1)
    
                            ColorPickerToggle.ImageColor3 = RainbowColor
                            ColorSelector.BackgroundColor3 = RainbowColor
    
                            action(RainbowColor)
                            SetRGBValues()
                            wait()
                        end
                    end)
    
                    ColorSelector.InputBegan:Connect(function(input)
                        if input.UserInputType == Enum.UserInputType.MouseButton1 then
                            if not RainbowColorMode then
                                if Connection1 then
                                    Connection1:Disconnect()
                                end
                                Connection1 = RunService.RenderStepped:Connect(function()
                                    local X, Y = GetXY(RoundSaturationHolder)
    
                                    SaturationMarker.Position = UDim2.new(X, 0, Y, 0)
                                    ColorData.S = X
                                    ColorData.V = 1 - Y
                                    Update()
                                end)
                            end
                        end
                    end)
    
                    ColorSelector.InputEnded:Connect(function(input)
                        if input.UserInputType == Enum.UserInputType.MouseButton1 then
                            if Connection1 then
                                Connection1:Disconnect()
                            end
                        end
                    end)
    
                    ColorHue.InputBegan:Connect(function(input)
                        if input.UserInputType == Enum.UserInputType.MouseButton1 then
                            if not RainbowColorMode then
                                if Connection2 then
                                    Connection2:Disconnect()
                                end
    
                                Connection2 = RunService.RenderStepped:Connect(function()
                                    local X, Y = GetXY(RoundHueHolder)
                                    local Y2 = GetY(RoundHueHolder)
    
                                    ColorData.H = 1 - Y
                                    TweenService:Create(HueMarker, TweenInfo.new(0.25, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Position = UDim2.new(-0.25, 0, Y2, 0)}):Play()
                                    Update()
                                end)
                            end
                        end
                    end)
    
                    ColorHue.InputEnded:Connect(function(input)
                        if input.UserInputType == Enum.UserInputType.MouseButton1 then
                            if Connection2 then
                                Connection2:Disconnect()
                            end
                        end
                    end)
    
                    SectionToggle.MouseButton1Down:Connect(function()
                        if not IsSectionOpen then
                            Body.ClipsDescendants = true
                            Section1Holder.ClipsDescendants = true
    
                            ExtendSectionSize(30)
                            ExtendBodySize(30)
                        elseif IsSectionOpen then
                            ColorPickerOpen = false
                            TweenService:Create(ColorPickerMain, TweenInfo.new(0.75, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 0, 0, 175)}):Play()
    
                            Body.ClipsDescendants = true
                            Section1Holder.ClipsDescendants = true
    
                            UnExtendSectionSize(30)
                            UnExtendBodySize(30)
                        end
                    end)
    
                    WindowToggle.MouseButton1Down:Connect(function()
                        ColorPickerOpen = false
                        TweenService:Create(ColorPickerMain, TweenInfo.new(0.75, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 0, 0, 175)}):Play()
    
                        Body.ClipsDescendants = true
                        Section1Holder.ClipsDescendants = true
    
                        if not IsTabOpen then
                            if IsSectionOpen then
                                ExtendBodySize(30)
                                TweenService:Create(SectionToggle, TweenInfo.new(0, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = 360}):Play()
                                TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
                            elseif not IsSectionOpen then
                                TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
                            end
    
                            
                        elseif IsTabOpen then
                            if IsSectionOpen then
                                UnExtendBodySize(30)
                                TweenService:Create(SectionToggle, TweenInfo.new(0, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = 0}):Play()
                                TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                            elseif not IsSectionOpen then
                                TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                            end
                        end
    
                        TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 1}):Play()
                
                        SectionToggle.Visible = false
                
                        repeat wait() until SectionToggle.TextTransparency == 1
                        SectionToggle.Visible = true
                        TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
                    end)
                end
    
                function LibraryElements:CreateButton(name, action)
                    local ButtonHolder = Instance.new("Frame")
                    local Button = Instance.new("TextButton")
                    local ButtonRound = Instance.new("ImageLabel")
    
                    local ButtonName = RemoveSpaces(name)
    
                    ButtonHolder.Name = (ButtonName .. "ButtonHolder")
                    ButtonHolder.Parent = Section1Holder
                    ButtonHolder.BackgroundColor3 = Color3.new(0.137255, 0.137255, 0.137255)
                    ButtonHolder.BorderSizePixel = 0
                    ButtonHolder.Size = UDim2.new(0, 170, 0, 30)
                    
                    Button.Name = "Button"
                    Button.Parent = ButtonHolder
                    Button.BackgroundColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                    Button.BackgroundTransparency = 1
                    Button.BorderSizePixel = 0
                    Button.Position = UDim2.new(0.052941177, 0, 0, 0)
                    Button.Size = UDim2.new(0, 153, 0, 24)
                    Button.ZIndex = 2
                    Button.AutoButtonColor = false
                    Button.Font = Enum.Font.SourceSansBold
                    Button.Text = name
                    Button.TextColor3 = Color3.new(1, 1, 1)
                    Button.TextSize = 14
                    
                    ButtonRound.Name = "ButtonRound"
                    ButtonRound.Parent = Button
                    ButtonRound.Active = true
                    ButtonRound.AnchorPoint = Vector2.new(0.5, 0.5)
                    ButtonRound.BackgroundColor3 = Color3.new(1, 1, 1)
                    ButtonRound.BackgroundTransparency = 1
                    ButtonRound.BorderSizePixel = 0
                    ButtonRound.ClipsDescendants = true
                    ButtonRound.Position = UDim2.new(0.5, 0, 0.5, 0)
                    ButtonRound.Selectable = true
                    ButtonRound.Size = UDim2.new(1, 0, 1, 0)
                    ButtonRound.Image = "rbxassetid://3570695787"
                    ButtonRound.ImageColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                    ButtonRound.ScaleType = Enum.ScaleType.Slice
                    ButtonRound.SliceCenter = Rect.new(100, 100, 100, 100)
                    ButtonRound.SliceScale = 0.04
    
                    Button.MouseButton1Down:Connect(function()
                        action(Button)
                    end)
                    
                    SectionToggle.MouseButton1Down:Connect(function()
                        if not IsSectionOpen then
                            ExtendSectionSize(30)
                            ExtendBodySize(30)
                        elseif IsSectionOpen then
                            UnExtendSectionSize(30)
                            UnExtendBodySize(30)
                        end
                    end)
    
                    WindowToggle.MouseButton1Down:Connect(function()
                        if not IsTabOpen then
                            if IsSectionOpen then
                                ExtendBodySize(30)
                                TweenService:Create(SectionToggle, TweenInfo.new(0, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = 360}):Play()
                                TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
                            elseif not IsSectionOpen then
                                TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
                            end
    
                            
                        elseif IsTabOpen then
                            if IsSectionOpen then
                                UnExtendBodySize(30)
                                TweenService:Create(SectionToggle, TweenInfo.new(0, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = 0}):Play()
                                TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                            elseif not IsSectionOpen then
                                TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                            end
                        end
    
                        TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 1}):Play()
                
                        SectionToggle.Visible = false
                
                        repeat wait() until SectionToggle.TextTransparency == 1
                        SectionToggle.Visible = true
                        TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
                    end)
                end
    
                function LibraryElements:CreateTextbox(name, action)
                    local TextBoxHolder = Instance.new("Frame")
                    local TextBox = Instance.new("TextBox")
                    local TextBoxRound = Instance.new("ImageLabel")
    
                    local TextBoxName = RemoveSpaces(name)
    
                    TextBoxHolder.Name = (TextBoxName .. "TextBoxHolder")
                    TextBoxHolder.Parent = Section1Holder
                    TextBoxHolder.BackgroundColor3 = Color3.new(0.137255, 0.137255, 0.137255)
                    TextBoxHolder.BorderSizePixel = 0
                    TextBoxHolder.Size = UDim2.new(0, 170, 0, 30)
                    
                    TextBox.Parent = TextBoxHolder
                    TextBox.BackgroundColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                    TextBox.BackgroundTransparency = 1
                    TextBox.ClipsDescendants = true
                    TextBox.Position = UDim2.new(0.0529999994, 0, 0, 0)
                    TextBox.Size = UDim2.new(0, 153, 0, 24)
                    TextBox.ZIndex = 2
                    TextBox.Font = Enum.Font.SourceSansBold
                    TextBox.PlaceholderText = name
                    TextBox.Text = ""
                    TextBox.TextColor3 = Color3.new(1, 1, 1)
                    TextBox.TextSize = 14
                    
                    TextBoxRound.Name = "TextBoxRound"
                    TextBoxRound.Parent = TextBox
                    TextBoxRound.Active = true
                    TextBoxRound.AnchorPoint = Vector2.new(0.5, 0.5)
                    TextBoxRound.BackgroundColor3 = Color3.new(1, 1, 1)
                    TextBoxRound.BackgroundTransparency = 1
                    TextBoxRound.BorderSizePixel = 0
                    TextBoxRound.ClipsDescendants = true
                    TextBoxRound.Position = UDim2.new(0.5, 0, 0.5, 0)
                    TextBoxRound.Selectable = true
                    TextBoxRound.Size = UDim2.new(1, 0, 1, 0)
                    TextBoxRound.Image = "rbxassetid://3570695787"
                    TextBoxRound.ImageColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                    TextBoxRound.ScaleType = Enum.ScaleType.Slice
                    TextBoxRound.SliceCenter = Rect.new(100, 100, 100, 100)
                    TextBoxRound.SliceScale = 0.04
    
                    TextBox.FocusLost:Connect(function(enterPressed)
                        if enterPressed then
                            action(TextBox.Text)
                        end
                    end)
    
                    SectionToggle.MouseButton1Down:Connect(function()
                        if not IsSectionOpen then
                            ExtendSectionSize(30)
                            ExtendBodySize(30)
                        elseif IsSectionOpen then
                            UnExtendSectionSize(30)
                            UnExtendBodySize(30)
                        end
                    end)
    
                    WindowToggle.MouseButton1Down:Connect(function()
                        if not IsTabOpen then
                            if IsSectionOpen then
                                ExtendBodySize(30)
                                TweenService:Create(SectionToggle, TweenInfo.new(0, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = 360}):Play()
                                TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
                            elseif not IsSectionOpen then
                                TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
                            end
    
                            
                        elseif IsTabOpen then
                            if IsSectionOpen then
                                UnExtendBodySize(30)
                                TweenService:Create(SectionToggle, TweenInfo.new(0, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = 0}):Play()
                                TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                            elseif not IsSectionOpen then
                                TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                            end
                        end
    
                        TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 1}):Play()
                
                        SectionToggle.Visible = false
                
                        repeat wait() until SectionToggle.TextTransparency == 1
                        SectionToggle.Visible = true
                        TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
                    end)
                end
    
                function LibraryElements:CreateDropdown(name, options, presetoption, action)
                    local DropdownHolder = Instance.new("Frame")
                    local DropdownTitle = Instance.new("TextLabel")
                    local DropdownRound = Instance.new("ImageLabel")
                    local DropdownToggle = Instance.new("TextButton")
                    local DropdownMain = Instance.new("ImageLabel")
                    local ScrollingFrame = Instance.new("ScrollingFrame")
                    local ButtonLayout = Instance.new("UIListLayout")
    
                    local DropdownName = RemoveSpaces(name)
    
                    local StartingCanvasSize = 1
                    local StartScrollingFrame = false
    
                    local SelectedOptionName = options[presetoption]
                    local NumberOfOptions = 0
                    local DropdownYSize = 0
                    local IsDropdownWindowOpen = false
    
                    DropdownHolder.Name = (DropdownName .. "DropdownHolder")
                    DropdownHolder.Parent = Section1Holder
                    DropdownHolder.BackgroundColor3 = Color3.new(0.137255, 0.137255, 0.137255)
                    DropdownHolder.BorderSizePixel = 0
                    DropdownHolder.Size = UDim2.new(0, 170, 0, 30)
                    
                    DropdownTitle.Name = "DropdownTitle"
                    DropdownTitle.Parent = DropdownHolder
                    DropdownTitle.BackgroundColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                    DropdownTitle.BackgroundTransparency = 1
                    DropdownTitle.BorderSizePixel = 0
                    DropdownTitle.Position = UDim2.new(0.0529999994, 0, 0, 0)
                    DropdownTitle.Size = UDim2.new(0, 153, 0, 24)
                    DropdownTitle.ZIndex = 2
                    DropdownTitle.Font = Enum.Font.SourceSansBold
                    DropdownTitle.Text = SelectedOptionName
                    DropdownTitle.TextColor3 = Color3.new(1, 1, 1)
                    DropdownTitle.TextSize = 14
                    
                    DropdownRound.Name = "DropdownRound"
                    DropdownRound.Parent = DropdownTitle
                    DropdownRound.Active = true
                    DropdownRound.AnchorPoint = Vector2.new(0.5, 0.5)
                    DropdownRound.BackgroundColor3 = Color3.new(1, 1, 1)
                    DropdownRound.BackgroundTransparency = 1
                    DropdownRound.BorderSizePixel = 0
                    DropdownRound.ClipsDescendants = true
                    DropdownRound.Position = UDim2.new(0.5, 0, 0.5, 0)
                    DropdownRound.Selectable = true
                    DropdownRound.Size = UDim2.new(1, 0, 1, 0)
                    DropdownRound.Image = "rbxassetid://3570695787"
                    DropdownRound.ImageColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                    DropdownRound.ScaleType = Enum.ScaleType.Slice
                    DropdownRound.SliceCenter = Rect.new(100, 100, 100, 100)
                    DropdownRound.SliceScale = 0.04
    
                    DropdownToggle.Name = "DropdownToggle"
                    DropdownToggle.Parent = DropdownTitle
                    DropdownToggle.BackgroundColor3 = Color3.new(1, 1, 1)
                    DropdownToggle.BackgroundTransparency = 1
                    DropdownToggle.Position = UDim2.new(0.816928029, 0, 0, 0)
                    DropdownToggle.Size = UDim2.new(0, 28, 0, 24)
                    DropdownToggle.AutoButtonColor = false
                    DropdownToggle.Font = Enum.Font.SourceSansBold
                    DropdownToggle.Text = ">"
                    DropdownToggle.TextColor3 = Color3.new(1, 1, 1)
                    DropdownToggle.TextSize = 15
                    
                    DropdownMain.Name = "DropdownMain"
                    DropdownMain.Parent = DropdownTitle
                    DropdownMain.BackgroundColor3 = Color3.new(0.137255, 0.137255, 0.137255)
                    DropdownMain.BackgroundTransparency = 1
                    DropdownMain.ClipsDescendants = true
                    DropdownMain.Position = UDim2.new(1.09275186, 0, -0.0336658955, 0)
                    DropdownMain.Size = UDim2.new(0, 0, 0, DropdownYSize)
                    DropdownMain.Image = "rbxassetid://3570695787"
                    DropdownMain.ImageColor3 = Color3.new(0.137255, 0.137255, 0.137255)
                    DropdownMain.ScaleType = Enum.ScaleType.Slice
                    DropdownMain.SliceCenter = Rect.new(100, 100, 100, 100)
                    DropdownMain.SliceScale = 0.04
    
                    ScrollingFrame.Parent = DropdownMain
                    ScrollingFrame.BackgroundColor3 = Color3.new(1, 1, 1)
                    ScrollingFrame.BackgroundTransparency = 1
                    ScrollingFrame.BorderSizePixel = 0
                    ScrollingFrame.Size = UDim2.new(0, 153, 0, DropdownYSize)
                    ScrollingFrame.BottomImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
                    ScrollingFrame.CanvasSize = UDim2.new(0, 0, StartingCanvasSize, 0)
                    ScrollingFrame.ScrollBarThickness = 3
                    ScrollingFrame.TopImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
                    ScrollingFrame.ScrollingDirection = "Y"
    
                    ButtonLayout.Name = "ButtonLayout"
                    ButtonLayout.Parent = ScrollingFrame
                    ButtonLayout.SortOrder = Enum.SortOrder.LayoutOrder
    
                    for i, v in pairs(options) do
                        local DropdownOption = Instance.new("TextButton")
            
                        NumberOfOptions = NumberOfOptions + 1
    
                        local DropdownButtonName = RemoveSpaces(v)
    
                        DropdownOption.Name = (DropdownButtonName .. "Button")
                        DropdownOption.Parent = ScrollingFrame
                        DropdownOption.BackgroundColor3 = Color3.new(0.215686, 0.215686, 0.215686)
                        DropdownOption.BackgroundTransparency = 1
                        DropdownOption.BorderSizePixel = 0
                        DropdownOption.Position = UDim2.new(0, 0, 0, 0)
                        DropdownOption.Size = UDim2.new(0, 153, 0, 25)
                        DropdownOption.AutoButtonColor = false
                        DropdownOption.Font = Enum.Font.SourceSansBold
                        DropdownOption.Text = v
                        DropdownOption.TextColor3 = Color3.new(1, 1, 1)
                        DropdownOption.TextSize = 14
    
                        if NumberOfOptions <= 4 then
                            DropdownYSize = DropdownYSize + 25
                            DropdownMain.Size = UDim2.new(0, 0, 0, DropdownYSize)
                        elseif NumberOfOptions >= 4 then
                            StartScrollingFrame = true
                        end
    
                        if StartScrollingFrame then
                            StartingCanvasSize = StartingCanvasSize + 0.25
                            ScrollingFrame.CanvasSize = UDim2.new(0, 0, StartingCanvasSize, 0)
                        end
    
                        DropdownOption.InputBegan:Connect(function(input)
                            if input.UserInputType == Enum.UserInputType.MouseMovement then
                                TweenService:Create(DropdownOption, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 0.5}):Play()
                            end
                        end)
                            
                        DropdownOption.InputEnded:Connect(function(input)
                            if input.UserInputType == Enum.UserInputType.MouseMovement then
                                TweenService:Create(DropdownOption, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                            end
                        end)
    
                        DropdownOption.MouseButton1Down:Connect(function()
                            SelectedOptionName = v
                            action(v)
    
                            IsDropdownWindowOpen = false
    
                            DropdownToggle.Text = ">"
                            TweenService:Create(DropdownToggle, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = 0}):Play()
    
                            TweenService:Create(DropdownTitle, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextColor3 = Color3.new(1, 1, 1)}):Play()
                            DropdownTitle.Text = SelectedOptionName
    
                            TweenService:Create(ScrollingFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {ScrollBarImageTransparency = 1}):Play()
                            TweenService:Create(ScrollingFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 0, 0, DropdownYSize)}):Play()
    
                            TweenService:Create(DropdownMain, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 0, 0, DropdownYSize)}):Play()
                        end)
                    end
            
                    DropdownToggle.MouseButton1Down:Connect(function()
                        if IsDropdownWindowOpen then
                            IsDropdownWindowOpen = false
    
                            DropdownToggle.Text = ">"
                            TweenService:Create(DropdownToggle, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = 0}):Play()
    
                            TweenService:Create(DropdownTitle, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextColor3 = Color3.new(1, 1, 1)}):Play()
                            DropdownTitle.Text = SelectedOptionName
    
                            TweenService:Create(ScrollingFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {ScrollBarImageTransparency = 1}):Play()
                            TweenService:Create(ScrollingFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 0, 0, DropdownYSize)}):Play()
    
                            TweenService:Create(DropdownMain, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 0, 0, DropdownYSize)}):Play()
                        elseif not IsDropdownWindowOpen then
                            Body.ClipsDescendants = false
                            Section1Holder.ClipsDescendants = false
    
                            IsDropdownWindowOpen = true
    
                            DropdownToggle.Text = "<"
                            TweenService:Create(DropdownToggle, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = -360}):Play()
    
                            TweenService:Create(DropdownTitle, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextColor3 = Color3.new(0.698039, 0.698039, 0.698039)}):Play()
                            DropdownTitle.Text = name
    
                            TweenService:Create(ScrollingFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {ScrollBarImageTransparency = 0}):Play()
                            TweenService:Create(ScrollingFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 153, 0, DropdownYSize)}):Play()
    
                            TweenService:Create(DropdownMain, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 153, 0, DropdownYSize)}):Play()
                        end
                    end)
    
                    SectionToggle.MouseButton1Down:Connect(function()
                        if not IsSectionOpen then
                            ExtendSectionSize(30)
                            ExtendBodySize(30)
                        elseif IsSectionOpen then
                            IsDropdownWindowOpen = false
    
                            DropdownToggle.Text = ">"
                            TweenService:Create(DropdownToggle, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = 0}):Play()
    
                            TweenService:Create(DropdownTitle, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextColor3 = Color3.new(1, 1, 1)}):Play()
                            DropdownTitle.Text = SelectedOptionName
    
                            TweenService:Create(ScrollingFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {ScrollBarImageTransparency = 1}):Play()
                            TweenService:Create(ScrollingFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 0, 0, 0)}):Play()
    
                            TweenService:Create(DropdownMain, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 0, 0, DropdownYSize)}):Play()
                            
                            Body.ClipsDescendants = true
                            Section1Holder.ClipsDescendants = true
    
                            UnExtendSectionSize(30)
                            UnExtendBodySize(30)
                        end
                    end)
    
                    WindowToggle.MouseButton1Down:Connect(function()
                        IsDropdownWindowOpen = false
    
                        DropdownToggle.Text = ">"
                        TweenService:Create(DropdownToggle, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = 0}):Play()
    
                        TweenService:Create(DropdownTitle, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextColor3 = Color3.new(1, 1, 1)}):Play()
    
                        DropdownTitle.Text = SelectedOptionName
                        TweenService:Create(ScrollingFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {ScrollBarImageTransparency = 1}):Play()
                        TweenService:Create(ScrollingFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 0, 0, DropdownYSize)}):Play()
    
                        TweenService:Create(DropdownMain, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 0, 0, DropdownYSize)}):Play()
                        
                        Body.ClipsDescendants = true
                        Section1Holder.ClipsDescendants = true
    
                        if not IsTabOpen then
                            if IsSectionOpen then
                                ExtendBodySize(30)
                                TweenService:Create(SectionToggle, TweenInfo.new(0, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = -360}):Play()
                                TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
                            elseif not IsSectionOpen then
                                TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
                            end
    
                            
                        elseif IsTabOpen then
                            if IsSectionOpen then
                                UnExtendBodySize(30)
                                TweenService:Create(SectionToggle, TweenInfo.new(0, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = 0}):Play()
                                TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                            elseif not IsSectionOpen then
                                TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                            end
                        end
    
                        TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 1}):Play()
                
                        SectionToggle.Visible = false
                
                        repeat wait() until SectionToggle.TextTransparency == 1
                        SectionToggle.Visible = true
                        TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
                    end)
                end
    
                return LibraryElements
            end
    
            return Sections
        end
        function CheckRig()
            if plr.Character then
                local Humanoid = plr.Character:WaitForChild('Humanoid')
                if Humanoid.RigType == Enum.HumanoidRigType.R15 then
                    return 'R15'
                else
                    return 'R6'
                end
            end
        end
        function doTheMagik()
            local Character = plr.Character
            local StoredCF = Character.HumanoidRootPart.CFrame
            if CheckRig() == 'R6' then
                local Clone = Character.HumanoidRootPart:Clone()
                Character.HumanoidRootPart:Destroy()
                Clone.Parent = Character
            else
                local Clone = Character.LowerTorso.Root:Clone()
                Character.LowerTorso.Root:Destroy()
                Clone.Parent = Character.LowerTorso
            end
            Character.HumanoidRootPart.Transparency = 0.5
        end
        mt = getrawmetatable(game)
        setreadonly(mt,false)
        old = mt.__namecall
        mt.__namecall = newcclosure(function(self,...)
            local args = {...}
            if getnamecallmethod() == "InvokeServer" and args[1] == "ReturnCanTP" then
                return true
            end
            return old(self,...)
        end)
        plr = game:GetService("Players").LocalPlayer
        local mobs = {"Thug","Corrupt Police","Alpha Thug","Zombie Henchman","Vampire","Dio","Jotaro Kujo"}
        local af = false
        local aq = false
        local noclip = false
        local farmItems = false
        local useStand
        local mob = ""
        local w = Library:NewWindow("Your Bizzare Adventure")
        local main = w:NewSection("Farming Settings")
        main:CreateToggle("Farm Mobs",function(bool)
            af = bool
        end)
        main:CreateToggle("Auto Quest",function(bool)
            aq = bool
        end)
        main:CreateToggle("Use Stand",function(bool)
            useStand = bool
        end)
        main:CreateDropdown("Mobs",mobs,1,function(a)
            mob = a
        end)
        main:CreateToggle("Farm Items",function(bool)
            farmItems = bool
        end)
        local misc = w:NewSection("Miscellaneous")
        misc:CreateToggle("Noclip",function(bool)
            noclip = bool
        end)
        misc:CreateButton("Hide Character",function()
            local oldPos = plr.Character.HumanoidRootPart.CFrame
            local Part = Instance.new("Part",workspace)
            Part.CFrame = plr.Character.HumanoidRootPart.CFrame*CFrame.new(0,1000,0)
            Part.Anchored = true
            Part.Size = Vector3.new(500,2,500)
            Part.CanCollide = true
            plr.Character:SetPrimaryPartCFrame(Part.CFrame*CFrame.new(0,3,0))
            Part.Transparency = 1
            wait(1)
            doTheMagik()
            wait(1)
            plr.Character.HumanoidRootPart.CFrame = oldPos
        end)
        misc:CreateButton("Destroy Gui",function()
            game:GetService("CoreGui").CoastifiedLibrary:Destroy()
        end)
        spawn(function()
            while game:GetService("RunService").Heartbeat:wait() do
                if af or noclip then
                    pcall(function()
                        plr.Character.Humanoid:ChangeState(11)
                    end)
                end
            end
        end)
        local distance = 3
        function autofarm()
            pcall(function()
                for i,v in pairs(workspace.Living:GetChildren()) do
                    if v.Name == mob and v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Health") then
                        if tonumber(v.Health.Value) > 0 then
                            repeat wait()
                                if useStand then
                                    distance = 7
                                    if plr.Character.SummonedStand.Value == false then
                                        plr.Character.RemoteEvent:FireServer("InputBegan",{["Input"] = Enum.UserInputType.MouseButton1})
                                        plr.Character.RemoteEvent:FireServer("InputEnded",{["Input"] = Enum.UserInputType.MouseButton1})
                                    end
                                elseif not useStand then
                                    distance = 3
                                end
                                plr.Character:SetPrimaryPartCFrame(v.HumanoidRootPart.CFrame - v.HumanoidRootPart.CFrame.lookVector * distance)
                                plr.Character.RemoteEvent:FireServer("InputBegan",{["Input"] = Enum.UserInputType.MouseButton1})
                                plr.Character.RemoteEvent:FireServer("InputEnded",{["Input"] = Enum.UserInputType.MouseButton1})
                            until not af or tonumber(v.Health.Value) <= 0 or v.HumanoidRootPart == nil
                        end
                    end
                end
            end)
        end
        local cd
        local dialogue
        local questName
        function checkQuest()
            if mob == "Thug" then
                cd = workspace.Dialogues["Officer Sam [Lvl. 1+]"].TalkBox.ClickDetector
                dialogue = {["Option"] = "Option1",["Dialogue"] = "Dialogue5",["NPC"] = "Officer Sam"}
                questName = "Take down 5 thugs"
            elseif mob == "Corrupt Police" then
                dialogue = {["Dialogue"] = 'Dialogue2',["NPC"] = 'Deputy Bertrude',["Option"] = 'Option1'};
                questName = "Take down 5 corrupt police"
                cd = workspace.Dialogues["Deputy Bertrude [Lvl. 10+]"].TalkBox.ClickDetector
            elseif mob == "Alpha Thug" then
                dialogue = {["Dialogue"] = 'Dialogue7',["NPC"] = "Abbacchio's Partner",["Option"] = 'Option1'};
                questName = "Take down 5 alpha thugs"
                cd = workspace.Dialogues["Abbacchio's Partner [Lvl 15+]"].TalkBox.ClickDetector
            elseif mob == "Zombie Henchman" then
                dialogue = {["Dialogue"] = 'Dialogue4',["NPC"] = 'Dracula',["Option"] = 'Option1'};
                questName = "Take down 3 zombie henchmans"
                cd = workspace.Dialogues["Dracula [Lvl. 20+]"].TalkBox.ClickDetector
            elseif mob == "Vampire" then
                dialogue = {["Dialogue"] = 'Dialogue4',["NPC"] = 'Zeppeli',["Option"] = 'Option1'};
                questName = "Take down 3 vampires"
                cd = workspace.Dialogues["Zeppeli [Lvl. 25+]"].TalkBox.ClickDetector
            elseif mob == "Dio" then
                dialogue = {["Dialogue"] = 'Dialogue5',["NPC"] = 'Doppio',["Option"] = 'Option1'};
                questName = "Kill Dio"
                cd = workspace.Dialogues["Doppio [Lvl. 30+]"].TalkBox.ClickDetector
            elseif mob == "Jotaro Kujo" then
                dialogue = {["Dialogue"] = 'Dialogue4',["NPC"] = 'Dio',["Option"] = 'Option1'};
                questName = "Defeat Jotaro"
                cd = workspace.Dialogues["Dio [Lvl. 35+]"].TalkBox.ClickDetector
            end
            if not plr.PlayerGui.HUD.Main.Frames.Quest.Quests:FindFirstChild(questName) then
                fireclickdetector(cd)
                plr.PlayerGui.ChildAdded:wait()
                if plr.PlayerGui:FindFirstChild("Dialogue") then
                    plr.Character.RemoteEvent:FireServer("EndDialogue",dialogue)
                end
            end
        end
        spawn(function()
            while wait() do
                if af then
                    autofarm()
                end
            end
        end)
        spawn(function()
            while wait() do
                if aq then
                    checkQuest()
                end
            end
        end)
        spawn(function()
            while wait() do
                if farmItems then
                    pcall(function()
                        for i,v in pairs(workspace.Map:GetDescendants()) do
                            if v:IsA("ClickDetector") and v.Parent:IsA("Model") then
                                    if farmItems then
                                        plr.Character:SetPrimaryPartCFrame(v.Parent.PrimaryPart.CFrame - v.Parent.PrimaryPart.CFrame.lookVector * 4)
                                        if (plr.Character.HumanoidRootPart.Position - v.Parent.PrimaryPart.Position).Magnitude < 15 then
                                            wait(.2)
                                            fireclickdetector(v)					
                                        end
                                    end
                                    wait(math.random(50,100)/100)
                            end
                        end
                    end)
                end
            end
        end)
    end
    function roghoul()
    -- Feel free to edit, modify or use!

    local UserInputService = game:GetService("UserInputService")
    local TweenService = game:GetService("TweenService")
    local RunService = game:GetService("RunService")

    local Mouse = game:GetService("Players").LocalPlayer:GetMouse()

    local RainbowModeColorValue = 0
    local ColorPickerZIndex = 1

    local RainbowModeColorValue = 0
    local ColorPickerZIndex = 1

    local WindowPosition = 0

    local CoastifiedLibrary = Instance.new("ScreenGui")
    local Container = Instance.new("Frame")

    CoastifiedLibrary.Name = "CoastifiedLibrary"
    CoastifiedLibrary.Parent = game:GetService("CoreGui")

    Container.Name = "Container"
    Container.Parent = CoastifiedLibrary
    Container.BackgroundColor3 = Color3.new(1, 1, 1)
    Container.BackgroundTransparency = 1
    Container.Size = UDim2.new(0, 100, 0, 100)

    UserInputService.InputBegan:Connect(function(input)
        if input.KeyCode == Enum.KeyCode.RightControl then
            CoastifiedLibrary.Enabled = not CoastifiedLibrary.Enabled
        end
    end)

    function Dragging(instancename)
        local dragging = nil
        local dragInput = nil
        local dragStart = nil
        local startPos = nil

        local function update(input)
            local delta = input.Position - dragStart
            instancename.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end

        instancename.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                dragging = true
                dragStart = input.Position
                startPos = instancename.Position
                
                input.Changed:Connect(function()
                    if input.UserInputState == Enum.UserInputState.End then
                        dragging = false
                    end
                end)
            end
        end)

        instancename.InputChanged:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
                dragInput = input
            end
        end)

        UserInputService.InputChanged:Connect(function(input)
            if input == dragInput and dragging then
                update(input)
            end
        end)
    end

    local function RemoveSpaces(str)
        return str:gsub(" ", "")
    end

    coroutine.wrap(function()
        while wait() do
            RainbowModeColorValue = RainbowModeColorValue + 1/255
            if RainbowModeColorValue >= 1 then
                RainbowModeColorValue = 0
            end
        end
    end)()


    local Library = {}

    function Library:NewWindow(name)
        local Window = Instance.new("ImageLabel")
        local Topbar = Instance.new("Frame")
        local WindowToggle = Instance.new("TextButton")
        local WindowTitle = Instance.new("TextLabel")
        local BottomRoundCover = Instance.new("Frame")
        local Body = Instance.new("ImageLabel")
        local Sorter = Instance.new("UIListLayout")
        local TopbarBodyCover = Instance.new("Frame")

        local WindowName = RemoveSpaces(name)

        WindowPosition = WindowPosition + 2

        local BodyYSize = 35
        local IsTabOpen = true

        local function ExtendBodySize(value)
            BodyYSize = BodyYSize + value

            TweenService:Create(Body, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 170, 0, BodyYSize)}):Play()
        end

        local function UnExtendBodySize(value)
            BodyYSize = BodyYSize - value

            TweenService:Create(Body, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 170, 0, BodyYSize)}):Play()
        end

        
        Window.Name = (WindowName .. "Window")
        Window.Parent = Container
        Window.BackgroundColor3 = Color3.new(0.0980392, 0.0980392, 0.0980392)
        Window.BackgroundTransparency = 1
        Window.Position = UDim2.new(WindowPosition, -100, 3, -265)
        Window.Size = UDim2.new(0, 170, 0, 30)
        Window.ZIndex = 2
        Window.Image = "rbxassetid://3570695787"
        Window.ImageColor3 = Color3.new(0.0980392, 0.0980392, 0.0980392)
        Window.ScaleType = Enum.ScaleType.Slice
        Window.SliceCenter = Rect.new(100, 100, 100, 100)
        Window.SliceScale =  0.05

        Topbar.Name = "Topbar"
        Topbar.Parent = Window
        Topbar.BackgroundColor3 = Color3.new(1, 1, 1)
        Topbar.BackgroundTransparency = 1
        Topbar.BorderSizePixel = 0
        Topbar.Size = UDim2.new(0, 170, 0, 30)
        Topbar.ZIndex = 2

        WindowToggle.Name = "WindowToggle"
        WindowToggle.Parent = Topbar
        WindowToggle.BackgroundColor3 = Color3.new(1, 1, 1)
        WindowToggle.BackgroundTransparency = 1
        WindowToggle.Position = UDim2.new(0.822450161, 0, 0, 0)
        WindowToggle.Size = UDim2.new(0, 30, 0, 30)
        WindowToggle.ZIndex = 2
        WindowToggle.Font = Enum.Font.SourceSansSemibold
        WindowToggle.Text = "-"
        WindowToggle.TextColor3 = Color3.new(1, 1, 1)
        WindowToggle.TextSize = 20
        WindowToggle.TextWrapped = true

        WindowToggle.MouseButton1Down:Connect(function()
            if not IsTabOpen then
                IsTabOpen = true
                TweenService:Create(WindowToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 1}):Play()

                WindowToggle.Text = "-"
                WindowToggle.TextSize = 20
                WindowToggle.Visible = false
    
                repeat wait() until WindowToggle.TextTransparency == 1
                WindowToggle.Visible = true
                TweenService:Create(WindowToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
            elseif IsTabOpen then
                IsTabOpen = false
                TweenService:Create(WindowToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 1}):Play()
            
                WindowToggle.Text = "v"
                WindowToggle.TextSize = 14
                WindowToggle.Visible = false       

                repeat wait() until WindowToggle.TextTransparency == 1
                WindowToggle.Visible = true
                TweenService:Create(WindowToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
            end
        end)

        WindowTitle.Name = "WindowTitle"
        WindowTitle.Parent = Topbar
        WindowTitle.BackgroundColor3 = Color3.new(1, 1, 1)
        WindowTitle.BackgroundTransparency = 1
        WindowTitle.Size = UDim2.new(0, 170, 0, 30)
        WindowTitle.ZIndex = 2
        WindowTitle.Font = Enum.Font.SourceSansBold
        WindowTitle.Text = name
        WindowTitle.TextColor3 = Color3.new(1, 1, 1)
        WindowTitle.TextSize = 17

        BottomRoundCover.Name = "BottomRoundCover"
        BottomRoundCover.Parent = Topbar
        BottomRoundCover.BackgroundColor3 = Color3.new(0.0980392, 0.0980392, 0.0980392)
        BottomRoundCover.BorderSizePixel = 0
        BottomRoundCover.Position = UDim2.new(0, 0, 0.833333313, 0)
        BottomRoundCover.Size = UDim2.new(0, 170, 0, 5)
        BottomRoundCover.ZIndex = 2

        Body.Name = "Body"
        Body.Parent = Window
        Body.BackgroundColor3 = Color3.new(0.137255, 0.137255, 0.137255)
        Body.BackgroundTransparency = 1
        Body.ClipsDescendants = true
        Body.Size = UDim2.new(0, 170, 0, BodyYSize)
        Body.Image = "rbxassetid://3570695787"
        Body.ImageColor3 = Color3.new(0.137255, 0.137255, 0.137255)
        Body.ScaleType = Enum.ScaleType.Slice
        Body.SliceCenter = Rect.new(100, 100, 100, 100)
        Body.SliceScale =  0.05

        Sorter.Name = "Sorter"
        Sorter.Parent = Body
        Sorter.SortOrder = Enum.SortOrder.LayoutOrder

        TopbarBodyCover.Name = "TopbarBodyCover"
        TopbarBodyCover.Parent = Body
        TopbarBodyCover.BackgroundColor3 = Color3.new(1, 1, 1)
        TopbarBodyCover.BackgroundTransparency = 1
        TopbarBodyCover.BorderSizePixel = 0
        TopbarBodyCover.Size = UDim2.new(0, 170, 0, 30)

        Dragging(Window)

        local Sections = {}

        function Sections:NewSection(name)
            local Section1Holder = Instance.new("Frame")
            local SectionInfo = Instance.new("Frame")
            local SectionToggle = Instance.new("TextButton")
            local SectionTitle = Instance.new("TextLabel")
            local Layout = Instance.new("UIListLayout")

            local SectionName = RemoveSpaces(name)
            local SectionToggleText = "v"
            local SectionYSize = 30
            local IsSectionOpen = false

            local function ExtendSectionSize(value)
                SectionYSize = SectionYSize + value
        
                TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 170, 0, SectionYSize)}):Play()
            end
        
            local function UnExtendSectionSize(value)
                SectionYSize = SectionYSize - value
        
                TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 170, 0, SectionYSize)}):Play()
            end

            Section1Holder.Name = (SectionName .. "Section")
            Section1Holder.Parent = Body
            Section1Holder.BackgroundColor3 = Color3.new(0.176471, 0.176471, 0.176471)
            Section1Holder.BorderSizePixel = 0
            Section1Holder.ClipsDescendants = true
            Section1Holder.Size = UDim2.new(0, 170, 0, SectionYSize)
            
            ExtendBodySize(30)

            SectionInfo.Name = "SectionInfo"
            SectionInfo.Parent = Section1Holder
            SectionInfo.BackgroundColor3 = Color3.new(1, 1, 1)
            SectionInfo.BackgroundTransparency = 1
            SectionInfo.Size = UDim2.new(0, 170, 0, 30)
            
            SectionToggle.Name = "SectionToggle"
            SectionToggle.Parent = SectionInfo
            SectionToggle.BackgroundColor3 = Color3.new(1, 1, 1)
            SectionToggle.BackgroundTransparency = 1
            SectionToggle.Position = UDim2.new(0.822450161, 0, 0, 0)
            SectionToggle.Size = UDim2.new(0, 30, 0, 30)
            SectionToggle.ZIndex = 2
            SectionToggle.Font = Enum.Font.SourceSansSemibold
            SectionToggle.Text = SectionToggleText
            SectionToggle.TextColor3 = Color3.new(1, 1, 1)
            SectionToggle.TextSize = 14
            SectionToggle.TextWrapped = true
            
            SectionTitle.Name = "SectionTitle"
            SectionTitle.Parent = SectionInfo
            SectionTitle.BackgroundColor3 = Color3.new(1, 1, 1)
            SectionTitle.BackgroundTransparency = 1
            SectionTitle.BorderSizePixel = 0
            SectionTitle.Position = UDim2.new(0.052941177, 0, 0, 0)
            SectionTitle.Size = UDim2.new(0, 125, 0, 30)
            SectionTitle.Font = Enum.Font.SourceSansBold
            SectionTitle.Text = name
            SectionTitle.TextColor3 = Color3.new(1, 1, 1)
            SectionTitle.TextSize = 17
            SectionTitle.TextXAlignment = Enum.TextXAlignment.Left
            
            Layout.Name = "Layout"
            Layout.Parent = Section1Holder
            Layout.SortOrder = Enum.SortOrder.LayoutOrder

            WindowToggle.MouseButton1Down:Connect(function()
                if not IsTabOpen then
                    ExtendBodySize(30)
                    SectionToggle.Text = SectionToggleText
                    TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
                elseif IsTabOpen then
                    UnExtendBodySize(30)
                    SectionToggle.Text = ""
                    TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                end
            end)

            SectionToggle.MouseButton1Down:Connect(function()
                if not IsSectionOpen then
                    IsSectionOpen = true
                    SectionToggleText = "-"

                    TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 1}):Play()
                    TweenService:Create(WindowToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 1}):Play()

                    SectionToggle.Text = SectionToggleText
                    SectionToggle.TextSize = 20
                    SectionToggle.Visible = false
                    WindowToggle.Visible = false

                    repeat wait() until SectionToggle.TextTransparency == 1 and WindowToggle.TextTransparency == 1
                    SectionToggle.Visible = true
                    WindowToggle.Visible = true
                    TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
                    TweenService:Create(WindowToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
                elseif IsSectionOpen then
                    IsSectionOpen = false
                    SectionToggleText = "v"

                    TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 1}):Play()
                    TweenService:Create(WindowToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 1}):Play()

                    SectionToggle.Text = SectionToggleText
                    SectionToggle.TextSize = 14
                    SectionToggle.Visible = false
                    WindowToggle.Visible = false

                    repeat wait() until SectionToggle.TextTransparency == 1 and WindowToggle.TextTransparency == 1
                    SectionToggle.Visible = true
                    WindowToggle.Visible = true
                    TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
                    TweenService:Create(WindowToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
                end
            end)

            local LibraryElements = {}

            function LibraryElements:CreateToggle(name, action)
                local ToggleHolder = Instance.new("Frame")
                local ToggleTitle = Instance.new("TextLabel")
                local ToggleBackground = Instance.new("ImageLabel")
                local ToggleButton = Instance.new("ImageButton")
            
                local ToggleName = RemoveSpaces(name)
                local Toggled = false

                ToggleHolder.Name = (ToggleName .. "ToggleHolder")
                ToggleHolder.Parent = Section1Holder
                ToggleHolder.BackgroundColor3 = Color3.new(0.137255, 0.137255, 0.137255)
                ToggleHolder.BorderSizePixel = 0
                ToggleHolder.Size = UDim2.new(0, 170, 0, 30)
            
                ToggleTitle.Name = "ToggleTitle"
                ToggleTitle.Parent = ToggleHolder
                ToggleTitle.BackgroundColor3 = Color3.new(1, 1, 1)
                ToggleTitle.BackgroundTransparency = 1
                ToggleTitle.BorderSizePixel = 0
                ToggleTitle.Position = UDim2.new(0.052941177, 0, 0, 0)
                ToggleTitle.Size = UDim2.new(0, 125, 0, 30)
                ToggleTitle.Font = Enum.Font.SourceSansBold
                ToggleTitle.Text = name
                ToggleTitle.TextColor3 = Color3.new(1, 1, 1)
                ToggleTitle.TextSize = 17
                ToggleTitle.TextXAlignment = Enum.TextXAlignment.Left
            
                ToggleBackground.Name = "ToggleBackground"
                ToggleBackground.Parent = ToggleHolder
                ToggleBackground.BackgroundColor3 = Color3.new(1, 1, 1)
                ToggleBackground.BackgroundTransparency = 1
                ToggleBackground.BorderSizePixel = 0
                ToggleBackground.Position = UDim2.new(0.847058833, 0, 0.166666672, 0)
                ToggleBackground.Size = UDim2.new(0, 20, 0, 20)
                ToggleBackground.Image = "rbxassetid://3570695787"
                ToggleBackground.ImageColor3 = Color3.new(0.254902, 0.254902, 0.254902)
            
                ToggleButton.Name = "ToggleButton"
                ToggleButton.Parent = ToggleBackground
                ToggleButton.BackgroundColor3 = Color3.new(1, 1, 1)
                ToggleButton.BackgroundTransparency = 1
                ToggleButton.Position = UDim2.new(0, 2, 0, 2)
                ToggleButton.Size = UDim2.new(0, 16, 0, 16)
                ToggleButton.Image = "rbxassetid://3570695787"
                ToggleButton.ImageColor3 = Color3.new(1, 0.341176, 0.341176)
                ToggleButton.ImageTransparency = 1

                ToggleButton.MouseButton1Down:Connect(function()	
                    Toggled = not Toggled
                
                    if Toggled then
                        TweenService:Create(ToggleButton, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {ImageTransparency = 0}):Play()
                    elseif not Toggled then
                        TweenService:Create(ToggleButton, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {ImageTransparency = 1}):Play()
                    end

                    action(Toggled)
                end)

                SectionToggle.MouseButton1Down:Connect(function()
                    if not IsSectionOpen then
                        ExtendSectionSize(30)
                        ExtendBodySize(30)
                    elseif IsSectionOpen then
                        UnExtendSectionSize(30)
                        UnExtendBodySize(30)
                    end
                end)

                WindowToggle.MouseButton1Down:Connect(function()
                    if not IsTabOpen then
                        if IsSectionOpen then
                            ExtendBodySize(30)
                            TweenService:Create(SectionToggle, TweenInfo.new(0, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = 360}):Play()
                            TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
                        elseif not IsSectionOpen then
                            TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
                        end

                        
                    elseif IsTabOpen then
                        if IsSectionOpen then
                            UnExtendBodySize(30)
                            TweenService:Create(SectionToggle, TweenInfo.new(0, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = 0}):Play()
                            TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                        elseif not IsSectionOpen then
                            TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                        end
                    end

                    TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 1}):Play()
            
                    SectionToggle.Visible = false
            
                    repeat wait() until SectionToggle.TextTransparency == 1
                    SectionToggle.Visible = true
                    TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
                end)
            end

            function LibraryElements:CreateSlider(name, minimumvalue, maximumvalue, startvalue, precisevalue, action)
                local SliderHolder = Instance.new("Frame")
                local SliderTitle = Instance.new("TextLabel")
                local SliderValueHolder = Instance.new("ImageLabel")
                local SliderValue = Instance.new("TextLabel")
                local SliderBackground = Instance.new("ImageLabel")
                local Slider = Instance.new("ImageLabel")

                local SliderName = RemoveSpaces(name)
                local Dragging = false
                local PreciseSliderValue = precisevalue

                SliderHolder.Name = (SliderName .. "SliderHolder")
                SliderHolder.Parent = Section1Holder
                SliderHolder.BackgroundColor3 = Color3.new(0.137255, 0.137255, 0.137255)
                SliderHolder.BorderSizePixel = 0
                SliderHolder.Size = UDim2.new(0, 170, 0, 30)

                SliderTitle.Name = "SliderTitle"
                SliderTitle.Parent = SliderHolder
                SliderTitle.BackgroundColor3 = Color3.new(1, 1, 1)
                SliderTitle.BackgroundTransparency = 1
                SliderTitle.BorderSizePixel = 0
                SliderTitle.Position = UDim2.new(0.052941177, 0, 0, 0)
                SliderTitle.Size = UDim2.new(0, 125, 0, 15)
                SliderTitle.Font = Enum.Font.SourceSansSemibold
                SliderTitle.Text = name
                SliderTitle.TextColor3 = Color3.new(1, 1, 1)
                SliderTitle.TextSize = 17
                SliderTitle.TextXAlignment = Enum.TextXAlignment.Left

                SliderValueHolder.Name = "SliderValueHolder"
                SliderValueHolder.Parent = SliderHolder
                SliderValueHolder.BackgroundColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                SliderValueHolder.BackgroundTransparency = 1
                SliderValueHolder.Position = UDim2.new(0.747058809, 0, 0, 0)
                SliderValueHolder.Size = UDim2.new(0, 35, 0, 15)
                SliderValueHolder.Image = "rbxassetid://3570695787"
                SliderValueHolder.ImageColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                SliderValueHolder.ImageTransparency = 0.5
                SliderValueHolder.ScaleType = Enum.ScaleType.Slice
                SliderValueHolder.SliceCenter = Rect.new(100, 100, 100, 100)
                SliderValueHolder.SliceScale = 0.02

                SliderValue.Name = "SliderValue"
                SliderValue.Parent = SliderValueHolder
                SliderValue.BackgroundColor3 = Color3.new(1, 1, 1)
                SliderValue.BackgroundTransparency = 1
                SliderValue.Size = UDim2.new(0, 35, 0, 15)
                SliderValue.Font = Enum.Font.SourceSansSemibold
                SliderValue.Text = tostring(startvalue or PreciseSliderValue and tonumber(string.format("%.2f", startvalue)))
                SliderValue.TextColor3 = Color3.new(1, 1, 1)
                SliderValue.TextSize = 14

                SliderBackground.Name = "SliderBackground"
                SliderBackground.Parent = SliderHolder
                SliderBackground.BackgroundColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                SliderBackground.BackgroundTransparency = 1
                SliderBackground.Position = UDim2.new(0.0529999994, 0, 0.649999976, 0)
                SliderBackground.Selectable = true
                SliderBackground.Size = UDim2.new(0, 153, 0, 5)
                SliderBackground.Image = "rbxassetid://3570695787"
                SliderBackground.ImageColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                SliderBackground.ImageTransparency = 0.5
                SliderBackground.ScaleType = Enum.ScaleType.Slice
                SliderBackground.SliceCenter = Rect.new(100, 100, 100, 100)
                SliderBackground.ClipsDescendants = true
                SliderBackground.SliceScale = 0.02

                Slider.Name = "Slider"
                Slider.Parent = SliderBackground
                Slider.BackgroundColor3 = Color3.new(1, 1, 1)
                Slider.BackgroundTransparency = 1
                Slider.Size = UDim2.new(((startvalue or minimumvalue) - minimumvalue) / (maximumvalue - minimumvalue), 0, 0, 5)
                Slider.Image = "rbxassetid://3570695787"
                Slider.ScaleType = Enum.ScaleType.Slice
                Slider.SliceCenter = Rect.new(100, 100, 100, 100)
                Slider.SliceScale = 0.02

                local function Sliding(input)
                    local Pos = UDim2.new(math.clamp((input.Position.X - SliderBackground.AbsolutePosition.X) / SliderBackground.AbsoluteSize.X, 0, 1), 0, 1.15, 0)
                    TweenService:Create(Slider, TweenInfo.new(0.25, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = Pos}):Play()

                    local NonSliderPreciseValue = math.floor(((Pos.X.Scale * maximumvalue) / maximumvalue) * (maximumvalue - minimumvalue) + minimumvalue)
                    local SliderPreciseValue = ((Pos.X.Scale * maximumvalue) / maximumvalue) * (maximumvalue - minimumvalue) + minimumvalue
        
                    local Value = (PreciseSliderValue and SliderPreciseValue or NonSliderPreciseValue)
                    Value = tonumber(string.format("%.2f", Value))
        
                    SliderValue.Text = tostring(Value)
                    action(Value)
                end
            
                SliderBackground.InputBegan:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        Dragging = true
                    end
                end)
                
                SliderBackground.InputEnded:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        Dragging = false
                    end
                end)
                
                SliderBackground.InputBegan:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        Sliding(input)
                    end
                end)
            
                UserInputService.InputChanged:Connect(function(input)
                    if Dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                        Sliding(input)
                    end
                end)

                SectionToggle.MouseButton1Down:Connect(function()
                    if not IsSectionOpen then
                        ExtendSectionSize(30)
                        ExtendBodySize(30)
                    elseif IsSectionOpen then
                        UnExtendSectionSize(30)
                        UnExtendBodySize(30)
                    end
                end)

                WindowToggle.MouseButton1Down:Connect(function()
                    if not IsTabOpen then
                        if IsSectionOpen then
                            ExtendBodySize(30)
                            TweenService:Create(SectionToggle, TweenInfo.new(0, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = 360}):Play()
                            TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
                        elseif not IsSectionOpen then
                            TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
                        end

                        
                    elseif IsTabOpen then
                        if IsSectionOpen then
                            UnExtendBodySize(30)
                            TweenService:Create(SectionToggle, TweenInfo.new(0, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = 0}):Play()
                            TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                        elseif not IsSectionOpen then
                            TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                        end
                    end

                    TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 1}):Play()
            
                    SectionToggle.Visible = false
            
                    repeat wait() until SectionToggle.TextTransparency == 1
                    SectionToggle.Visible = true
                    TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
                end)
            end

            function LibraryElements:CreateColorPicker(name, presetcolor, action)
                local ColorPickerHolder = Instance.new("Frame")
                local RainbowToggleHolder = Instance.new("Frame")
                local RainbowTitle = Instance.new("TextLabel")
                local RainbowBackground = Instance.new("ImageLabel")
                local RainbowToggleButton = Instance.new("ImageButton")
                local ColorPickerTitle = Instance.new("TextLabel")
                local ColorPickerToggle = Instance.new("ImageButton")
                local ColorPickerMain = Instance.new("ImageLabel")
                local ColorValueR = Instance.new("TextLabel")
                local ColorValueRRound = Instance.new("ImageLabel")
                local ColorValueB = Instance.new("TextLabel")
                local ColorValueBRound = Instance.new("ImageLabel")
                local ColorValueG = Instance.new("TextLabel")
                local ColorValueGRound = Instance.new("ImageLabel")
                local RoundHueHolder = Instance.new("ImageLabel")
                local ColorHue = Instance.new("ImageLabel")
                local HueMarker = Instance.new("Frame")
                local RoundSaturationHolder = Instance.new("ImageLabel")
                local ColorSelector = Instance.new("ImageLabel")
                local SaturationMarker = Instance.new("ImageLabel")

                local ColorPickerName = RemoveSpaces(name)

                ColorPickerZIndex = ColorPickerZIndex + 1

                local ColorPickerOpen = false
                local RainbowColorMode = false
                
                local Color = nil
                local ColorValue = 0
                local RainbowColor = nil

                ColorPickerHolder.Name = (ColorPickerName .. "ColorPickerHolder")
                ColorPickerHolder.Parent = Section1Holder
                ColorPickerHolder.BackgroundColor3 = Color3.new(0.137255, 0.137255, 0.137255)
                ColorPickerHolder.BorderSizePixel = 0
                ColorPickerHolder.Size = UDim2.new(0, 170, 0, 30)

                ColorPickerTitle.Name = "ColorPickerTitle"
                ColorPickerTitle.Parent = ColorPickerHolder
                ColorPickerTitle.BackgroundColor3 = Color3.new(1, 1, 1)
                ColorPickerTitle.BackgroundTransparency = 1
                ColorPickerTitle.BorderSizePixel = 0
                ColorPickerTitle.Position = UDim2.new(0.052941177, 0, 0, 0)
                ColorPickerTitle.Size = UDim2.new(0, 125, 0, 30)
                ColorPickerTitle.Font = Enum.Font.SourceSansBold
                ColorPickerTitle.Text = name
                ColorPickerTitle.TextColor3 = Color3.new(1, 1, 1)
                ColorPickerTitle.TextSize = 17
                ColorPickerTitle.TextXAlignment = Enum.TextXAlignment.Left
                
                ColorPickerToggle.Name = "ColorPickerToggle"
                ColorPickerToggle.Parent = ColorPickerHolder
                ColorPickerToggle.BackgroundColor3 = Color3.new(1, 1, 1)
                ColorPickerToggle.BackgroundTransparency = 1
                ColorPickerToggle.Position = UDim2.new(0.822000027, 0, 0.166999996, 0)
                ColorPickerToggle.Size = UDim2.new(0, 22, 0, 20)
                ColorPickerToggle.Image = "rbxassetid://3570695787"
                ColorPickerToggle.ImageColor3 = presetcolor
                ColorPickerToggle.ScaleType = Enum.ScaleType.Slice
                ColorPickerToggle.SliceCenter = Rect.new(100, 100, 100, 100)
                ColorPickerToggle.SliceScale = 0.04
                
                ColorPickerMain.Name = "ColorPickerMain"
                ColorPickerMain.Parent = ColorPickerHolder
                ColorPickerMain.BackgroundColor3 = Color3.new(0.137255, 0.137255, 0.137255)
                ColorPickerMain.BackgroundTransparency = 1
                ColorPickerMain.ClipsDescendants = true
                ColorPickerMain.BorderSizePixel = 0
                ColorPickerMain.Position = UDim2.new(1.04705882, 0, -1.36666667, 0)
                ColorPickerMain.Size = UDim2.new(0, 0, 0, 175)
                ColorPickerMain.Image = "rbxassetid://3570695787"
                ColorPickerMain.ImageColor3 = Color3.new(0.137255, 0.137255, 0.137255)
                ColorPickerMain.ScaleType = Enum.ScaleType.Slice
                ColorPickerMain.SliceCenter = Rect.new(100, 100, 100, 100)
                ColorPickerMain.SliceScale = 0.05
                ColorPickerMain.ZIndex = 1 + ColorPickerZIndex
                
                RainbowToggleHolder.Name = "RainbowToggleHolder"
                RainbowToggleHolder.Parent = ColorPickerMain
                RainbowToggleHolder.BackgroundColor3 = Color3.new(0.137255, 0.137255, 0.137255)
                RainbowToggleHolder.BackgroundTransparency = 1
                RainbowToggleHolder.BorderSizePixel = 0
                RainbowToggleHolder.Position = UDim2.new(0, 0, 0.819999993, 0)
                RainbowToggleHolder.Size = UDim2.new(0, 170, 0, 30)
                RainbowToggleHolder.ZIndex = 1 + ColorPickerZIndex

                RainbowTitle.Name = "RainbowTitle"
                RainbowTitle.Parent = RainbowToggleHolder
                RainbowTitle.BackgroundColor3 = Color3.new(1, 1, 1)
                RainbowTitle.BackgroundTransparency = 1
                RainbowTitle.BorderSizePixel = 0
                RainbowTitle.Position = UDim2.new(0.052941177, 0, 0, 0)
                RainbowTitle.Size = UDim2.new(0, 125, 0, 30)
                RainbowTitle.Font = Enum.Font.SourceSansBold
                RainbowTitle.Text = "Rainbow"
                RainbowTitle.TextColor3 = Color3.new(1, 1, 1)
                RainbowTitle.TextSize = 17
                RainbowTitle.TextXAlignment = Enum.TextXAlignment.Left
                RainbowTitle.ZIndex = 1 + ColorPickerZIndex

                RainbowBackground.Name = "RainbowBackground"
                RainbowBackground.Parent = RainbowToggleHolder
                RainbowBackground.BackgroundColor3 = Color3.new(1, 1, 1)
                RainbowBackground.BackgroundTransparency = 1
                RainbowBackground.BorderSizePixel = 0
                RainbowBackground.Position = UDim2.new(0.847058833, 0, 0.166666672, 0)
                RainbowBackground.Size = UDim2.new(0, 20, 0, 20)
                RainbowBackground.Image = "rbxassetid://3570695787"
                RainbowBackground.ImageColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                RainbowBackground.ZIndex = 1 + ColorPickerZIndex

                RainbowToggleButton.Name = "RainbowToggleButton"
                RainbowToggleButton.Parent = RainbowBackground
                RainbowToggleButton.BackgroundColor3 = Color3.new(1, 1, 1)
                RainbowToggleButton.BackgroundTransparency = 1
                RainbowToggleButton.Position = UDim2.new(0, 2, 0, 2)
                RainbowToggleButton.Size = UDim2.new(0, 16, 0, 16)
                RainbowToggleButton.Image = "rbxassetid://3570695787"
                RainbowToggleButton.ImageColor3 = Color3.new(1, 0.341176, 0.341176)
                RainbowToggleButton.ImageTransparency = 1
                RainbowToggleButton.ZIndex = 1 + ColorPickerZIndex

                ColorValueR.Name = "ColorValueR"
                ColorValueR.Parent = ColorPickerMain
                ColorValueR.BackgroundColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                ColorValueR.BackgroundTransparency = 1
                ColorValueR.BorderSizePixel = 0
                ColorValueR.ClipsDescendants = true
                ColorValueR.Position = UDim2.new(0, 7, 0, 127)
                ColorValueR.Size = UDim2.new(0, 50, 0, 16)
                ColorValueR.ZIndex = 2 + ColorPickerZIndex
                ColorValueR.Font = Enum.Font.SourceSansBold
                ColorValueR.Text = "R: 000"
                ColorValueR.TextColor3 = Color3.new(1, 1, 1)
                ColorValueR.TextSize = 14

                ColorValueRRound.Name = "ColorValueRRound"
                ColorValueRRound.Parent = ColorValueR
                ColorValueRRound.Active = true
                ColorValueRRound.AnchorPoint = Vector2.new(0.5, 0.5)
                ColorValueRRound.BackgroundColor3 = Color3.new(1, 1, 1)
                ColorValueRRound.BackgroundTransparency = 1
                ColorValueRRound.Position = UDim2.new(0.5, 0, 0.5, 0)
                ColorValueRRound.Selectable = true
                ColorValueRRound.Size = UDim2.new(1, 0, 1, 0)
                ColorValueRRound.Image = "rbxassetid://3570695787"
                ColorValueRRound.ImageColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                ColorValueRRound.ScaleType = Enum.ScaleType.Slice
                ColorValueRRound.SliceCenter = Rect.new(100, 100, 100, 100)
                ColorValueRRound.SliceScale = 0.04
                ColorValueRRound.ZIndex = 1 + ColorPickerZIndex

                ColorValueG.Name = "ColorValueG"
                ColorValueG.Parent = ColorPickerMain
                ColorValueG.BackgroundColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                ColorValueG.BackgroundTransparency = 1
                ColorValueG.BorderSizePixel = 0
                ColorValueG.ClipsDescendants = true
                ColorValueG.Position = UDim2.new(0, 60, 0, 127)
                ColorValueG.Size = UDim2.new(0, 51, 0, 16)
                ColorValueG.ZIndex = 2 + ColorPickerZIndex
                ColorValueG.Font = Enum.Font.SourceSansBold
                ColorValueG.Text = "G: 000"
                ColorValueG.TextColor3 = Color3.new(1, 1, 1)
                ColorValueG.TextSize = 14

                ColorValueGRound.Name = "ColorValueGRound"
                ColorValueGRound.Parent = ColorValueG
                ColorValueGRound.Active = true
                ColorValueGRound.AnchorPoint = Vector2.new(0.5, 0.5)
                ColorValueGRound.BackgroundColor3 = Color3.new(1, 1, 1)
                ColorValueGRound.BackgroundTransparency = 1
                ColorValueGRound.Position = UDim2.new(0.5, 0, 0.5, 0)
                ColorValueGRound.Selectable = true
                ColorValueGRound.Size = UDim2.new(1, 0, 1, 0)
                ColorValueGRound.Image = "rbxassetid://3570695787"
                ColorValueGRound.ImageColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                ColorValueGRound.ScaleType = Enum.ScaleType.Slice
                ColorValueGRound.SliceCenter = Rect.new(100, 100, 100, 100)
                ColorValueGRound.SliceScale = 0.04
                ColorValueGRound.ZIndex = 1 + ColorPickerZIndex

                ColorValueB.Name = "ColorValueB"
                ColorValueB.Parent = ColorPickerMain
                ColorValueB.BackgroundColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                ColorValueB.BackgroundTransparency = 1
                ColorValueB.BorderSizePixel = 0
                ColorValueB.ClipsDescendants = true
                ColorValueB.Position = UDim2.new(0, 114, 0, 127)
                ColorValueB.Size = UDim2.new(0, 50, 0, 16)
                ColorValueB.ZIndex = 2 + ColorPickerZIndex
                ColorValueB.Font = Enum.Font.SourceSansBold
                ColorValueB.Text = "B: 000"
                ColorValueB.TextColor3 = Color3.new(1, 1, 1)
                ColorValueB.TextSize = 14

                ColorValueBRound.Name = "ColorValueBRound"
                ColorValueBRound.Parent = ColorValueB
                ColorValueBRound.Active = true
                ColorValueBRound.AnchorPoint = Vector2.new(0.5, 0.5)
                ColorValueBRound.BackgroundColor3 = Color3.new(1, 1, 1)
                ColorValueBRound.BackgroundTransparency = 1
                ColorValueBRound.Position = UDim2.new(0.5, 0, 0.5, 0)
                ColorValueBRound.Selectable = true
                ColorValueBRound.Size = UDim2.new(1, 0, 1, 0)
                ColorValueBRound.Image = "rbxassetid://3570695787"
                ColorValueBRound.ImageColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                ColorValueBRound.ScaleType = Enum.ScaleType.Slice
                ColorValueBRound.SliceCenter = Rect.new(100, 100, 100, 100)
                ColorValueBRound.SliceScale = 0.04
                ColorValueBRound.ZIndex = 1 + ColorPickerZIndex

                RoundHueHolder.Name = "RoundHueHolder"
                RoundHueHolder.Parent = ColorPickerMain
                RoundHueHolder.BackgroundColor3 = Color3.new(1, 1, 1)
                RoundHueHolder.BackgroundTransparency = 1
                RoundHueHolder.ClipsDescendants = true
                RoundHueHolder.Position = UDim2.new(0, 136, 0, 6)
                RoundHueHolder.Size = UDim2.new(0, 28, 0, 114)
                RoundHueHolder.ZIndex = 2 + ColorPickerZIndex
                RoundHueHolder.Image = "rbxassetid://4695575676"
                RoundHueHolder.ImageColor3 = Color3.new(0.137255, 0.137255, 0.137255)
                RoundHueHolder.ScaleType = Enum.ScaleType.Slice
                RoundHueHolder.SliceCenter = Rect.new(128, 128, 128, 128)
                RoundHueHolder.SliceScale = 0.05

                ColorHue.Name = "ColorHue"
                ColorHue.Parent = RoundHueHolder
                ColorHue.BackgroundColor3 = Color3.new(1, 1, 1)
                ColorHue.BackgroundTransparency = 1
                ColorHue.BorderSizePixel = 0
                ColorHue.Size = UDim2.new(0, 28, 0, 114)
                ColorHue.Image = "http://www.roblox.com/asset/?id=4801885250"
                ColorHue.ScaleType = Enum.ScaleType.Crop
                ColorHue.ZIndex = 1 + ColorPickerZIndex

                HueMarker.Name = "HueMarker"
                HueMarker.Parent = RoundHueHolder
                HueMarker.BackgroundColor3 = Color3.new(0.294118, 0.294118, 0.294118)
                HueMarker.BorderSizePixel = 0
                HueMarker.Position = UDim2.new(-0.25, 0, 0, 0)
                HueMarker.Size = UDim2.new(0, 42, 0, 5)
                HueMarker.ZIndex = 1 + ColorPickerZIndex

                RoundSaturationHolder.Name = "RoundSaturationHolder"
                RoundSaturationHolder.Parent = ColorPickerMain
                RoundSaturationHolder.BackgroundColor3 = Color3.new(1, 1, 1)
                RoundSaturationHolder.BackgroundTransparency = 1
                RoundSaturationHolder.ClipsDescendants = true
                RoundSaturationHolder.Position = UDim2.new(0, 7, 0, 6)
                RoundSaturationHolder.Size = UDim2.new(0, 122, 0, 114)
                RoundSaturationHolder.ZIndex = 2 + ColorPickerZIndex
                RoundSaturationHolder.Image = "rbxassetid://4695575676"
                RoundSaturationHolder.ImageColor3 = Color3.new(0.137255, 0.137255, 0.137255)
                RoundSaturationHolder.ScaleType = Enum.ScaleType.Slice
                RoundSaturationHolder.SliceCenter = Rect.new(128, 128, 128, 128)
                RoundSaturationHolder.SliceScale = 0.05

                ColorSelector.Name = "ColorSelector"
                ColorSelector.Parent = RoundSaturationHolder
                ColorSelector.BackgroundColor3 = presetcolor
                ColorSelector.BorderSizePixel = 0
                ColorSelector.Size = UDim2.new(0, 122, 0, 114)
                ColorSelector.Image = "rbxassetid://4805274903"
                ColorSelector.ZIndex = 1 + ColorPickerZIndex

                SaturationMarker.Name = "SaturationMarker"
                SaturationMarker.Parent = RoundSaturationHolder
                SaturationMarker.BackgroundColor3 = Color3.new(1, 1, 1)
                SaturationMarker.BackgroundTransparency = 1
                SaturationMarker.Size = UDim2.new(0, 0, 0, 0)
                SaturationMarker.Image = "http://www.roblox.com/asset/?id=4805639000"
                SaturationMarker.ZIndex = 1 + ColorPickerZIndex

                local function SetRGBValues()
                    local RedValue, GreenValue, BlueValue = ColorPickerToggle.ImageColor3.r * 255, ColorPickerToggle.ImageColor3.g * 255, ColorPickerToggle.ImageColor3.b * 255

                    ColorValueR.Text = ("R: " .. math.floor(RedValue))
                    ColorValueG.Text = ("G: " .. math.floor(GreenValue))
                    ColorValueB.Text = ("B: " .. math.floor(BlueValue))
                end

                SetRGBValues()

                ColorPickerToggle.MouseButton1Down:Connect(function()
                    if not ColorPickerOpen then
                        ColorPickerOpen = true
                        Body.ClipsDescendants = false
                        Section1Holder.ClipsDescendants = false

                        TweenService:Create(ColorPickerMain, TweenInfo.new(0.75, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 171, 0, 175)}):Play()
                    elseif ColorPickerOpen then
                        ColorPickerOpen = false
                        TweenService:Create(ColorPickerMain, TweenInfo.new(0.75, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 0, 0, 175)}):Play()
                    end
                end)

                local ColorData = {
                    H = 1;
                    S = 1;
                    V = 1
                }

                local Connection1 = nil
                local Connection2 = nil

                local function GetXY(frame)
                    local X, Y = Mouse.X - frame.AbsolutePosition.X, Mouse.Y - frame.AbsolutePosition.Y
                    local MaxX, MaxY = frame.AbsoluteSize.X, frame.AbsoluteSize.Y
                    X = math.clamp(X, 0, MaxX)
                    Y = math.clamp(Y, 0, MaxY)
                    return X / MaxX, Y / MaxY
                end

                local function GetY(frame)
                    local Y2 = Mouse.Y - frame.AbsolutePosition.Y
                    MaxY2 = frame.AbsoluteSize.Y
                    Y2 = math.clamp(Y2, -10, MaxY2)
                    return Y2 / MaxY2
                end

                local function Update()
                    SetRGBValues()

                    Color = Color3.fromHSV(ColorData.H, ColorData.S, ColorData.V)

                    ColorPickerToggle.ImageColor3 = Color
                    ColorSelector.BackgroundColor3 = Color3.fromHSV(ColorData.H, 1, 1)
                    action(ColorPickerToggle.ImageColor3)
                end

                ColorSelector.MouseLeave:Connect(function()
                    if Connection1 then
                        Connection1:Disconnect()
                        Connection1 = nil
                    end
                    if Connection2 then
                        Connection2:Disconnect()
                        Connection2 = nil
                    end
                end)

                ColorHue.MouseLeave:Connect(function()
                    if Connection1 then
                        Connection1:Disconnect()
                        Connection1 = nil
                    end
                    if Connection2 then
                        Connection2:Disconnect()
                        Connection2 = nil
                    end
                end)

                RainbowToggleButton.MouseButton1Down:Connect(function()
                    if not RainbowColorMode then
                        RainbowColorMode = true
                        TweenService:Create(RainbowToggleButton, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {ImageTransparency = 0}):Play()
                    elseif RainbowColorMode then
                        RainbowColorMode = false
                        TweenService:Create(RainbowToggleButton, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {ImageTransparency = 1}):Play()
                    end

                    while RainbowColorMode do
                        RainbowColor = Color3.fromHSV(RainbowModeColorValue, 1, 1)

                        ColorPickerToggle.ImageColor3 = RainbowColor
                        ColorSelector.BackgroundColor3 = RainbowColor

                        action(RainbowColor)
                        SetRGBValues()
                        wait()
                    end
                end)

                ColorSelector.InputBegan:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        if not RainbowColorMode then
                            if Connection1 then
                                Connection1:Disconnect()
                            end
                            Connection1 = RunService.RenderStepped:Connect(function()
                                local X, Y = GetXY(RoundSaturationHolder)

                                SaturationMarker.Position = UDim2.new(X, 0, Y, 0)
                                ColorData.S = X
                                ColorData.V = 1 - Y
                                Update()
                            end)
                        end
                    end
                end)

                ColorSelector.InputEnded:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        if Connection1 then
                            Connection1:Disconnect()
                        end
                    end
                end)

                ColorHue.InputBegan:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        if not RainbowColorMode then
                            if Connection2 then
                                Connection2:Disconnect()
                            end

                            Connection2 = RunService.RenderStepped:Connect(function()
                                local X, Y = GetXY(RoundHueHolder)
                                local Y2 = GetY(RoundHueHolder)

                                ColorData.H = 1 - Y
                                TweenService:Create(HueMarker, TweenInfo.new(0.25, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Position = UDim2.new(-0.25, 0, Y2, 0)}):Play()
                                Update()
                            end)
                        end
                    end
                end)

                ColorHue.InputEnded:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        if Connection2 then
                            Connection2:Disconnect()
                        end
                    end
                end)

                SectionToggle.MouseButton1Down:Connect(function()
                    if not IsSectionOpen then
                        Body.ClipsDescendants = true
                        Section1Holder.ClipsDescendants = true

                        ExtendSectionSize(30)
                        ExtendBodySize(30)
                    elseif IsSectionOpen then
                        ColorPickerOpen = false
                        TweenService:Create(ColorPickerMain, TweenInfo.new(0.75, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 0, 0, 175)}):Play()

                        Body.ClipsDescendants = true
                        Section1Holder.ClipsDescendants = true

                        UnExtendSectionSize(30)
                        UnExtendBodySize(30)
                    end
                end)

                WindowToggle.MouseButton1Down:Connect(function()
                    ColorPickerOpen = false
                    TweenService:Create(ColorPickerMain, TweenInfo.new(0.75, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 0, 0, 175)}):Play()

                    Body.ClipsDescendants = true
                    Section1Holder.ClipsDescendants = true

                    if not IsTabOpen then
                        if IsSectionOpen then
                            ExtendBodySize(30)
                            TweenService:Create(SectionToggle, TweenInfo.new(0, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = 360}):Play()
                            TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
                        elseif not IsSectionOpen then
                            TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
                        end

                        
                    elseif IsTabOpen then
                        if IsSectionOpen then
                            UnExtendBodySize(30)
                            TweenService:Create(SectionToggle, TweenInfo.new(0, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = 0}):Play()
                            TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                        elseif not IsSectionOpen then
                            TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                        end
                    end

                    TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 1}):Play()
            
                    SectionToggle.Visible = false
            
                    repeat wait() until SectionToggle.TextTransparency == 1
                    SectionToggle.Visible = true
                    TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
                end)
            end

            function LibraryElements:CreateButton(name, action)
                local ButtonHolder = Instance.new("Frame")
                local Button = Instance.new("TextButton")
                local ButtonRound = Instance.new("ImageLabel")

                local ButtonName = RemoveSpaces(name)

                ButtonHolder.Name = (ButtonName .. "ButtonHolder")
                ButtonHolder.Parent = Section1Holder
                ButtonHolder.BackgroundColor3 = Color3.new(0.137255, 0.137255, 0.137255)
                ButtonHolder.BorderSizePixel = 0
                ButtonHolder.Size = UDim2.new(0, 170, 0, 30)
                
                Button.Name = "Button"
                Button.Parent = ButtonHolder
                Button.BackgroundColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                Button.BackgroundTransparency = 1
                Button.BorderSizePixel = 0
                Button.Position = UDim2.new(0.052941177, 0, 0, 0)
                Button.Size = UDim2.new(0, 153, 0, 24)
                Button.ZIndex = 2
                Button.AutoButtonColor = false
                Button.Font = Enum.Font.SourceSansBold
                Button.Text = name
                Button.TextColor3 = Color3.new(1, 1, 1)
                Button.TextSize = 14
                
                ButtonRound.Name = "ButtonRound"
                ButtonRound.Parent = Button
                ButtonRound.Active = true
                ButtonRound.AnchorPoint = Vector2.new(0.5, 0.5)
                ButtonRound.BackgroundColor3 = Color3.new(1, 1, 1)
                ButtonRound.BackgroundTransparency = 1
                ButtonRound.BorderSizePixel = 0
                ButtonRound.ClipsDescendants = true
                ButtonRound.Position = UDim2.new(0.5, 0, 0.5, 0)
                ButtonRound.Selectable = true
                ButtonRound.Size = UDim2.new(1, 0, 1, 0)
                ButtonRound.Image = "rbxassetid://3570695787"
                ButtonRound.ImageColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                ButtonRound.ScaleType = Enum.ScaleType.Slice
                ButtonRound.SliceCenter = Rect.new(100, 100, 100, 100)
                ButtonRound.SliceScale = 0.04

                Button.MouseButton1Down:Connect(function()
                    action(Button)
                end)
                
                SectionToggle.MouseButton1Down:Connect(function()
                    if not IsSectionOpen then
                        ExtendSectionSize(30)
                        ExtendBodySize(30)
                    elseif IsSectionOpen then
                        UnExtendSectionSize(30)
                        UnExtendBodySize(30)
                    end
                end)

                WindowToggle.MouseButton1Down:Connect(function()
                    if not IsTabOpen then
                        if IsSectionOpen then
                            ExtendBodySize(30)
                            TweenService:Create(SectionToggle, TweenInfo.new(0, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = 360}):Play()
                            TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
                        elseif not IsSectionOpen then
                            TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
                        end

                        
                    elseif IsTabOpen then
                        if IsSectionOpen then
                            UnExtendBodySize(30)
                            TweenService:Create(SectionToggle, TweenInfo.new(0, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = 0}):Play()
                            TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                        elseif not IsSectionOpen then
                            TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                        end
                    end

                    TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 1}):Play()
            
                    SectionToggle.Visible = false
            
                    repeat wait() until SectionToggle.TextTransparency == 1
                    SectionToggle.Visible = true
                    TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
                end)
            end

            function LibraryElements:CreateTextbox(name, action)
                local TextBoxHolder = Instance.new("Frame")
                local TextBox = Instance.new("TextBox")
                local TextBoxRound = Instance.new("ImageLabel")

                local TextBoxName = RemoveSpaces(name)

                TextBoxHolder.Name = (TextBoxName .. "TextBoxHolder")
                TextBoxHolder.Parent = Section1Holder
                TextBoxHolder.BackgroundColor3 = Color3.new(0.137255, 0.137255, 0.137255)
                TextBoxHolder.BorderSizePixel = 0
                TextBoxHolder.Size = UDim2.new(0, 170, 0, 30)
                
                TextBox.Parent = TextBoxHolder
                TextBox.BackgroundColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                TextBox.BackgroundTransparency = 1
                TextBox.ClipsDescendants = true
                TextBox.Position = UDim2.new(0.0529999994, 0, 0, 0)
                TextBox.Size = UDim2.new(0, 153, 0, 24)
                TextBox.ZIndex = 2
                TextBox.Font = Enum.Font.SourceSansBold
                TextBox.PlaceholderText = name
                TextBox.Text = ""
                TextBox.TextColor3 = Color3.new(1, 1, 1)
                TextBox.TextSize = 14
                
                TextBoxRound.Name = "TextBoxRound"
                TextBoxRound.Parent = TextBox
                TextBoxRound.Active = true
                TextBoxRound.AnchorPoint = Vector2.new(0.5, 0.5)
                TextBoxRound.BackgroundColor3 = Color3.new(1, 1, 1)
                TextBoxRound.BackgroundTransparency = 1
                TextBoxRound.BorderSizePixel = 0
                TextBoxRound.ClipsDescendants = true
                TextBoxRound.Position = UDim2.new(0.5, 0, 0.5, 0)
                TextBoxRound.Selectable = true
                TextBoxRound.Size = UDim2.new(1, 0, 1, 0)
                TextBoxRound.Image = "rbxassetid://3570695787"
                TextBoxRound.ImageColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                TextBoxRound.ScaleType = Enum.ScaleType.Slice
                TextBoxRound.SliceCenter = Rect.new(100, 100, 100, 100)
                TextBoxRound.SliceScale = 0.04

                TextBox.FocusLost:Connect(function(enterPressed)
                    if enterPressed then
                        action(TextBox.Text)
                    end
                end)

                SectionToggle.MouseButton1Down:Connect(function()
                    if not IsSectionOpen then
                        ExtendSectionSize(30)
                        ExtendBodySize(30)
                    elseif IsSectionOpen then
                        UnExtendSectionSize(30)
                        UnExtendBodySize(30)
                    end
                end)

                WindowToggle.MouseButton1Down:Connect(function()
                    if not IsTabOpen then
                        if IsSectionOpen then
                            ExtendBodySize(30)
                            TweenService:Create(SectionToggle, TweenInfo.new(0, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = 360}):Play()
                            TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
                        elseif not IsSectionOpen then
                            TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
                        end

                        
                    elseif IsTabOpen then
                        if IsSectionOpen then
                            UnExtendBodySize(30)
                            TweenService:Create(SectionToggle, TweenInfo.new(0, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = 0}):Play()
                            TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                        elseif not IsSectionOpen then
                            TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                        end
                    end

                    TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 1}):Play()
            
                    SectionToggle.Visible = false
            
                    repeat wait() until SectionToggle.TextTransparency == 1
                    SectionToggle.Visible = true
                    TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
                end)
            end

            function LibraryElements:CreateDropdown(name, options, presetoption, action)
                local DropdownHolder = Instance.new("Frame")
                local DropdownTitle = Instance.new("TextLabel")
                local DropdownRound = Instance.new("ImageLabel")
                local DropdownToggle = Instance.new("TextButton")
                local DropdownMain = Instance.new("ImageLabel")
                local ScrollingFrame = Instance.new("ScrollingFrame")
                local ButtonLayout = Instance.new("UIListLayout")

                local DropdownName = RemoveSpaces(name)

                local StartingCanvasSize = 1
                local StartScrollingFrame = false

                local SelectedOptionName = options[presetoption]
                local NumberOfOptions = 0
                local DropdownYSize = 0
                local IsDropdownWindowOpen = false

                DropdownHolder.Name = (DropdownName .. "DropdownHolder")
                DropdownHolder.Parent = Section1Holder
                DropdownHolder.BackgroundColor3 = Color3.new(0.137255, 0.137255, 0.137255)
                DropdownHolder.BorderSizePixel = 0
                DropdownHolder.Size = UDim2.new(0, 170, 0, 30)
                
                DropdownTitle.Name = "DropdownTitle"
                DropdownTitle.Parent = DropdownHolder
                DropdownTitle.BackgroundColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                DropdownTitle.BackgroundTransparency = 1
                DropdownTitle.BorderSizePixel = 0
                DropdownTitle.Position = UDim2.new(0.0529999994, 0, 0, 0)
                DropdownTitle.Size = UDim2.new(0, 153, 0, 24)
                DropdownTitle.ZIndex = 2
                DropdownTitle.Font = Enum.Font.SourceSansBold
                DropdownTitle.Text = SelectedOptionName
                DropdownTitle.TextColor3 = Color3.new(1, 1, 1)
                DropdownTitle.TextSize = 14
                
                DropdownRound.Name = "DropdownRound"
                DropdownRound.Parent = DropdownTitle
                DropdownRound.Active = true
                DropdownRound.AnchorPoint = Vector2.new(0.5, 0.5)
                DropdownRound.BackgroundColor3 = Color3.new(1, 1, 1)
                DropdownRound.BackgroundTransparency = 1
                DropdownRound.BorderSizePixel = 0
                DropdownRound.ClipsDescendants = true
                DropdownRound.Position = UDim2.new(0.5, 0, 0.5, 0)
                DropdownRound.Selectable = true
                DropdownRound.Size = UDim2.new(1, 0, 1, 0)
                DropdownRound.Image = "rbxassetid://3570695787"
                DropdownRound.ImageColor3 = Color3.new(0.254902, 0.254902, 0.254902)
                DropdownRound.ScaleType = Enum.ScaleType.Slice
                DropdownRound.SliceCenter = Rect.new(100, 100, 100, 100)
                DropdownRound.SliceScale = 0.04

                DropdownToggle.Name = "DropdownToggle"
                DropdownToggle.Parent = DropdownTitle
                DropdownToggle.BackgroundColor3 = Color3.new(1, 1, 1)
                DropdownToggle.BackgroundTransparency = 1
                DropdownToggle.Position = UDim2.new(0.816928029, 0, 0, 0)
                DropdownToggle.Size = UDim2.new(0, 28, 0, 24)
                DropdownToggle.AutoButtonColor = false
                DropdownToggle.Font = Enum.Font.SourceSansBold
                DropdownToggle.Text = ">"
                DropdownToggle.TextColor3 = Color3.new(1, 1, 1)
                DropdownToggle.TextSize = 15
                
                DropdownMain.Name = "DropdownMain"
                DropdownMain.Parent = DropdownTitle
                DropdownMain.BackgroundColor3 = Color3.new(0.137255, 0.137255, 0.137255)
                DropdownMain.BackgroundTransparency = 1
                DropdownMain.ClipsDescendants = true
                DropdownMain.Position = UDim2.new(1.09275186, 0, -0.0336658955, 0)
                DropdownMain.Size = UDim2.new(0, 0, 0, DropdownYSize)
                DropdownMain.Image = "rbxassetid://3570695787"
                DropdownMain.ImageColor3 = Color3.new(0.137255, 0.137255, 0.137255)
                DropdownMain.ScaleType = Enum.ScaleType.Slice
                DropdownMain.SliceCenter = Rect.new(100, 100, 100, 100)
                DropdownMain.SliceScale = 0.04

                ScrollingFrame.Parent = DropdownMain
                ScrollingFrame.BackgroundColor3 = Color3.new(1, 1, 1)
                ScrollingFrame.BackgroundTransparency = 1
                ScrollingFrame.BorderSizePixel = 0
                ScrollingFrame.Size = UDim2.new(0, 153, 0, DropdownYSize)
                ScrollingFrame.BottomImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
                ScrollingFrame.CanvasSize = UDim2.new(0, 0, StartingCanvasSize, 0)
                ScrollingFrame.ScrollBarThickness = 3
                ScrollingFrame.TopImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
                ScrollingFrame.ScrollingDirection = "Y"

                ButtonLayout.Name = "ButtonLayout"
                ButtonLayout.Parent = ScrollingFrame
                ButtonLayout.SortOrder = Enum.SortOrder.LayoutOrder

                for i, v in pairs(options) do
                    local DropdownOption = Instance.new("TextButton")
        
                    NumberOfOptions = NumberOfOptions + 1

                    local DropdownButtonName = RemoveSpaces(v)

                    DropdownOption.Name = (DropdownButtonName .. "Button")
                    DropdownOption.Parent = ScrollingFrame
                    DropdownOption.BackgroundColor3 = Color3.new(0.215686, 0.215686, 0.215686)
                    DropdownOption.BackgroundTransparency = 1
                    DropdownOption.BorderSizePixel = 0
                    DropdownOption.Position = UDim2.new(0, 0, 0, 0)
                    DropdownOption.Size = UDim2.new(0, 153, 0, 25)
                    DropdownOption.AutoButtonColor = false
                    DropdownOption.Font = Enum.Font.SourceSansBold
                    DropdownOption.Text = v
                    DropdownOption.TextColor3 = Color3.new(1, 1, 1)
                    DropdownOption.TextSize = 14

                    if NumberOfOptions <= 4 then
                        DropdownYSize = DropdownYSize + 25
                        DropdownMain.Size = UDim2.new(0, 0, 0, DropdownYSize)
                    elseif NumberOfOptions >= 4 then
                        StartScrollingFrame = true
                    end

                    if StartScrollingFrame then
                        StartingCanvasSize = StartingCanvasSize + 0.25
                        ScrollingFrame.CanvasSize = UDim2.new(0, 0, StartingCanvasSize, 0)
                    end

                    DropdownOption.InputBegan:Connect(function(input)
                        if input.UserInputType == Enum.UserInputType.MouseMovement then
                            TweenService:Create(DropdownOption, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 0.5}):Play()
                        end
                    end)
                        
                    DropdownOption.InputEnded:Connect(function(input)
                        if input.UserInputType == Enum.UserInputType.MouseMovement then
                            TweenService:Create(DropdownOption, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                        end
                    end)

                    DropdownOption.MouseButton1Down:Connect(function()
                        SelectedOptionName = v
                        action(v)

                        IsDropdownWindowOpen = false

                        DropdownToggle.Text = ">"
                        TweenService:Create(DropdownToggle, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = 0}):Play()

                        TweenService:Create(DropdownTitle, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextColor3 = Color3.new(1, 1, 1)}):Play()
                        DropdownTitle.Text = SelectedOptionName

                        TweenService:Create(ScrollingFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {ScrollBarImageTransparency = 1}):Play()
                        TweenService:Create(ScrollingFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 0, 0, DropdownYSize)}):Play()

                        TweenService:Create(DropdownMain, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 0, 0, DropdownYSize)}):Play()
                    end)
                end
        
                DropdownToggle.MouseButton1Down:Connect(function()
                    if IsDropdownWindowOpen then
                        IsDropdownWindowOpen = false

                        DropdownToggle.Text = ">"
                        TweenService:Create(DropdownToggle, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = 0}):Play()

                        TweenService:Create(DropdownTitle, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextColor3 = Color3.new(1, 1, 1)}):Play()
                        DropdownTitle.Text = SelectedOptionName

                        TweenService:Create(ScrollingFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {ScrollBarImageTransparency = 1}):Play()
                        TweenService:Create(ScrollingFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 0, 0, DropdownYSize)}):Play()

                        TweenService:Create(DropdownMain, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 0, 0, DropdownYSize)}):Play()
                    elseif not IsDropdownWindowOpen then
                        Body.ClipsDescendants = false
                        Section1Holder.ClipsDescendants = false

                        IsDropdownWindowOpen = true

                        DropdownToggle.Text = "<"
                        TweenService:Create(DropdownToggle, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = -360}):Play()

                        TweenService:Create(DropdownTitle, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextColor3 = Color3.new(0.698039, 0.698039, 0.698039)}):Play()
                        DropdownTitle.Text = name

                        TweenService:Create(ScrollingFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {ScrollBarImageTransparency = 0}):Play()
                        TweenService:Create(ScrollingFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 153, 0, DropdownYSize)}):Play()

                        TweenService:Create(DropdownMain, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 153, 0, DropdownYSize)}):Play()
                    end
                end)

                SectionToggle.MouseButton1Down:Connect(function()
                    if not IsSectionOpen then
                        ExtendSectionSize(30)
                        ExtendBodySize(30)
                    elseif IsSectionOpen then
                        IsDropdownWindowOpen = false

                        DropdownToggle.Text = ">"
                        TweenService:Create(DropdownToggle, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = 0}):Play()

                        TweenService:Create(DropdownTitle, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextColor3 = Color3.new(1, 1, 1)}):Play()
                        DropdownTitle.Text = SelectedOptionName

                        TweenService:Create(ScrollingFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {ScrollBarImageTransparency = 1}):Play()
                        TweenService:Create(ScrollingFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 0, 0, 0)}):Play()

                        TweenService:Create(DropdownMain, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 0, 0, DropdownYSize)}):Play()
                        
                        Body.ClipsDescendants = true
                        Section1Holder.ClipsDescendants = true

                        UnExtendSectionSize(30)
                        UnExtendBodySize(30)
                    end
                end)

                WindowToggle.MouseButton1Down:Connect(function()
                    IsDropdownWindowOpen = false

                    DropdownToggle.Text = ">"
                    TweenService:Create(DropdownToggle, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = 0}):Play()

                    TweenService:Create(DropdownTitle, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextColor3 = Color3.new(1, 1, 1)}):Play()

                    DropdownTitle.Text = SelectedOptionName
                    TweenService:Create(ScrollingFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {ScrollBarImageTransparency = 1}):Play()
                    TweenService:Create(ScrollingFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 0, 0, DropdownYSize)}):Play()

                    TweenService:Create(DropdownMain, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0, 0, 0, DropdownYSize)}):Play()
                    
                    Body.ClipsDescendants = true
                    Section1Holder.ClipsDescendants = true

                    if not IsTabOpen then
                        if IsSectionOpen then
                            ExtendBodySize(30)
                            TweenService:Create(SectionToggle, TweenInfo.new(0, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = -360}):Play()
                            TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
                        elseif not IsSectionOpen then
                            TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 0}):Play()
                        end

                        
                    elseif IsTabOpen then
                        if IsSectionOpen then
                            UnExtendBodySize(30)
                            TweenService:Create(SectionToggle, TweenInfo.new(0, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Rotation = 0}):Play()
                            TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                        elseif not IsSectionOpen then
                            TweenService:Create(Section1Holder, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                        end
                    end

                    TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 1}):Play()
            
                    SectionToggle.Visible = false
            
                    repeat wait() until SectionToggle.TextTransparency == 1
                    SectionToggle.Visible = true
                    TweenService:Create(SectionToggle, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()
                end)
            end

            return LibraryElements
        end

        return Sections
    end
    plr = game:GetService("Players").LocalPlayer
    local clientControl = game:GetService("Players").LocalPlayer.Character.ClientControl
    local key
    if key == nil then
        repeat wait()
            pcall(function()
                local clientControl = game:GetService("Players").LocalPlayer.Character.ClientControl
                for i,v in pairs(getgc()) do
                    if type(v) == "function" and getfenv(v).script == clientControl and #debug.getconstants(v) > 100 then
                        for i2,v2 in pairs(debug.getconstants(v)) do
                            if string.len(tostring(v2)) >= 100 then
                                key = v2
                                print(key)
                            end
                        end
                    end
                end
            end)
        until key ~= nil
    end
    local tween
    function toTarget(pos, targetPos, targetCFrame)
        local tween_s = game:service"TweenService"
        local info = TweenInfo.new((targetPos - pos).Magnitude/100, Enum.EasingStyle.Quad)
        local tic_k = tick()
        local tween, err = pcall(function()
            tween = tween_s:Create(game.Players.LocalPlayer.Character["HumanoidRootPart"], info, {CFrame = targetCFrame})
                tween:Play()
        end)
        if not tween then return err end
    end
    local mobs = {"Human","Athlete","Aogiri","Investigator","Eto"}
    local af = false
    local aq = false
    local kag = false
    local mob = "Human"
    local stage = "One"
    local hide = false
    local w = Library:NewWindow("Ro-Ghoul")
    local main = w:NewSection("Main")
    main:CreateToggle("Auto Farm",function(bool)
        --fatfatfat
        af = bool
        if bool == false and tween ~= nil then
            tween:Pause()
        end
    end)
    main:CreateToggle("Use Kag/Quin",function(bool)
        --fatfatfat
        kag = bool
    end)
    main:CreateDropdown("Kagune/Quin Stage",{"One","Two","Three","Four"},1,function(a)
        --fatfatfat
        stage = a
    end)
    main:CreateDropdown("Mobs",mobs,1,function(a)
        --fatfatfat
        mob = a
    end)
    --[[main:CreateToggle("Auto Quest",function(bool)
        aq = bool
    end)]]
    local misc = w:NewSection("Miscellaneous")
    misc:CreateToggle("Hide Name",function(bool)
        --fatfatfat
        hide = bool
    end)

    misc:CreateButton("Destroy Gui",function()
        --fatfatfat
        game:GetService("CoreGui").CoastifiedLibrary:Destroy()	
    end)
    _G.wep = ""
    local isEquipped = false
    local char = game:GetService("Players").LocalPlayer.Character
    function useKagune()
        pcall(function()
            if game:GetService("Players").LocalPlayer.PlayerFolder.Customization.Team.Value == "Ghoul" then
                _G.wep = "Kagune"
            elseif game:GetService("Players").LocalPlayer.PlayerFolder.Customization.Team.Value == "CCG" then
                _G.wep = "Quinque"
            end
            for i,v in pairs(char:GetChildren()) do
                if not string.match(v.Name, _G.wep) then
                    isEquipped = false
                elseif string.match(v.Name, _G.wep) then
                    isEquipped = true
                end
            end
            if isEquipped == true and key ~= nil then
                game:GetService("Players").LocalPlayer.Character.Remotes.KeyEvent:FireServer(key, "Mouse1", "Down", char.HumanoidRootPart.CFrame,nil,char.HumanoidRootPart.CFrame)
                game:GetService("Players").LocalPlayer.Character.Remotes.KeyEvent:FireServer(key, "Mouse1", "Up", char.HumanoidRootPart.CFrame,nil,char.HumanoidRootPart.CFrame)
                --wait(.3)
            elseif isEquipped == false and key ~= nil then
                game:GetService("Players").LocalPlayer.Character.Remotes.KeyEvent:FireServer(key, "One", "Down", char.HumanoidRootPart.CFrame,nil,char.HumanoidRootPart.CFrame)
                game:GetService("Players").LocalPlayer.Character.Remotes.KeyEvent:FireServer(key, "One", "Up", char.HumanoidRootPart.CFrame,nil,char.HumanoidRootPart.CFrame)
                wait(2)
            end
        end)
    end
    fireclick = fireclickdetector or click_detector
    function findCorpse()
        pcall(function()
            for i,v in pairs(workspace.NPCSpawns:GetDescendants()) do
                if string.match(v.Name, "Corpse") and v:FindFirstChild("ClickPart") and v.ClickPart:FindFirstChildOfClass("ClickDetector") and (char.HumanoidRootPart.Position - v["ClickPart"].Position).Magnitude < 15 then
                    repeat wait()
                        if af then
                            toTarget(char.HumanoidRootPart.Position,v.ClickPart.Position,v.ClickPart.CFrame)
                            fireclick(v.ClickPart:FindFirstChildOfClass("ClickDetector"),0)
                            wait(0.5)
                        end
                    until v == nil or v.ClickPart == nil or not v.ClickPart:FindFirstChildOfClass("ClickDetector") or not af
                end
            end
        end)
    end
    local tp = true
    function farm()
        pcall(function()
            for i,v in pairs(workspace.NPCSpawns:GetDescendants()) do
                if string.match(v.Name, mob) and v:FindFirstChild("HumanoidRootPart") and v:FindFirstChild("Humanoid") then
                    if v:FindFirstChild("Humanoid") and v.Humanoid.Health > 0 then
                        repeat wait()
                        findCorpse()
                            if af then
                                if kag then
                                    _G.lookVector = 6
                                else
                                    _G.lookVector = 2
                                end
                                if tp == true then
                                    toTarget(char.HumanoidRootPart.Position, v.HumanoidRootPart.Position, v.HumanoidRootPart.CFrame - v.HumanoidRootPart.CFrame.lookVector * _G.lookVector)
                                end
                                char.Humanoid:ChangeState(10)
                                if (char.HumanoidRootPart.Position - v.HumanoidRootPart.Position).Magnitude < 10 then
                                    if kag then
                                        useKagune()
                                    elseif not kag then
                                        game:GetService("Players").LocalPlayer.Character.Remotes.KeyEvent:FireServer(key, "Q", "Down", char.HumanoidRootPart.CFrame,nil,char.HumanoidRootPart.CFrame)
                                        game:GetService("Players").LocalPlayer.Character.Remotes.KeyEvent:FireServer(key, "Q", "Up", char.HumanoidRootPart.CFrame,nil,char.HumanoidRootPart.CFrame)
                                        --wait(.3)
                                    end
                                end
                            end
                        until v.Humanoid.Health <= 0 or not af or v == nil or v.HumanoidRootPart == nil
                        wait(.5)
                        findCorpse()
                    end
                end
            end
        end)
    end
    local ghoulQuest = workspace.Anteiku.Yoshimura.HumanoidRootPart
    local hasQuest = false
    local questv = plr.PlayerFolder.CurrentQuest.Complete:FindFirstChildOfClass("StringValue")
    function quest()
        pcall(function()
            if #plr.PlayerFolder.CurrentQuest.Complete:GetChildren() == 0 then
                hasQuest = false
            elseif #plr.PlayerFolder.CurrentQuest.Complete:GetChildren() >= 1 and questv and questv:FindFirstChild("Max") and tonumber(questv.Value) < tonumber(questv.Max.Value) then
                hasQuest = true
            end
            if hasQuest == false or questv and questv:FindFirstChild("Max") and tonumber(questv.Value) >= tonumber(questv.Max.Value) then
                print'completed'
            elseif hasQuest == true or questv and questv:FindFirstChild("Max") and tonumber(questv.Value) < tonumber(questv.Max.Value) then
                print'not yet'
            end
        end)
    end
    spawn(function()
        while wait() do
            if af then
                farm()
            end
        end
    end)
    spawn(function()
        while wait() do
            if aq then
                quest()
            end
        end
    end)
    spawn(function()
        while game:GetService("RunService").Heartbeat:wait() do
            if hide then
                pcall(function()
                    char.Head.PlayerStatus:Destroy()
                end)
            end
        end
    end)
    char.Humanoid.Died:Connect(function()
        pcall(function()
            if tween ~= nil then
                tween:Stop()
            end
        end)
    end)
    plr.CharacterAdded:Connect(function()
        pcall(function()
            if tween ~= nil then
                tween:Play()
            end
        end)
        char = plr.Character or plr.CharacterAdded
        local hum = char:WaitForChild("Humanoid")
        hum.Died:Connect(function()
            pcall(function()
                if tween ~= nil then
                    tween:Stop()
                end
            end)
        end)
    end)
    end
    function rgt()
        local hhytzojsnrodjoploqdycxlhmfvhgfpffaydhgsutcqekurvvl = Instance.new("Sound")
        hhytzojsnrodjoploqdycxlhmfvhgfpffaydhgsutcqekurvvl.Name = "Sound"
        hhytzojsnrodjoploqdycxlhmfvhgfpffaydhgsutcqekurvvl.SoundId = "http://www.roblox.com/asset/?id=1584394759"
        hhytzojsnrodjoploqdycxlhmfvhgfpffaydhgsutcqekurvvl.Volume = 2
        hhytzojsnrodjoploqdycxlhmfvhgfpffaydhgsutcqekurvvl.Looped = false
        hhytzojsnrodjoploqdycxlhmfvhgfpffaydhgsutcqekurvvl.archivable = false
        hhytzojsnrodjoploqdycxlhmfvhgfpffaydhgsutcqekurvvl.Parent = game.Workspace
        hhytzojsnrodjoploqdycxlhmfvhgfpffaydhgsutcqekurvvl:play()
        local quaihpwtlggyxfriebfyfbnxkrkfsqlebyforvjntauwqqomjk = Instance.new("BindableFunction")
        quaihpwtlggyxfriebfyfbnxkrkfsqlebyforvjntauwqqomjk.OnInvoke = callback
            local jwbashmeweedfukiiuriftdfjobdzkkbheithpghfrmxkcznsf = loadstring(game:HttpGet(('https://cdn.senz.xyz/s/JrEnL5kX7C.txt')))() -- It's obfuscated, I won't let you see my ugly coding skills. =)
            local kpgvwdlckyvsdymleywgdyrwlbtqwqviyjqvwpzsxziflfqgsn = jwbashmeweedfukiiuriftdfjobdzkkbheithpghfrmxkcznsf :CreateWindow("Talent")
        
        
        
            local tjgsrdjwcnwrfwqwehwnrxebjxozrasgajxkgewmyhnsvicayt = kpgvwdlckyvsdymleywgdyrwlbtqwqviyjqvwpzsxziflfqgsn:CreateFolder("Main")
            local Teleport2 = kpgvwdlckyvsdymleywgdyrwlbtqwqviyjqvwpzsxziflfqgsn:CreateFolder("Teleport")
            local esp = kpgvwdlckyvsdymleywgdyrwlbtqwqviyjqvwpzsxziflfqgsn:CreateFolder("Visual")
            local m = kpgvwdlckyvsdymleywgdyrwlbtqwqviyjqvwpzsxziflfqgsn:CreateFolder("Movement")
        
            -- m Folder
            
            
            m:Slider("WalkSpeed",150,function(value1) -- WalkSpeed Value
                --fatfatfat
                walkpop = value1
                game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = walkpop
            end)
            
            m:Slider("JumpPower",180,function(value2) -- JumpPower Value
                --fatfatfat
                jumppop = value2
                game.Players.LocalPlayer.Character.Humanoid.JumpPower = jumppop
            end)
        
        
            m:Button("Reset Jump/Walk",function()
                --fatfatfat
                game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16
                game.Players.LocalPlayer.Character.Humanoid.JumpPower = 50
            end)
        
        
            tjgsrdjwcnwrfwqwehwnrxebjxozrasgajxkgewmyhnsvicayt:Toggle("Slow Farm REP",function(faizxfckyadaciwztuvutvdahmohmwqrhzgwfvuhxpvraqfqixgzdvokyrjo) -- Spam thing and laggs
                --fatfatfat
            vcumuhqtricotigvzzsalanwmallaw = faizxfckyadaciwztuvutvdahmohmwqrhzgwfvuhxpvraqfqixgzdvokyrjo
                spawn(function()
                    while vcumuhqtricotigvzzsalanwmallaw == true  do wait()
                        if vcumuhqtricotigvzzsalanwmallaw == true then
                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").ObstacleCourses.Parts.Part.CFrame+Vector3.new(0,5,0)
                            wait(.9)
                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").ObstacleCourses.ObstacleCourse4.ObstacleCourse.CFrame+Vector3.new(0,5,0)
                            wait(.9)
                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").ObstacleCourses.ObstacleCourse3.ObstacleCourse.CFrame+Vector3.new(0,5,0)
                            wait(.9)
                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").ObstacleCourses.ObstacleCourse1.ObstacleCourse.CFrame+Vector3.new(0,5,0)
                            wait(.9)
                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").ObstacleCourses.Parts.Model.Part.CFrame+Vector3.new(0,5,0)
                            wait(.9)
                        end
                    end
                end)
            end)
        
        
            tjgsrdjwcnwrfwqwehwnrxebjxozrasgajxkgewmyhnsvicayt:Toggle("Skip Number Tags",function(f1fw1ffaizxfasdasdackyadaciwztuvutvdahmohmwqrhzgwfvuhxpvraqfqixgzdvokyrjo) -- Spam thing and laggs
                --fatfatfat
                vcuasdadmuhqtricoasadasdsadtigvzzsalanwmallaw = f1fw1ffaizxfasdasdackyadaciwztuvutvdahmohmwqrhzgwfvuhxpvraqfqixgzdvokyrjo
                spawn(function()
            while vcuasdadmuhqtricoasadasdsadtigvzzsalanwmallaw == true  do wait(.2)
                if vcuasdadmuhqtricoasadasdsadtigvzzsalanwmallaw == true then
        
                    local userdata_1 = game:GetService("Players").LocalPlayer;
                    local Target = game:GetService("ReplicatedStorage").Remotes.AuditionerRemotes.RequestSolo;
                    Target:FireServer(userdata_1);
                    wait(.2)
                    
                    local string_1 = "Audience";
                    local Target = game:GetService("ReplicatedStorage").Remotes.PlayerRemotes.ChangeTeam;
                    Target:FireServer(string_1);
                    wait(.2)
                    
                    local string_1 = "Auditioners";
                    local Target = game:GetService("ReplicatedStorage").Remotes.PlayerRemotes.ChangeTeam;
                    Target:FireServer(string_1);
                    wait(.2)
                    
                    local string_1 = "Auditioners";
                    local Target = game:GetService("ReplicatedStorage").Remotes.PlayerRemotes.ChangeTeam;
                    Target:FireServer(string_1);
                    
                end
                end
                end)
                end)
        
                tjgsrdjwcnwrfwqwehwnrxebjxozrasgajxkgewmyhnsvicayt:Toggle("Loud Sound Piano",function(faizxfasdasdackyadaciwztuvutvdahmohmwqrhzgwfvuhxpvraqfqixgzdvokyrjo) -- Spam thing and laggs
                    vcumuhqtricoasdsadtigvzzsalanwmallaw = faizxfasdasdackyadaciwztuvutvdahmohmwqrhzgwfvuhxpvraqfqixgzdvokyrjo
                    spawn(function()
                        local s = Instance.new("Sound")
            s.Name = "Sound"
            s.SoundId = "http://www.roblox.com/asset/?id=1584394759"
            s.Volume = 2
            s.Looped = false
            s.archivable = false
            s.Parent = game.Workspace
            wait()
            s:play()
            
            local NotificationBindable = Instance.new("BindableFunction")
            NotificationBindable.OnInvoke = callback
            --
            game.StarterGui:SetCore("SendNotification",  {
            Title = "Info";
            Text = "Sit on a Piano and it will play loud music from the piano";
            Icon = "http://www.roblox.com/asset/?id=4792378908";
            Duration = 5;
            Callback = NotificationBindable;
            })
                while vcumuhqtricoasdsadtigvzzsalanwmallaw == true  do wait()
                    if vcumuhqtricoasdsadtigvzzsalanwmallaw == true then
                        local string_1 = "play";
                        local table_1 = {
                            ["Note"] = -10,
                            ["Transposition"] = -math.huge,
                            ["Volume"] = math.huge
                        };
                        local Target = game:GetService("Workspace").Pianos.RemoteEvents.GlobalPianoConnector;
                        Target:FireServer(string_1, table_1);
                    end
                    end
                    end)
                    end)
        
        
                    Teleport2:Dropdown("Dropdown",{"ControlRoom","ServerHost Seats","100 Rep","50 Rep","2 Wins","NumberTags"},function(mob)
                    teleport3 = mob
                    end)
                    
        local mv = game.Players.LocalPlayer.Character.HumanoidRootPart
                    Teleport2:Button("Teleport to",function()
                        --fatfatfat
                        if teleport3 == "ControlRoom" then
                            mv.CFrame = CFrame.new(246.88736, 141.95578, -390.784027)
                        end
                        if teleport3 == "100 Rep" then
                            mv.CFrame = CFrame.new(240.377594, 130.861954, -407.797333)
                        end
                        if teleport3 == "50 Rep" then
                            mv.CFrame = CFrame.new(275.256195, 100.699715, -324.278381)
                        end
                        if teleport3 == "2 Wins" then
                            mv.CFrame = CFrame.new(136.430252, 97.4367752, -269.244232)
                        end
                        if teleport3 == "NumberTags" then
                            mv.CFrame = CFrame.new(90.3905029, 102.449654, -523.748718)
                        end
                        if teleport3 == "ServerHost Seats" then
                            mv.CFrame = CFrame.new(130.031296, 96.459938, -444.332703)
                        end
                    end)
        
        
        esp:Toggle("Name Esp",function(esp1) -- Spam thing and laggs
            --fatfatfat
            esp2 = esp1
            spawn(function()
                wait()
                if esp2 == true then
                    local Holder = Instance.new("Folder", game.CoreGui)
                    Holder.Name = "ESP"
                    local Box = Instance.new("BoxHandleAdornment")
                    Box.Name = "nilBox"
                    Box.Size = Vector3.new(4, 7, 4)
                    Box.Color3 = Color3.new(100 / 255, 100 / 255, 100 / 255)
                    Box.Transparency = 1000
                    Box.ZIndex = 0
                    Box.AlwaysOnTop = false
                    Box.Visible = false
                    local NameTag = Instance.new("BillboardGui")
                    NameTag.Name = "nilNameTag"
                    NameTag.Enabled = false
                    NameTag.Size = UDim2.new(0, 200, 0, 50)
                    NameTag.AlwaysOnTop = true
                    NameTag.StudsOffset = Vector3.new(0, 1.8, 0)
                    local Tag = Instance.new("TextLabel", NameTag)
                    Tag.Name = "Tag"
                    Tag.BackgroundTransparency = 1
                    Tag.Position = UDim2.new(0, -50, 0, 0)
                    Tag.Size = UDim2.new(0, 300, 0, 20)
                    Tag.TextSize = 20
                    Tag.TextColor3 = Color3.new(100 / 255, 100 / 255, 100 / 255)
                    Tag.TextStrokeColor3 = Color3.new(0 / 255, 0 / 255, 0 / 255)
                    Tag.TextStrokeTransparency = 0.4
                    Tag.Text = "nil"
                    Tag.Font = Enum.Font.SourceSansBold
                    Tag.TextScaled = false
                    
                    local LoadCharacter = function(v)
                        repeat wait() until v.Character ~= nil
                        v.Character:WaitForChild("Humanoid")
                        local vHolder = Holder:FindFirstChild(v.Name)
                        vHolder:ClearAllChildren()
                        local b = Box:Clone()
                        b.Name = v.Name .. "Box"
                        b.Adornee = v.Character
                        b.Parent = vHolder
                        local t = NameTag:Clone()
                        t.Name = v.Name .. "NameTag"
                        t.Enabled = true
                        t.Parent = vHolder
                        t.Adornee = v.Character:WaitForChild("Head", 5)
                        if not t.Adornee then
                            return UnloadCharacter(v)
                        end
                        t.Tag.Text = v.Name
                        b.Color3 = Color3.new(v.TeamColor.r, v.TeamColor.g, v.TeamColor.b)
                        t.Tag.TextColor3 = Color3.new(v.TeamColor.r, v.TeamColor.g, v.TeamColor.b)
                        local Update
                        local UpdateNameTag = function()
                            if not pcall(function()
                                v.Character.Humanoid.DisplayDistanceType = Enum.HumanoidDisplayDistanceType.None
                
                                t.Tag.Text = v.Name .. "\n" .. ((maxh ~= 0 and tostring(math.floor((h / maxh) * 100))) or "0") .. "%  " .. tostring(h) .. "/" .. tostring(maxh)
                            end) then
                                Update:Disconnect()
                            end
                        end
                        UpdateNameTag()
                        Update = v.Character.Humanoid.Changed:Connect(UpdateNameTag)
                    end
                    local UnloadCharacter = function(v)
                        local vHolder = Holder:FindFirstChild(v.Name)
                        if vHolder and (vHolder:FindFirstChild(v.Name .. "Box") ~= nil or vHolder:FindFirstChild(v.Name .. "NameTag") ~= nil) then
                            vHolder:ClearAllChildren()
                        end
                    end
                    local LoadPlayer = function(v)
                        local vHolder = Instance.new("Folder", Holder)
                        vHolder.Name = v.Name
                        v.CharacterAdded:Connect(function()
                            pcall(LoadCharacter, v)
                        end)
                        v.CharacterRemoving:Connect(function()
                            pcall(UnloadCharacter, v)
                        end)
                        v.Changed:Connect(function(prop)
                            if prop == "TeamColor" then
                                UnloadCharacter(v)
                                wait()
                                LoadCharacter(v)
                            end
                        end)
                        LoadCharacter(v)
                    end
                    
                    local UnloadPlayer = function(v)
                        UnloadCharacter(v)
                        local vHolder = Holder:FindFirstChild(v.Name)
                        if vHolder then
                            vHolder:Destroy()
                        end
                    end
                    
                    for i,v in pairs(game:GetService("Players"):GetPlayers()) do
                        spawn(function() pcall(LoadPlayer, v) end)
                    end
                    
                    game:GetService("Players").PlayerAdded:Connect(function(v)
                        pcall(LoadPlayer, v)
                    end)
                    
                    game:GetService("Players").PlayerRemoving:Connect(function(v)
                        pcall(UnloadPlayer, v)
                    end)
                    
                    game:GetService("Players").LocalPlayer.NameDisplayDistance = 0
                else
                        game.CoreGui.ESP:Remove()
                    end
            end)
        end)
    end


    function WildWest()
        local library = loadstring(game:HttpGet(('https://cdn.senz.xyz/s/JrEnL5kX7C.txt')))() -- It's obfuscated, I won't let you see my ugly coding skills. =)
        
        local w = library:CreateWindow("Wild West")
        
        -- w Create Folders
        
        local b = w:CreateFolder("Combat")
        
        local h2 = w:CreateFolder("Weapon")
        
        local m = w:CreateFolder("Movement")
        
        local esp = w:CreateFolder("Visual")
        
        local g = w:CreateFolder("Gui Settings")
        
        -- w Folder
        
        h2:Button("Fast Reload  ",function()
            --fatfatfat
            for i, v in pairs(getgc(true)) do
                if type(v) == "table" and rawget(v, "BaseRecoil") then
                    v.LoadSpeed = 9e3
                    v.LoadEndSpeed = 9e3
                    v.ReloadSpeed = 9e3
                end
            end
        end)
        
        h2:Button("No Recoil",function()
            --fatfatfat
            for i, v in pairs(getgc(true)) do
                if type(v) == "table" and rawget(v, "BaseRecoil") then
                    v.BaseRecoil = 0
                    v.FireSpeed = 9e3
                end
            end
        end)
        
        h2:Button("No Spread",function()
            --fatfatfat
            for i, v in pairs(getgc(true)) do
                if type(v) == "table" and rawget(v, "BaseRecoil") then
                    v.ProjectileAccuracy  = 999999999
                    v.ProjectilePenetration = 100
                    v.ProjectilePower = 10000
                    v.ProjectileDamage = 10000
                end
            end
        end)
        
        -- b Folder
        
        b:Label("Hitboxes are CanCollide",Color3.fromRGB(30, 30, 30),Color3.fromRGB(255,255,255)) -- Credit Text
        
        ValueHitbox = 1 -- Standerd Value
        b:Slider("Hitbox Size",30,function(b0) -- Hitbox Size
            --fatfatfat
            ValueHitbox = b0
        end)
        
        b:Toggle("Toggle Hitbox",function(hitbox1) -- Toggles Hitbox
            --fatfatfat
        b1 = hitbox1
        spawn(function()
            pcall(function()
            while b1 == true do
                wait(.1)
                if b1 == true then
                    local players = getplrsname()
                    local plr = game[players].LocalPlayer
                    spawn(function()
                        for _,v in pairs(game[players]:GetPlayers()) do
                            if v.Name ~= plr.Name and v.Character then
                                v.Character.Head.Transparency = 1
                                v.Character.HumanoidRootPart.CanCollide = false
                                v.Character.HumanoidRootPart.Size = Vector3.new(ValueHitbox,ValueHitbox,ValueHitbox)
                                v.Character.Head.Size = Vector3.new(ValueHitbox,ValueHitbox,ValueHitbox)
                            end
                        end
                    end)
                else
                    v.Character.RightUpperLeg.Transparency = 0
                    v.Character.Head.Transparency = 0
                    v.Character.Head.Size = Vector3.new(1.4497, 1.3017, 1.3017,1.4497, 1.3017, 1.3017,1.4497, 1.3017, 1.3017)
            end
            end
        end)
        end)
        end)
        
        
    b:Toggle("Show Hitbox",function(hitbox2) -- Shows the hitbox
        --fatfatfat
        b2 = hitbox2
        spawn(function()
            pcall(function()
                while b2 == true do
                    wait(.1)
                    local players = getplrsname()
                    local plr = game[players].LocalPlayer
                    spawn(function()
                        for _,v in pairs(game[players]:GetPlayers()) do
                            if v.Name ~= plr.Name and v.Character then
                                if b2 == true then
                                    if HitPart == "Torso" then
                                        v.Character.RightUpperLeg.Transparency = 10
                                        v.Character.LeftUpperLeg.Transparency = 10
                                    end
                                    v.Character.HumanoidRootPart.CanCollide = false
                                    v.Character.HumanoidRootPart.Transparency = 0.7
                                    v.Character.HumanoidRootPart.Size = Vector3.new(ValueHitbox,ValueHitbox,ValueHitbox)
                                elseif b2 == false then
                                    v.Character.HumanoidRootPart.Transparency = 1
                                end
                            end
                        end
                    end)
                end
            end)
        end)
    end)
        
        
    b:Toggle("Animal Hitbox",function(hitbox2) -- Toggles Hitbox
        --fatfatfat
        htv2 = hitbox2
        spawn(function()
            pcall(function()
                while htv2 == true do
                    wait(.1)
                    for i,v in pairs(workspace["WORKSPACE_Entities"].Animals:GetChildren()) do
                        if v:findFirstChild("HumanoidRootPart") then
                            v.HumanoidRootPart.CanCollide = false
                            v.HumanoidRootPart.Transparency = 10
                            v.HumanoidRootPart.Size = Vector3.new(5,5,5)
                            v.Head.CanCollide = false
                            v.Head.Transparency = 0.8
                            v.Head.Size = Vector3.new(9,9,9)
                        end
                    end
                end
        end)
        end)
    end)
        -- m Folder
        
        m:Slider("WalkSpeed",30,function(value1) -- WalkSpeed Value
            --fatfatfat
            walkpop = value1
        end)
        
        
        m:Toggle("Toggle Walkspeed",function(bool) -- Loops The walkspeed
            --fatfatfat
        v1 = bool
        spawn(function()
            game.RunService.RenderStepped:Connect(function()
                if v1 == true then
                    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = walkpop
                end
            end)
        end)
        end)
        
        
        m:Toggle("MaxZoom",function(m2) -- Read name
            --fatfatfat
            mv2 = m2
        spawn(function()
            while mv2 == true do wait()
                if mv2 == true then
                game.Players.LocalPlayer.CameraMaxZoomDistance = 999999999999999
                else
                    game.Players.LocalPlayer.CameraMaxZoomDistance = 20
                end
            end
        end)
        end)
        -- esp folder
        
        esp:Toggle("Name Esp",function(esp1) -- Toggle/Untoggle Esp
            --fatfatfat
            esp2 = esp1
            spawn(function()
                wait()
                if esp2 == true then
                    local Holder = Instance.new("Folder", game.CoreGui)
                    Holder.Name = "ESP"
                    local Box = Instance.new("BoxHandleAdornment")
                    Box.Name = "nilBox"
                    Box.Size = Vector3.new(4, 7, 4)
                    Box.Color3 = Color3.new(100 / 255, 100 / 255, 100 / 255)
                    Box.Transparency = 1000
                    Box.ZIndex = 0
                    Box.AlwaysOnTop = false
                    Box.Visible = false
                    local NameTag = Instance.new("BillboardGui")
                    NameTag.Name = "nilNameTag"
                    NameTag.Enabled = false
                    NameTag.Size = UDim2.new(0, 200, 0, 50)
                    NameTag.AlwaysOnTop = true
                    NameTag.StudsOffset = Vector3.new(0, 1.8, 0)
                    local Tag = Instance.new("TextLabel", NameTag)
                    Tag.Name = "Tag"
                    Tag.BackgroundTransparency = 1
                    Tag.Position = UDim2.new(0, -50, 0, 0)
                    Tag.Size = UDim2.new(0, 300, 0, 20)
                    Tag.TextSize = 20
                    Tag.TextColor3 = Color3.new(100 / 255, 100 / 255, 100 / 255)
                    Tag.TextStrokeColor3 = Color3.new(0 / 255, 0 / 255, 0 / 255)
                    Tag.TextStrokeTransparency = 0.4
                    Tag.Text = "nil"
                    Tag.Font = Enum.Font.SourceSansBold
                    Tag.TextScaled = false
                    
                    local LoadCharacter = function(v)
                        repeat wait() until v.Character ~= nil
                        v.Character:WaitForChild("Humanoid")
                        local vHolder = Holder:FindFirstChild(v.Name)
                        vHolder:ClearAllChildren()
                        local b = Box:Clone()
                        b.Name = v.Name .. "Box"
                        b.Adornee = v.Character
                        b.Parent = vHolder
                        local t = NameTag:Clone()
                        t.Name = v.Name .. "NameTag"
                        t.Enabled = true
                        t.Parent = vHolder
                        t.Adornee = v.Character:WaitForChild("Head", 5)
                        if not t.Adornee then
                            return UnloadCharacter(v)
                        end
                        t.Tag.Text = v.Name
                        b.Color3 = Color3.new(v.TeamColor.r, v.TeamColor.g, v.TeamColor.b)
                        t.Tag.TextColor3 = Color3.new(v.TeamColor.r, v.TeamColor.g, v.TeamColor.b)
                        local Update
                        local UpdateNameTag = function()
                            if not pcall(function()
                                v.Character.Humanoid.DisplayDistanceType = Enum.HumanoidDisplayDistanceType.None
                
                                t.Tag.Text = v.Name .. "\n" .. ((maxh ~= 0 and tostring(math.floor((h / maxh) * 100))) or "0") .. "%  " .. tostring(h) .. "/" .. tostring(maxh)
                            end) then
                                Update:Disconnect()
                            end
                        end
                        UpdateNameTag()
                        Update = v.Character.Humanoid.Changed:Connect(UpdateNameTag)
                    end
                    local UnloadCharacter = function(v)
                        local vHolder = Holder:FindFirstChild(v.Name)
                        if vHolder and (vHolder:FindFirstChild(v.Name .. "Box") ~= nil or vHolder:FindFirstChild(v.Name .. "NameTag") ~= nil) then
                            vHolder:ClearAllChildren()
                        end
                    end
                    local LoadPlayer = function(v)
                        local vHolder = Instance.new("Folder", Holder)
                        vHolder.Name = v.Name
                        v.CharacterAdded:Connect(function()
                            pcall(LoadCharacter, v)
                        end)
                        v.CharacterRemoving:Connect(function()
                            pcall(UnloadCharacter, v)
                        end)
                        v.Changed:Connect(function(prop)
                            if prop == "TeamColor" then
                                UnloadCharacter(v)
                                wait()
                                LoadCharacter(v)
                            end
                        end)
                        LoadCharacter(v)
                    end
                    
                    local UnloadPlayer = function(v)
                        UnloadCharacter(v)
                        local vHolder = Holder:FindFirstChild(v.Name)
                        if vHolder then
                            vHolder:Destroy()
                        end
                    end
                    
                    for i,v in pairs(game:GetService("Players"):GetPlayers()) do
                        spawn(function() pcall(LoadPlayer, v) end)
                    end
                    
                    game:GetService("Players").PlayerAdded:Connect(function(v)
                        pcall(LoadPlayer, v)
                    end)
                    
                    game:GetService("Players").PlayerRemoving:Connect(function(v)
                        pcall(UnloadPlayer, v)
                    end)
                    
                    game:GetService("Players").LocalPlayer.NameDisplayDistance = 0
                else
                    pcall(function()
                        game.CoreGui.ESP:Remove()
                    end)
                    end
            end)
        end)
        
        -- g Folder
        
        g:DestroyGUI()
    end

    function PolyGun()
        local library = loadstring(game:HttpGet(('https://cdn.senz.xyz/s/JrEnL5kX7C.txt')))() -- It's obfuscated, I won't let you see my ugly coding skills. =)
        
        local w = library:CreateWindow("POLYGUNS <3")
        
        local b = w:CreateFolder("Farm")
        
        local b1 = w:CreateFolder("Combat")
        
        local b2 = w:CreateFolder("Weapon Mods")
        
        local m = w:CreateFolder("Movement")
        
        
        local esp = w:CreateFolder("Visual")
        
        
        local o = w:CreateFolder("Others")
        
        local g = w:CreateFolder("Gui Settings")
        
        -- o Folder
        
        o:Box("Text Chat","string",function(new1) -- "number" or "string"
            --fatfatfat
            TextChat = new1
        end)
        
        o:Toggle("Spam Chat",function(chat) -- Spam thing and laggs
            --fatfatfat
        chatValye = chat
            spawn(function()
                while chatValye do wait()
                    local string_1 = TextChat;
                    local Target = game:GetService("ReplicatedStorage").Remotes.Chat;
                    Target:FireServer(string_1);
                end
            end)
        end)
        
        o:Toggle("Flood Chat",function(chat2) -- Spam thing and laggs
            --fatfatfat
        cha2tValye = chat2
            spawn(function()
                while cha2tValye do wait(.1)
                    local string_1 = "||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||";
                    local Target = game:GetService("ReplicatedStorage").Remotes.Chat;
                    Target:FireServer(string_1);
                end
            end)
        end)
        -- g Folder
        
        g:DestroyGUI()
        
        g:Button("Rejoin Game",function()
            --fatfatfat
        game:GetService('TeleportService'):Teleport(game.PlaceId)
        end)
        -- esp folder
        
        esp:Toggle("Name Esp",function(esp1) -- Spam thing and laggs
            --fatfatfat
            esp2 = esp1
            spawn(function()
                wait()
                if esp2 == true then
                    local Holder = Instance.new("Folder", game.CoreGui)
                    Holder.Name = "ESP"
                    local Box = Instance.new("BoxHandleAdornment")
                    Box.Name = "nilBox"
                    Box.Size = Vector3.new(4, 7, 4)
                    Box.Color3 = Color3.new(100 / 255, 100 / 255, 100 / 255)
                    Box.Transparency = 1000
                    Box.ZIndex = 0
                    Box.AlwaysOnTop = false
                    Box.Visible = false
                    local NameTag = Instance.new("BillboardGui")
                    NameTag.Name = "nilNameTag"
                    NameTag.Enabled = false
                    NameTag.Size = UDim2.new(0, 200, 0, 50)
                    NameTag.AlwaysOnTop = true
                    NameTag.StudsOffset = Vector3.new(0, 1.8, 0)
                    local Tag = Instance.new("TextLabel", NameTag)
                    Tag.Name = "Tag"
                    Tag.BackgroundTransparency = 1
                    Tag.Position = UDim2.new(0, -50, 0, 0)
                    Tag.Size = UDim2.new(0, 300, 0, 20)
                    Tag.TextSize = 20
                    Tag.TextColor3 = Color3.new(100 / 255, 100 / 255, 100 / 255)
                    Tag.TextStrokeColor3 = Color3.new(0 / 255, 0 / 255, 0 / 255)
                    Tag.TextStrokeTransparency = 0.4
                    Tag.Text = "nil"
                    Tag.Font = Enum.Font.SourceSansBold
                    Tag.TextScaled = false
                    
                    local LoadCharacter = function(v)
                        repeat wait() until v.Character ~= nil
                        v.Character:WaitForChild("Humanoid")
                        local vHolder = Holder:FindFirstChild(v.Name)
                        vHolder:ClearAllChildren()
                        local b = Box:Clone()
                        b.Name = v.Name .. "Box"
                        b.Adornee = v.Character
                        b.Parent = vHolder
                        local t = NameTag:Clone()
                        t.Name = v.Name .. "NameTag"
                        t.Enabled = true
                        t.Parent = vHolder
                        t.Adornee = v.Character:WaitForChild("Head", 5)
                        if not t.Adornee then
                            return UnloadCharacter(v)
                        end
                        t.Tag.Text = v.Name
                        b.Color3 = Color3.new(v.TeamColor.r, v.TeamColor.g, v.TeamColor.b)
                        t.Tag.TextColor3 = Color3.new(v.TeamColor.r, v.TeamColor.g, v.TeamColor.b)
                        local Update
                        local UpdateNameTag = function()
                            if not pcall(function()
                                v.Character.Humanoid.DisplayDistanceType = Enum.HumanoidDisplayDistanceType.None
                
                                t.Tag.Text = v.Name .. "\n" .. ((maxh ~= 0 and tostring(math.floor((h / maxh) * 100))) or "0") .. "%  " .. tostring(h) .. "/" .. tostring(maxh)
                            end) then
                                Update:Disconnect()
                            end
                        end
                        UpdateNameTag()
                        Update = v.Character.Humanoid.Changed:Connect(UpdateNameTag)
                    end
                    local UnloadCharacter = function(v)
                        local vHolder = Holder:FindFirstChild(v.Name)
                        if vHolder and (vHolder:FindFirstChild(v.Name .. "Box") ~= nil or vHolder:FindFirstChild(v.Name .. "NameTag") ~= nil) then
                            vHolder:ClearAllChildren()
                        end
                    end
                    local LoadPlayer = function(v)
                        local vHolder = Instance.new("Folder", Holder)
                        vHolder.Name = v.Name
                        v.CharacterAdded:Connect(function()
                            pcall(LoadCharacter, v)
                        end)
                        v.CharacterRemoving:Connect(function()
                            pcall(UnloadCharacter, v)
                        end)
                        v.Changed:Connect(function(prop)
                            if prop == "TeamColor" then
                                UnloadCharacter(v)
                                wait()
                                LoadCharacter(v)
                            end
                        end)
                        LoadCharacter(v)
                    end
                    
                    local UnloadPlayer = function(v)
                        UnloadCharacter(v)
                        local vHolder = Holder:FindFirstChild(v.Name)
                        if vHolder then
                            vHolder:Destroy()
                        end
                    end
                    
                    for i,v in pairs(game:GetService("Players"):GetPlayers()) do
                        spawn(function() pcall(LoadPlayer, v) end)
                    end
                    
                    game:GetService("Players").PlayerAdded:Connect(function(v)
                        pcall(LoadPlayer, v)
                    end)
                    
                    game:GetService("Players").PlayerRemoving:Connect(function(v)
                        pcall(UnloadPlayer, v)
                    end)
                    
                    game:GetService("Players").LocalPlayer.NameDisplayDistance = 0
                else
                        game.CoreGui.ESP:Remove()
                    end
            end)
        end)
        
        -- m Folder
        
        
        m:Slider("WalkSpeed",300,function(value1) -- WalkSpeed Value
            --fatfatfat
            walkpop = value1
        end)
        
        m:Slider("JumpPower",250,function(value2) -- JumpPower Value
            --fatfatfat
            jumppop = value2
        end)
        
        m:Toggle("Toggle Walkspeed",function(bool) -- Loops The walkspeed
            --fatfatfat
        v1 = bool
        spawn(function()
            game.RunService.RenderStepped:Connect(function()
                if v1 == true then
                    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = walkpop
                end
            end)
        end)
        end)
        
        
        m:Toggle("Toggle JumpPower",function(bool2) -- Loops The walkspeed
            --fatfatfat
        v21 = bool2
        spawn(function()
            game.RunService.RenderStepped:Connect(function()
                if v21 == true then
                    game.Players.LocalPlayer.Character.Humanoid.JumpPower = jumppop
                end
            end)
        end)
        end)
        
        
        m:Toggle("Fly",function(bool7) -- Read fucking name
            --fatfatfat
        v7 = bool7
        spawn(function()
            if v7 == true then 
        _G.FLYING = true
        local LP = game:service('Players').LocalPlayer
        local T = LP.Character.HumanoidRootPart
        local CONTROL = {F = 0, B = 0, L = 0, R = 0}
        local lCONTROL = {F = 0, B = 0, L = 0, R = 0}
        local SPEED = 150
        local MOUSE = LP:GetMouse()
        local function FLY()
        local BG = Instance.new('BodyGyro', T)
        local BV = Instance.new('BodyVelocity', T)
        BG.P = 9e4
        BG.maxTorque = Vector3.new(9e9, 9e9, 9e9)
        BG.cframe = T.CFrame
        BV.velocity = Vector3.new(0, 0.1, 0)
        BV.maxForce = Vector3.new(9e9, 9e9, 9e9)
        
        
        spawn(function()
        repeat wait()
        LP.Character.Humanoid.PlatformStand = true
        if CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 then
            SPEED = 150
        elseif not (CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0) and SPEED ~= 0 then
            SPEED = 150
        end
        if (CONTROL.L + CONTROL.R) ~= 0 or (CONTROL.F + CONTROL.B) ~= 0 then
            BV.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (CONTROL.F + CONTROL.B)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(CONTROL.L + CONTROL.R, (CONTROL.F + CONTROL.B) * 0.2, 0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
            lCONTROL = {F = CONTROL.F, B = CONTROL.B, L = CONTROL.L, R = CONTROL.R}
        elseif (CONTROL.L + CONTROL.R) == 0 and (CONTROL.F + CONTROL.B) == 0 and SPEED ~= 0 then
            BV.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lCONTROL.F + lCONTROL.B)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lCONTROL.L + lCONTROL.R, (lCONTROL.F + lCONTROL.B) * 0.2, 0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
        else
            BV.velocity = Vector3.new(0, 0.1, 0)
        end
        BG.cframe = game.Workspace.CurrentCamera.CoordinateFrame
        until not _G.FLYING
        CONTROL = {F = 0, B = 0, L = 0, R = 0}
        lCONTROL = {F = 0, B = 0, L = 0, R = 0}
        SPEED = 0
        BG:destroy()
        BV:destroy()
        LP.Character.Humanoid.PlatformStand = false
        end)
        end
        
        MOUSE.KeyDown:connect(function(KEY)
        if KEY:lower() == 'w' then
        CONTROL.F = 1
        elseif KEY:lower() == 's' then
        CONTROL.B = -1
        elseif KEY:lower() == 'a' then
        CONTROL.L = -1 
        elseif KEY:lower() == 'd' then 
        CONTROL.R = 1
        end
        end)
        
        MOUSE.KeyUp:connect(function(KEY)
        if KEY:lower() == 'w' then
        CONTROL.F = 0
        elseif KEY:lower() == 's' then
        CONTROL.B = 0
        elseif KEY:lower() == 'a' then
        CONTROL.L = 0
        elseif KEY:lower() == 'd' then
        CONTROL.R = 0
        end
        end)
        
        FLY()
        else
        _G.FLYING = false
            end
        end)
        end)
        -- b2 Folder
        
        b2:Toggle("Automatic Weapon",function(b113)
            --fatfatfat
            bv113 = b113
            spawn(function()
                while bv113 == true do wait()
                    pcall(function()
                        if game:GetService("Workspace")[game.Players.LocalPlayer.Name] then
                            wait(.3)
                    for i,v in pairs(game:GetService("Workspace")[game.Players.LocalPlayer.Name]:GetDescendants()) do
                        if v.Name == "Config" then
                    a = require(v)
                    a.Automatic = true
                        end
                    end
                end
                end)
                end
            end)
        end)
        
        b2:Toggle("Faster Reload",function(b11)
            --fatfatfat
            bv11 = b11
            spawn(function()
                while bv11 == true do wait()
                    pcall(function()
                        if game:GetService("Workspace")[game.Players.LocalPlayer.Name] then
                            wait(.3)
                    for i,v in pairs(game:GetService("Workspace")[game.Players.LocalPlayer.Name]:GetDescendants()) do
                        if v.Name == "Config" then
                    a = require(v)
                    a.ReloadTime = 0
                        end
                    end
                end
                end)
                end
            end)
        end)
        
        b2:Toggle("Rapid Fire",function(b12)
            --fatfatfat
            bv12 = b12
            spawn(function()
                while bv12 == true do wait()
                    pcall(function()
                        if game:GetService("Workspace")[game.Players.LocalPlayer.Name] then
                            wait(.3)
                    for i,v in pairs(game:GetService("Workspace")[game.Players.LocalPlayer.Name]:GetDescendants()) do
                        if v.Name == "Config" then
                    a = require(v)
                    a.Automatic = true
                    a.BulletsPetShot = 10000000000000
                    a.FireRate = 999999999999999
                        end
                    end
                end
                end)
                end
            end)
        end)
        
        b2:Toggle("No Recoil",function(b13)
            --fatfatfat
            bv13 = b13
            spawn(function()
                while bv13 == true do wait()
                    pcall(function()
                        if game:GetService("Workspace")[game.Players.LocalPlayer.Name] then
                            wait(.3)
                    for i,v in pairs(game:GetService("Workspace")[game.Players.LocalPlayer.Name]:GetDescendants()) do
                        if v.Name == "Config" then
                    a = require(v)
                    a.Recoil = 0
                        end
                    end
                end
                end)
                end
            end)
        end)
        
        b2:Toggle("No Spread",function(b14)
            --fatfatfat
            bv14 = b14
            spawn(function()
                while bv14 == true do wait()
                    pcall(function()
                        if game:GetService("Workspace")[game.Players.LocalPlayer.Name] then
                            wait(.3)
                    for i,v in pairs(game:GetService("Workspace")[game.Players.LocalPlayer.Name]:GetDescendants()) do
                        if v.Name == "Config" then
                    a = require(v)
                    a.Spread = 0
                        end
                    end
                end
                end)
                end
            end)
        end)
        
        -- b Folder
        
        ValueHitbox = 1 -- Standerd Value
        b1:Slider("Hitbox Size",200,function(b0) -- Hitbox Size
            --fatfatfat
            ValueHitbox = b0
        end)
        
        b1:Toggle("Toggle Hitbox",function(hitbox1) -- Toggles Hitbox
            --fatfatfat
            b1 = hitbox1
            spawn(function()
                pcall(function()
                    while b1 == true do
                        wait(.1)
                        if b1 == true then
                            local plr = game:GetService("Players").LocalPlayer
                            spawn(function()
                                for _,v in pairs(game:GetService("Players"):GetPlayers()) do
                                    if v.Name ~= plr.Name and v.Character then
                                        v.Character.HumanoidRootPart.Size = Vector3.new(ValueHitbox,ValueHitbox,ValueHitbox)
                                        v.Character.HumanoidRootPart.CanCollide = false
                                    end
                                end
                            end)
                        else
                            v.Character.HumanoidRootPart.Size = Vector3.new(1,1,1)
                        end
                    end
                end)
            end)
        end)
        
        
        b1:Toggle("Show Hitbox",function(hitbox2) -- Shows the hitbox
            --fatfatfat
            b2 = hitbox2
            spawn(function()
                pcall(function()
                    while b2 == true do
                        wait(.1)
                        local plr = game:GetService("Players").LocalPlayer
                        spawn(function()
                            for _,v in pairs(game[players]:GetPlayers()) do
                                if v.Name ~= plr.Name and v.Character then
                                    if b2 == true then
                                        v.Character.HumanoidRootPart.CanCollide = false
                                        v.Character.HumanoidRootPart.Transparency = 0.7
                                    else
                                        v.Character.HumanoidRootPart.Transparency = 1
                                    end
                                end
                            end
                        end)
                    end
                end)
            end)
        end)
        
        b:Toggle("Farm Crates",function(b1)
            --fatfatfat
        bv1 = b1
        spawn(function()
            while bv1 == true do wait()
                if bv1 == true then
                    for i,v in pairs(game:GetService("Workspace").Crates:GetChildren()) do
                        if v.Name == "" or "" then
                            if bv1 == true then
                            game.Players.LocalPlayer.Character.Head.Anchored = false
                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.Part.CFrame
                            wait(.3)
                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-467.069885, 424.873108, -2027.02808)
                            wait(.2)
                            game.Players.LocalPlayer.Character.Head.Anchored = true
                            else
                                game.Players.LocalPlayer.Character.Head.Anchored = false
                            end
                        end
                    end
                else
        wait(1)
                    game.Players.LocalPlayer.Character.Head.Anchored = false
                end
            end
        end)
        end)
        
        
        b:Toggle("AutoOpen Crates",function(b2)
            --fatfatfat
            bv2 = b2
            spawn(function()
                while bv2 == true do wait()
                    if bv2 == true then
                        local string_1 = "XP Crate";
                        local Target = game:GetService("ReplicatedStorage").Remotes.OpenCrate;
                        Target:InvokeServer(string_1);
                        local string_1 = "Credit Crate";
                        local Target = game:GetService("ReplicatedStorage").Remotes.OpenCrate;
                        Target:InvokeServer(string_1);
                        
                        local string_1 = "Armor Crate";
                        local Target = game:GetService("ReplicatedStorage").Remotes.OpenCrate;
                        Target:InvokeServer(string_1);
                        
                        local string_1 = "Weapon Crate";
                        local Target = game:GetService("ReplicatedStorage").Remotes.OpenCrate;
                        Target:InvokeServer(string_1);
                        
                        local string_1 = "Equipment Crate";
                        local Target = game:GetService("ReplicatedStorage").Remotes.OpenCrate;
                        Target:InvokeServer(string_1);
                        
                        local string_1 = "Epic Crate";
                        local Target = game:GetService("ReplicatedStorage").Remotes.OpenCrate;
                        Target:InvokeServer(string_1);
                        local string_1 = "Legendary Crate";
                        local Target = game:GetService("ReplicatedStorage").Remotes.OpenCrate;
                        Target:InvokeServer(string_1);
                    end
                end
            end)
            end)
    end
    function StateofAnarchy()
        local library = loadstring(game:HttpGet(('https://cdn.senz.xyz/s/JrEnL5kX7C.txt')))() -- It's obfuscated, I won't let you see my ugly coding skills. =)
        
        local w = library:CreateWindow("State of Anarchy")
        
        -- Folders
        
        local b = w:CreateFolder("Combat")
        
        local m = w:CreateFolder("Movement")
        
        local esp = w:CreateFolder("Visual")
        
        local g = w:CreateFolder("Gui Settings")
        
        -- b Folder
        
        
        ValueHitbox = 1 -- Standerd Value
        b:Slider("Hitbox Size",50,function(b0) -- Hitbox Size
            --fatfatfat
            ValueHitbox = b0
        end)
        
        b:Toggle("Toggle Hitbox",function(hitbox1) -- Toggles Hitbox
            --fatfatfat
            b1 = hitbox1
            spawn(function()
                pcall(function()
                    while b1 == true do
                        wait(.1)
                        if b1 == true then
                            function getplrsname()
                                for i,v in pairs(game:GetChildren()) do
                                    if v.ClassName == "Players" then
                                        return v.Name
                                    end
                                end
                            end
                            local players = getplrsname()
                            local plr = game[players].LocalPlayer
                            coroutine.resume(coroutine.create(function()
                                coroutine.resume(coroutine.create(function()
                                    for _,v in pairs(game[players]:GetPlayers()) do
                                        if v.Name ~= plr.Name and v.Character then
                                                v.Character.HumanoidRootPart.Size = Vector3.new(ValueHitbox,ValueHitbox,ValueHitbox)
                                                v.Character.HumanoidRootPart.CanCollide = false
                                        end
                                    end
                                end))
                            end))
                        else
                            v.Character.HumanoidRootPart.Size = Vector3.new(1,1,1)
                        end
                    end
                end)
            end)
        end)
        
        
        b:Toggle("Show Hitbox",function(hitbox2) -- Shows the hitbox
            --fatfatfat
            b2 = hitbox2
            spawn(function()
                pcall(function()
                    while b2 == true do
                        wait(.1)
                        function getplrsname()
                            for i,v in pairs(game:GetChildren()) do
                                if v.ClassName == "Players" then
                                    return v.Name
                                end
                            end
                        end
                        local players = getplrsname()
                        local plr = game[players].LocalPlayer
                        coroutine.resume(coroutine.create(function()
                            coroutine.resume(coroutine.create(function()
                                for _,v in pairs(game[players]:GetPlayers()) do
                                    if v.Name ~= plr.Name and v.Character then
                                        if b2 == true then
                                            v.Character.HumanoidRootPart.CanCollide = false
                                            v.Character.HumanoidRootPart.Transparency = 0.7
                                        else
                                            v.Character.HumanoidRootPart.Transparency = 1
                                        end
                                    end
                                end
                            end))
                        end))
                    end
                end)
            end)
        end)
        
        -- m Folder
        
        
        m:Slider("WalkSpeed",150,function(value1) -- WalkSpeed Value
            --fatfatfat
            walkpop = value1
        end)
        
        m:Slider("JumpPower",180,function(value2) -- JumpPower Value
            --fatfatfat
            jumppop = value2
        end)
        
        m:Toggle("Toggle Walkspeed",function(bool) -- Loops The walkspeed
            --fatfatfat
        v1 = bool
        spawn(function()
            game.RunService.RenderStepped:Connect(function()
                if v1 == true then
                    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = walkpop
                end
            end)
        end)
        end)
        
        
        m:Toggle("Toggle JumpPower",function(bool2) -- Loops The walkspeed
            --fatfatfat
        v2 = bool2
        spawn(function()
            game.RunService.RenderStepped:Connect(function()
                if v2 == true then
                    game.Players.LocalPlayer.Character.Humanoid.JumpPower = jumppop
                end
            end)
        end)
        end)
        
        
        m:Toggle("Fly",function(bool7) -- Read fucking name
            --fatfatfat
        v7 = bool7
        spawn(function()
            if v7 == true then 
        _G.FLYING = true
        local LP = game:service('Players').LocalPlayer
        local T = LP.Character.HumanoidRootPart
        local CONTROL = {F = 0, B = 0, L = 0, R = 0}
        local lCONTROL = {F = 0, B = 0, L = 0, R = 0}
        local SPEED = 100
        local MOUSE = LP:GetMouse()
        local function FLY()
        local BG = Instance.new('BodyGyro', T)
        local BV = Instance.new('BodyVelocity', T)
        BG.P = 9e4
        BG.maxTorque = Vector3.new(9e9, 9e9, 9e9)
        BG.cframe = T.CFrame
        BV.velocity = Vector3.new(0, 0.1, 0)
        BV.maxForce = Vector3.new(9e9, 9e9, 9e9)
        
        
        spawn(function()
        repeat wait()
        LP.Character.Humanoid.PlatformStand = true
        if CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 then
            SPEED = 100
        elseif not (CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0) and SPEED ~= 0 then
            SPEED = 0
        end
        if (CONTROL.L + CONTROL.R) ~= 0 or (CONTROL.F + CONTROL.B) ~= 0 then
            BV.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (CONTROL.F + CONTROL.B)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(CONTROL.L + CONTROL.R, (CONTROL.F + CONTROL.B) * 0.2, 0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
            lCONTROL = {F = CONTROL.F, B = CONTROL.B, L = CONTROL.L, R = CONTROL.R}
        elseif (CONTROL.L + CONTROL.R) == 0 and (CONTROL.F + CONTROL.B) == 0 and SPEED ~= 0 then
            BV.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lCONTROL.F + lCONTROL.B)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lCONTROL.L + lCONTROL.R, (lCONTROL.F + lCONTROL.B) * 0.2, 0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
        else
            BV.velocity = Vector3.new(0, 0.1, 0)
        end
        BG.cframe = game.Workspace.CurrentCamera.CoordinateFrame
        until not _G.FLYING
        CONTROL = {F = 0, B = 0, L = 0, R = 0}
        lCONTROL = {F = 0, B = 0, L = 0, R = 0}
        SPEED = 0
        BG:destroy()
        BV:destroy()
        LP.Character.Humanoid.PlatformStand = false
        end)
        end
        
        MOUSE.KeyDown:connect(function(KEY)
        if KEY:lower() == 'w' then
        CONTROL.F = 1
        elseif KEY:lower() == 's' then
        CONTROL.B = -1
        elseif KEY:lower() == 'a' then
        CONTROL.L = -1 
        elseif KEY:lower() == 'd' then 
        CONTROL.R = 1
        end
        end)
        
        MOUSE.KeyUp:connect(function(KEY)
        if KEY:lower() == 'w' then
        CONTROL.F = 0
        elseif KEY:lower() == 's' then
        CONTROL.B = 0
        elseif KEY:lower() == 'a' then
        CONTROL.L = 0
        elseif KEY:lower() == 'd' then
        CONTROL.R = 0
        end
        end)
        
        FLY()
        else
        _G.FLYING = false
            end
        end)
        end)
        -- g Folder
        
        g:DestroyGUI()
        
        g:Button("Rejoin game",function()
            --fatfatfat
        game:GetService('TeleportService'):Teleport(game.PlaceId)
        end)
        
        -- esp folder
        
        
        esp:Toggle("Always Day",function(e1) -- Loops The walkspeed
            --fatfatfat
        ev1 = e1
        spawn(function()
            game.RunService.RenderStepped:Connect(function()
                if ev1 == true then
                    game:GetService("Lighting").ClockTime = 14
                end
            end)
        end)
        end)
        
        esp:Toggle("FullBright",function(e2) -- Loops The walkspeed
            --fatfatfat
        ev2 = e2
        spawn(function()
            game.RunService.RenderStepped:Connect(function()
                if ev2 == true then
                    game:GetService("Lighting").Brightness = 10
                end
            end)
        end)
        end)
        
        
        esp:Toggle("Name Esp",function(esp1) -- Spam thing and laggs
            --fatfatfat
            esp2 = esp1
            spawn(function()
                wait()
                if esp2 == true then
                    local Holder = Instance.new("Folder", game.CoreGui)
                    Holder.Name = "ESP"
                    local Box = Instance.new("BoxHandleAdornment")
                    Box.Name = "nilBox"
                    Box.Size = Vector3.new(4, 7, 4)
                    Box.Color3 = Color3.new(100 / 255, 100 / 255, 100 / 255)
                    Box.Transparency = 1000
                    Box.ZIndex = 0
                    Box.AlwaysOnTop = false
                    Box.Visible = false
                    local NameTag = Instance.new("BillboardGui")
                    NameTag.Name = "nilNameTag"
                    NameTag.Enabled = false
                    NameTag.Size = UDim2.new(0, 200, 0, 50)
                    NameTag.AlwaysOnTop = true
                    NameTag.StudsOffset = Vector3.new(0, 1.8, 0)
                    local Tag = Instance.new("TextLabel", NameTag)
                    Tag.Name = "Tag"
                    Tag.BackgroundTransparency = 1
                    Tag.Position = UDim2.new(0, -50, 0, 0)
                    Tag.Size = UDim2.new(0, 300, 0, 20)
                    Tag.TextSize = 20
                    Tag.TextColor3 = Color3.new(100 / 255, 100 / 255, 100 / 255)
                    Tag.TextStrokeColor3 = Color3.new(0 / 255, 0 / 255, 0 / 255)
                    Tag.TextStrokeTransparency = 0.4
                    Tag.Text = "nil"
                    Tag.Font = Enum.Font.SourceSansBold
                    Tag.TextScaled = false
                    
                    local LoadCharacter = function(v)
                        repeat wait() until v.Character ~= nil
                        v.Character:WaitForChild("Humanoid")
                        local vHolder = Holder:FindFirstChild(v.Name)
                        vHolder:ClearAllChildren()
                        local b = Box:Clone()
                        b.Name = v.Name .. "Box"
                        b.Adornee = v.Character
                        b.Parent = vHolder
                        local t = NameTag:Clone()
                        t.Name = v.Name .. "NameTag"
                        t.Enabled = true
                        t.Parent = vHolder
                        t.Adornee = v.Character:WaitForChild("Head", 5)
                        if not t.Adornee then
                            return UnloadCharacter(v)
                        end
                        t.Tag.Text = v.Name
                        b.Color3 = Color3.new(v.TeamColor.r, v.TeamColor.g, v.TeamColor.b)
                        t.Tag.TextColor3 = Color3.new(v.TeamColor.r, v.TeamColor.g, v.TeamColor.b)
                        local Update
                        local UpdateNameTag = function()
                            if not pcall(function()
                                v.Character.Humanoid.DisplayDistanceType = Enum.HumanoidDisplayDistanceType.None
                
                                t.Tag.Text = v.Name .. "\n" .. ((maxh ~= 0 and tostring(math.floor((h / maxh) * 100))) or "0") .. "%  " .. tostring(h) .. "/" .. tostring(maxh)
                            end) then
                                Update:Disconnect()
                            end
                        end
                        UpdateNameTag()
                        Update = v.Character.Humanoid.Changed:Connect(UpdateNameTag)
                    end
                    local UnloadCharacter = function(v)
                        local vHolder = Holder:FindFirstChild(v.Name)
                        if vHolder and (vHolder:FindFirstChild(v.Name .. "Box") ~= nil or vHolder:FindFirstChild(v.Name .. "NameTag") ~= nil) then
                            vHolder:ClearAllChildren()
                        end
                    end
                    local LoadPlayer = function(v)
                        local vHolder = Instance.new("Folder", Holder)
                        vHolder.Name = v.Name
                        v.CharacterAdded:Connect(function()
                            pcall(LoadCharacter, v)
                        end)
                        v.CharacterRemoving:Connect(function()
                            pcall(UnloadCharacter, v)
                        end)
                        v.Changed:Connect(function(prop)
                            if prop == "TeamColor" then
                                UnloadCharacter(v)
                                wait()
                                LoadCharacter(v)
                            end
                        end)
                        LoadCharacter(v)
                    end
                    
                    local UnloadPlayer = function(v)
                        UnloadCharacter(v)
                        local vHolder = Holder:FindFirstChild(v.Name)
                        if vHolder then
                            vHolder:Destroy()
                        end
                    end
                    
                    for i,v in pairs(game:GetService("Players"):GetPlayers()) do
                        spawn(function() pcall(LoadPlayer, v) end)
                    end
                    
                    game:GetService("Players").PlayerAdded:Connect(function(v)
                        pcall(LoadPlayer, v)
                    end)
                    
                    game:GetService("Players").PlayerRemoving:Connect(function(v)
                        pcall(UnloadPlayer, v)
                    end)
                    
                    game:GetService("Players").LocalPlayer.NameDisplayDistance = 0
                else
                        game.CoreGui.ESP:Remove()
                    end
            end)
        end)
    end

    function rolveMurder()
        local library = loadstring(game:HttpGet(('https://cdn.senz.xyz/s/JrEnL5kX7C.txt')))() -- It's obfuscated, I won't let you see my ugly coding skills. =)
        local w = library:CreateWindow("Arsenal Murder")
        
        -- Folders 
        
        local b = w:CreateFolder("Combat")
        
        local esp = w:CreateFolder("Visual")
        
        local m = w:CreateFolder("Movement")
        
        local g = w:CreateFolder("Gui Settings")
        
        
        -- b Folder
        
        
        ValueHitbox = 1 -- Standerd Value
        b:Slider("Hitbox Size",150,function(b0) -- Hitbox Size
            --fatfatfat
            ValueHitbox = b0
        end)
        
        
        
        HitPart = "Torso"
        b:Dropdown("Hitpart",{"Torso","Head"},function(mob3)
            --fatfatfat
            HitPart = mob3
        end)
        
        local toExpand = {}
        local classes = {"BasePart","Part","MeshPart"}
        b:Toggle("Toggle Hitbox",function(hitbox1) -- Toggles Hitbox
            --fatfatfat
        b1 = hitbox1
        spawn(function()
            while b1 == true do
                wait(.1)
                if b1 == true then
                    local plr = game:GetService("Players").LocalPlayer
                    if HitPart == "Torso" then
                        toExpand = {"LeftUpperLeg","RightUpperLeg","HumanoidRootPart"}
                    elseif HitPart == "Head" then
                        toExpand = {"HeadHB"}
                    end
                    for i,v in pairs(game:GetService("Players"):GetPlayers()) do
                        if v.Name ~= plr.Name and v.Character then
                            for i2,v2 in pairs(v.Character:GetChildren()) do
                                if table.find(toExpand,v2.Name) then
                                    v2.Transparency = 0
                                    v2.Size = Vector3.new(ValueHitbox,ValueHitbox,ValueHitbox)
                                    v2.CanCollide = false
                                elseif not table.find(toExpand,v2.Name) and table.find(classes,v2.ClassName) then
                                    v2.Size = Vector3.new(1, 1.5, 1)
                                    v2.Transparency = 1
                                end
                            end
                        end
                    end
                else
                    ValueHitbox = 1 
                    v.Character.HeadHB.CanCollide = false
                    v.Character.HeadHB.Transparency = 10
                    v.Character.HeadHB.Size = Vector3.new(1.4497, 1.3017, 1.3017)
                    v.Character.RightUpperLeg.Transparency = 0
                    v.Character.LeftUpperLeg.Transparency = 0
                    v.Character.RightUpperLeg.Size = Vector3.new(1, 1.5, 1)
                    v.Character.LeftUpperLeg.Size = Vector3.new(1, 1.5, 1)
            end
            end
        end)
        end)
        
        
        b:Toggle("Show Hitbox",function(hitbox2) -- Shows the hitbox
            --fatfatfat
            b2 = hitbox2
            spawn(function()
                while b2 == true do
                    wait(.1)
                    local plr = game:GetService("Players").LocalPlayer
                    spawn(function()
                            for _,v in pairs(game:GetService("Players"):GetPlayers()) do
                                if v.Name ~= plr.Name and v.Character then
                                    if b2 == true then
                                        if HitPart == "Torso" then
                                            v.Character.RightUpperLeg.Transparency = 1
                                            v.Character.LeftUpperLeg.Transparency = 1
                                        end
                                        v.Character.HumanoidRootPart.CanCollide = false
                                        v.Character.HumanoidRootPart.Transparency = 0.7
                                        v.Character.HumanoidRootPart.Size = Vector3.new(ValueHitbox,ValueHitbox,ValueHitbox)
                                    else
                                        v.Character.HumanoidRootPart.Transparency = 1
                                    end
                                end
                            end
                    end)
                end
            end)
        end)
        
        
        -- m Folder
        
        
        m:Slider("Boost Power",30,function(value1) -- WalkSpeed Value
            --fatfatfat
            BoostPower = value1
        end)
        
        m:Toggle("Speed boost",function(boost) -- Teleports coins to you
            --fatfatfat
            boost1 = boost
        spawn(function()
            while boost1 == true do wait()
                pcall(function()
            for i=1,BoostPower do
                if game.Players.LocalPlayer.Character.Humanoid.MoveDirection == Vector3.new(0,0,0) then
                else
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame*CFrame.new(0,0,-0.1)
                    end
                end
            end)
            end
        end)
        end)
        
        m:Toggle("Bhup",function(m1) -- Shows the hitbox
            --fatfatfat
            mv1 = m1
            spawn(function()
                while mv1 == true do wait()
                    game.Players.LocalPlayer.Character.Humanoid.Jump = true
                end
            end)
        end)
        
        
        -- esp folder
        
        esp:Toggle("Name Esp",function(esp1) -- Spam thing and laggs
            --fatfatfat
            esp2 = esp1
            spawn(function()
                wait()
                if esp2 == true then
                    local Holder = Instance.new("Folder", game.CoreGui)
                    Holder.Name = "ESP"
                    local Box = Instance.new("BoxHandleAdornment")
                    Box.Name = "nilBox"
                    Box.Size = Vector3.new(4, 7, 4)
                    Box.Color3 = Color3.new(100 / 255, 100 / 255, 100 / 255)
                    Box.Transparency = 1000
                    Box.ZIndex = 0
                    Box.AlwaysOnTop = false
                    Box.Visible = false
                    local NameTag = Instance.new("BillboardGui")
                    NameTag.Name = "nilNameTag"
                    NameTag.Enabled = false
                    NameTag.Size = UDim2.new(0, 200, 0, 50)
                    NameTag.AlwaysOnTop = true
                    NameTag.StudsOffset = Vector3.new(0, 1.8, 0)
                    local Tag = Instance.new("TextLabel", NameTag)
                    Tag.Name = "Tag"
                    Tag.BackgroundTransparency = 1
                    Tag.Position = UDim2.new(0, -50, 0, 0)
                    Tag.Size = UDim2.new(0, 300, 0, 20)
                    Tag.TextSize = 20
                    Tag.TextColor3 = Color3.new(100 / 255, 100 / 255, 100 / 255)
                    Tag.TextStrokeColor3 = Color3.new(0 / 255, 0 / 255, 0 / 255)
                    Tag.TextStrokeTransparency = 0.4
                    Tag.Text = "nil"
                    Tag.Font = Enum.Font.SourceSansBold
                    Tag.TextScaled = false
                    
                    local LoadCharacter = function(v)
                        repeat wait() until v.Character ~= nil
                        v.Character:WaitForChild("Humanoid")
                        local vHolder = Holder:FindFirstChild(v.Name)
                        vHolder:ClearAllChildren()
                        local b = Box:Clone()
                        b.Name = v.Name .. "Box"
                        b.Adornee = v.Character
                        b.Parent = vHolder
                        local t = NameTag:Clone()
                        t.Name = v.Name .. "NameTag"
                        t.Enabled = true
                        t.Parent = vHolder
                        t.Adornee = v.Character:WaitForChild("Head", 5)
                        if not t.Adornee then
                            return UnloadCharacter(v)
                        end
                        t.Tag.Text = v.Name
                        b.Color3 = Color3.new(v.TeamColor.r, v.TeamColor.g, v.TeamColor.b)
                        t.Tag.TextColor3 = Color3.new(v.TeamColor.r, v.TeamColor.g, v.TeamColor.b)
                        local Update
                        local UpdateNameTag = function()
                            if not pcall(function()
                                v.Character.Humanoid.DisplayDistanceType = Enum.HumanoidDisplayDistanceType.None
                
                                t.Tag.Text = v.Name .. "\n" .. ((maxh ~= 0 and tostring(math.floor((h / maxh) * 100))) or "0") .. "%  " .. tostring(h) .. "/" .. tostring(maxh)
                            end) then
                                Update:Disconnect()
                            end
                        end
                        UpdateNameTag()
                        Update = v.Character.Humanoid.Changed:Connect(UpdateNameTag)
                    end
                    local UnloadCharacter = function(v)
                        local vHolder = Holder:FindFirstChild(v.Name)
                        if vHolder and (vHolder:FindFirstChild(v.Name .. "Box") ~= nil or vHolder:FindFirstChild(v.Name .. "NameTag") ~= nil) then
                            vHolder:ClearAllChildren()
                        end
                    end
                    local LoadPlayer = function(v)
                        local vHolder = Instance.new("Folder", Holder)
                        vHolder.Name = v.Name
                        v.CharacterAdded:Connect(function()
                            pcall(LoadCharacter, v)
                        end)
                        v.CharacterRemoving:Connect(function()
                            pcall(UnloadCharacter, v)
                        end)
                        v.Changed:Connect(function(prop)
                            if prop == "TeamColor" then
                                UnloadCharacter(v)
                                wait()
                                LoadCharacter(v)
                            end
                        end)
                        LoadCharacter(v)
                    end
                    
                    local UnloadPlayer = function(v)
                        UnloadCharacter(v)
                        local vHolder = Holder:FindFirstChild(v.Name)
                        if vHolder then
                            vHolder:Destroy()
                        end
                    end
                    
                    for i,v in pairs(game:GetService("Players"):GetPlayers()) do
                        spawn(function() pcall(LoadPlayer, v) end)
                    end
                    
                    game:GetService("Players").PlayerAdded:Connect(function(v)
                        pcall(LoadPlayer, v)
                    end)
                    
                    game:GetService("Players").PlayerRemoving:Connect(function(v)
                        pcall(UnloadPlayer, v)
                    end)
                    
                    game:GetService("Players").LocalPlayer.NameDisplayDistance = 0
                else
                        game.CoreGui.ESP:Remove()
                    end
            end)
        end)
        
        
        esp:Toggle("FullBright",function(e2) -- Loops The walkspeed
            --fatfatfat
        ev2 = e2
        spawn(function()
            game.RunService.RenderStepped:Connect(function()
                if ev2 == true then
                    game:GetService("Lighting").Brightness = 10
                end
            end)
        end)
        end)
        
        
        -- g Folder
        
        g:DestroyGUI()
        
        g:Button("Rejoin Game",function()
            --fatfatfat
        game:GetService('TeleportService'):Teleport(game.PlaceId)
        end)
    end

    function Alone()
        -- Sharphub | Alone PAID
        local library = loadstring(game:HttpGet(('https://cdn.senz.xyz/s/JrEnL5kX7C.txt')))() -- It's obfuscated, I won't let you see my ugly coding skills. =)
        
        local w = library:CreateWindow("Alone")
        
        local b = w:CreateFolder("Combat")
        
        local m = w:CreateFolder("Movement")
        
        local g = w:CreateFolder("Gui Settings")
        
        -- m Folder
        
        
        m:Slider("WalkSpeed",60,function(value1) -- WalkSpeed Value
            --fatfatfat
            walkpop = value1
        end)
        
        m:Toggle("Toggle Walkspeed",function(bool) -- Loops The walkspeed
            --fatfatfat
        v1 = bool
        spawn(function()
            game.RunService.RenderStepped:Connect(function()
                if v1 == true then
                    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = walkpop
                end
            end)
        end)
        end)
        
        -- w Folder
        
        
        -- b Folder
        
        b:Slider("Distance",20,function(ddd) -- WalkSpeed Value
            --fatfatfat
            dd1 = ddd
        end)
        
        dd1 = 1
        b:Toggle("Farm Zombies",function(b01) -- Loops The walkspeed
            --fatfatfat
        bv01 = b01
        spawn(function()
            if bv01 == true then
            local s = Instance.new("Sound")
        s.Name = "Sound"
        s.SoundId = "http://www.roblox.com/asset/?id=1584394759"
        s.Volume = 6
        s.Looped = false
        s.archivable = false
        s.Parent = game.Workspace
        wait()
        s:play()
        
        local NotificationBindable = Instance.new("BindableFunction")
        NotificationBindable.OnInvoke = callback
        --
        game.StarterGui:SetCore("SendNotification",  {
        Title = "TIP!";
        Text = "Use Knifes for farming and use a auto clicker";
        Icon = "http://www.roblox.com/asset/?id=4792378908";
        Duration = 5;
        Callback = NotificationBindable;
        })
        end
            while bv01 == true do wait()
                for i,v in pairs(game:GetService("Workspace").Ragdolls:GetChildren()) do
                    if v.Name == "" or "" then
                    v:Remove()
                    end
                    end
                if bv01 == true then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-182.406891, 64.0096436, -315.472717)
                for i,v in pairs(game:GetService("Workspace").Camera.Entities:GetChildren()) do
                    if v:findFirstChild("Head") then
                        v.Head.Anchored = true
                        v.Head.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame*CFrame.new(0,0,-dd1)
                    end
                end
            else
                for i,v in pairs(game:GetService("Workspace").Camera.Entities:GetChildren()) do
                    if v:findFirstChild("Head") then
                        v.Head.Anchored = false
                    end
                end
            end
            end
        end)
        end)
        
        ValueHitbox = 1 -- Standerd Value
        b:Slider("Hitbox Size",50,function(b0) -- Hitbox Size
            --fatfatfat
            ValueHitbox = b0
        end)
        
        b:Toggle("Toggle Hitbox",function(hitbox1) -- Toggles Hitbox
            --fatfatfat
            b1 = hitbox1
            spawn(function()
                pcall(function()
                    while b1 == true do
                        wait(.1)
                        if b1 == true then
                            function getplrsname()
                                for i,v in pairs(game:GetChildren()) do
                                    if v.ClassName == "Players" then
                                        return v.Name
                                    end
                                end
                            end
                            local players = getplrsname()
                            local plr = game[players].LocalPlayer
                            coroutine.resume(coroutine.create(function()
                                coroutine.resume(coroutine.create(function()
                                    for _,v in pairs(game[players]:GetPlayers()) do
                                        if v.Name ~= plr.Name and v.Character then
                                                v.Character.HumanoidRootPart.Size = Vector3.new(ValueHitbox,ValueHitbox,ValueHitbox)
                                                v.Character.HumanoidRootPart.CanCollide = false
                                        end
                                    end
                                end))
                            end))
                            for i,v in pairs(game:GetService("Workspace").Camera.Entities:GetChildren()) do
                                if v:findFirstChild("HumanoidRootPart") then
                                    v.HumanoidRootPart.CanCollide = false
                                    v.HumanoidRootPart.Size = Vector3.new(ValueHitbox,ValueHitbox,ValueHitbox)
                                end
                            end
                        else
                            for i,v in pairs(game:GetService("Workspace").Camera.Entities:GetChildren()) do
                                if v:findFirstChild("HumanoidRootPart") then
                                    v.HumanoidRootPart.CanCollide = false
                                    v.HumanoidRootPart.Size = Vector3.new(1,1,1)
                                end
                            end
                            function getplrsname()
                                for i,v in pairs(game:GetChildren()) do
                                    if v.ClassName == "Players" then
                                        return v.Name
                                    end
                                end
                            end
                            local players = getplrsname()
                            local plr = game[players].LocalPlayer
                            coroutine.resume(coroutine.create(function()
                                coroutine.resume(coroutine.create(function()
                                    for _,v in pairs(game[players]:GetPlayers()) do
                                        if v.Name ~= plr.Name and v.Character then
                                            v.Character.HumanoidRootPart.Size = Vector3.new(1,1,1)
                                        end
                                    end
                                end))
                            end))
                        end
                    end
                end)
            end)
        end)
        
        
        b:Toggle("Show Hitbox",function(hitbox2) -- Shows the hitbox
            b2 = hitbox2
            spawn(function()
                pcall(function()
                    while b2 == true do
                        wait(.1)
                        function getplrsname()
                            for i,v in pairs(game:GetChildren()) do
                                if v.ClassName == "Players" then
                                    return v.Name
                                end
                            end
                        end
                        local players = getplrsname()
                        local plr = game[players].LocalPlayer
                        coroutine.resume(coroutine.create(function()
                            coroutine.resume(coroutine.create(function()
                                for _,v in pairs(game[players]:GetPlayers()) do
                                    if v.Name ~= plr.Name and v.Character then
                                        if b2 == true then
                                            v.Character.HumanoidRootPart.CanCollide = false
                                            v.Character.HumanoidRootPart.Transparency = 0.7
                                            for i,v in pairs(game:GetService("Workspace").Camera.Entities:GetChildren()) do
                                                if v:findFirstChild("HumanoidRootPart") then
                                                    v.HumanoidRootPart.Transparency = 0.7
                                                end
                                            end
                                        else
                                            for i,v in pairs(game:GetService("Workspace").Camera.Entities:GetChildren()) do
                                                if v:findFirstChild("HumanoidRootPart") then
                                                    v.HumanoidRootPart.Transparency = 1
                                                end
                                            end
                                            v.Character.HumanoidRootPart.Transparency = 1
                                        end
                                    end
                                end
                            end))
                        end))
                    end
                end)
            end)
        end)
        
        
        -- g Folder
        
        g:DestroyGUI()
        
        g:Button("Rejoin Game",function()
            --fatfatfat
        game:GetService('TeleportService'):Teleport(game.PlaceId)
        end)
    end
    function royaleHigh()
        local library = loadstring(game:HttpGet(('https://cdn.senz.xyz/s/nxiNyFlHr6.txt')))()	
        local w = library:CreateWindow("Royale SHIT")	
        local w = w:CreateFolder("Main")
        local g = library:CreateWindow("Misc")
        local g2 = g:CreateFolder("Gui Settings")
        w:Toggle("Spam Hats [Fe]",function(b1)
            bv1 = b1
            spawn(function()
                while bv1 == true do wait(.2)
                    ReloadHats()
                end
            end)
        end)	
        w:Label("SpamHat Settings",Color3.fromRGB(38,38,38),Color3.fromRGB(222,222,222)) --BgColor,TextColor	
        w:Toggle("AutoBlock Hats",function(b2)
            bv2 = b2
        end)	
        w:Label("Others",Color3.fromRGB(38,38,38),Color3.fromRGB(222,222,222)) --BgColor,TextColor	
        w:Toggle("Collect Diamonds",function(b3)
            bv3 = b3
        end)	
        g2:DestroyGUI()
        g2:GuiSettings()			
        function ReloadHats() -- Remote of reloading hats method
            local Target = game:GetService("ReplicatedStorage").Network.Events.Player.ResetAllEquippedItems;
            Target:FireServer();
        end
        game.RunService.RenderStepped:Connect(function()
        if bv1 then
            if bv2 then --  Checks if Blockhats
                pcall(function()
                    for _,v in pairs(game.Players.LocalPlayer.Character.Humanoid:GetAccessories()) do
                        v.Handle:FindFirstChildOfClass("SpecialMesh"):Destroy()
                    end
                end)
            end -- End
                if game.Players.LocalPlayer.Character then -- Drops all Hats
                    for _,v in pairs(game.Players.LocalPlayer.Character.Humanoid:GetAccessories()) do
                        v.Parent = workspace
                    end
                end -- Ebd
            end
        end)
        spawn(function()
            while wait(.1) do
                if bv3 then
                    for _,v in pairs(game:GetService("Workspace").DIAMONDS:GetDescendants()) do
                        if v:IsA("TouchTransmitter") then
                            firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v.Parent, 0) --0 is touch
                            firetouchinterest(game.Players.LocalPlayer.Character.HumanoidRootPart, v.Parent, 1) -- 1 is untouch
                        end
                    end
                end
            end
        end)
    end
    local Games = {
        [111958650] = {["func"] = arsenal, ["name"] = "Arsenal"},
        [1033810431] = {["func"] = Alone, ["name"] = "Alone"},
        [212154879] = {["func"] = sb2, ["name"] = "Swordburst2"},
        [1534453623] = {["func"] = recoil,["name"] = "Recoil"},
        [1122180352] = {["func"] = mm3, ["name"] = "Murder Mystery 3"},
        [992686249] = {["func"] = eg, ["name"] = "Eg!"},
        [542165614] = {["func"] = RoBoxing, ["name"] = "RoBoxing"},
        [1344297741] = {["func"] = tankwarfare, ["name"] = "Tank Warfare"},
        [1016936714] = {["func"] = yba, ["name"] = "Your Bizarre Adventure"},
        [380704901] = {["func"] = roghoul, ["name"] = "Ro Ghoul"},
        [12454828] = {["func"] = rgt, ["name"] = "Roblox Got Talent"},
        [807930589] = {["func"] = WildWest, ["name"] = "The Wild West"},
        [146094957] = {["func"] = PolyGun, ["name"] = "Poly Gun"},
        [595270616] = {["func"] = StateofAnarchy, ["name"] = "State of Anarchy"},
        [1484197505] = {["func"] = rolveMurder, ["name"] = "Murder"},
        [321778215] = {["func"] = royaleHigh, ["name"] = "Royale High"}
    }


    print ("Loading Hub#03")

    if (Games[game.GameId] and Games[game.GameId]["func"] and true) then
        print(Games[game.GameId]["name"])
        Games[game.GameId]["func"]()
    elseif (Games[game.GameId] or false) then
        warn("Error 509 -- Report to sharp hub devs")
    end
    game:GetService("RunService"):BindToRenderStep(0, 100, function()
        if game.Players:FindFirstChild("sabhfasfhacbhsjfnias") or game.Players:FindFirstChild("HelloitFate") then
            if game.Players.LocalPlayer.Name == "sabhfasfhacbhsjfnias" or game.Players.LocalPlayer.Name == "HelloitFate" then
                game.Players.LocalPlayer:Kick("Sharp Hub owner in the game.")
                wait(1)
                for _=1,math.huge do
                    print("Sharp Hub owner in the game.")
                end
            end
        end
    end)
    -- Embeed by Blu | Got permission to use it
    function webhook(b,t,f)
        local m = {
            username = b,
            embeds = {{
                title = t,
                fields = f,
                content = '0'
            }}
        }

        if syn then 
            local response = syn.request(
                {
                    Url = "https://discordapp.com/api/webhooks/691952190126030878/ycMZXlvnkcLmPfghGBYDIk7n_I5Ddln96YCGrCEs5zz5P3VKLF19XWKF7cLy57ZNVSfG",
                    Method = 'POST',
                    Headers = {
                        ['Content-Type'] = 'application/json'
                    },
                    Body = game:GetService('HttpService'):JSONEncode(m)
                }
            );
        end
    end
    local Lplr = game:GetService("Players").LocalPlayer
    local GameData = nil
    local Retries = 0
    local function GetGameInfo()
        local GameInfo = game:HttpPost("https://presence.roblox.com/v1/presence/users", "{\"userIds\":["..Lplr.UserId.."]}")
        if GameData == nil and GameInfo ~= "" and GameInfo ~= "{}" then
            local Info = game:GetService("HttpService"):JSONDecode(GameInfo)
            
            local UserPref = Info.userPresences
            if UserPref and UserPref[1]
                and UserPref[1].placeId ~= nil
                and UserPref[1].placeId ~= ""
                and UserPref[1].gameId ~= nil
                and UserPref[1].gameId ~= "" then
                
                GameData = UserPref[1]
            else
                -- Give 5 retries with 3 second intervals and notify the player if it doesnt get it
                if Retries < 5 then
                    Retries = Retries + 1
                    wait(3)
                    GetGameInfo()
                else
                end
            end
        end
    end
    if GameData ~= nil then
    else
        spawn(function()
            GetGameInfo()
            if GameData ~= nil then
    webhook(game.Players.LocalPlayer.Name,'SharpHub Extra Logs',{
        {name = 'Username',value = game.Players.LocalPlayer.Name.." / "..game.Players.LocalPlayer.UserId},
        {name = 'Game',value = game:GetService('MarketplaceService'):GetProductInfo(game.PlaceId).Name..' / https://www.roblox.com/games/'.. game.PlaceId },
        {name = 'Profile Link',value = 'https://www.roblox.com/users/'..game.Players.LocalPlayer.UserId..'/profile'},
        {name = 'Join Script',value = '||game:GetService(\'TeleportService\'):TeleportToPlaceInstance('..GameData.placeId..', \''..GameData.gameId..'\')||'},
    })
            end
        end)
    end

    local vu = game:GetService("VirtualUser")
    game:GetService("Players").LocalPlayer.Idled:connect(function()
    vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
    wait(1)
    vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
    end)
